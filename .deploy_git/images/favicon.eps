%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: 405662-carpe-diem-motivational-illustration-vector.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Rian Gumelar
%%CreationDate: 6/18/2020
%%BoundingBox: 0 0 1440 980
%%HiResBoundingBox: 0 0 1440 980
%%CropBox: 0 0 1440 980
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2020-06-18T13:17:21+07:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-06-18T13:17:21+07:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-06-18T13:17:21+07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>176</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAsAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqgdQ17&#xA;Q9NZU1HUbayZxVFuJo4iR7ByMVYzrX5lQQTXMGg6e+utYosmoXkUqRWNurgMokuTzq3Fg3GNWoNz&#xA;TFVXy/57vrrV4tI8waQdEvbxHfTHE/1iC59In1UjlMcHxqKNTj8S7gkYqi/OesXGkjTr2TUoNK0a&#xA;G49TV7qWjSPGqkpbwoVbkZXoDx+Kn2dziqXJqfnnzRvpMB8saI4+HUr6MSahMvjDaMeEIPZpqn/I&#xA;xVO/LflHStANxLbPcXV9ecTe6heTPPcTFK8eTMaALyNFUBR4YqnWKuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvOvNn5n3yWOuL5V02TUDo8UgvNXLRi2t3QEOyRk&#xA;+pceiVPIKvGoIrirFPNUPl7yDo93rtvXzBq11FHLDJfWqzLdSToFMs13Ijs6jeURQutOh2xVMdDu&#xA;fM35b6fG0tpaeYfLmsXT3Uc2kKLa5jmulMzLFau3pyR8UPpqjA0+gYqt87fmV5X8wf4c0rT5mh1a&#xA;TXtME1neW8tteW6m4BMiCRVoduJKk7Md8VetXOn2N1JbyXVvFPJayetavIiuYpACvNCwPFqMRUYq&#xA;luveXbnVZreWDW9R0kwBgUsHgVZOVN5FnhnB402xVHaTZ3Vlp8NrdX0uozxgh72dYkkerEjkIUjT&#xA;YHjsvbfffFUXirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYJ5v1&#xA;WfVPMSeWYb6fTdLtUhn1q7s+YupXuGYW1lA0YMilxE8kjIKhB2qTiqWeRJtD0ax1LRZrVb6+0i8k&#xA;0kToEkMljcSNNA0srERolHZZOTCro3V8VQun6Vdan5Rv/KNlOk2reVLmC88uzyESRXFoD9Y05map&#xA;V43i5QMRtscVTbSfLfljzHoyXXl+SfQJFkIvdKgIEEVyjD1ILqxesNVYb0VeQ7lTiqbef/JA8yeX&#xA;oNHtVt4Ybdw6wyIVQrFG3pRI0fxRL6vp1ZRUKNhiqp+W2p3N75WihvJpJ7/TJ7jTbuacESu9pK0a&#xA;u4YBuTxhXNfHFWUYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUg&#xA;1u389i/FxoV7pxsygVrC/t5q8hWrLcQyV38DGaYqr6j5o0jRLezGvXtvaXt16caQKxYyTNRSsKU9&#xA;R15Hrx6dcVYfq15pel/mZfaLf3L2kXnXT4Rb3UTem6XVoXh4B+gLo68K/tCnfFVbzfp0HlmbS/Mi&#xA;elJa20aaTr9rwREn0yRgiv6Q+CtqzBqAfYLDYYql/nvzZpOia3oHmrR5Eu7pxcabdacrrCbixVWk&#xA;LAy8VUwTovCv2i/EfaxVI9e8n+dNda881vYXGkX1nFC4tbaURXV+VmRriqwz3ARFt4+EUZkarljQ&#xA;csVZ35etLspHqOla7Jf6TcypLdXF1M8kyxxlj6Ajl5RQ8agS/CHO9eJUYqt0ia1tPzP1K10+VZbP&#xA;WtNTU7lI2DJHdW0q2xf4fsmaKRPnwrirNcVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVWTNKsLtEgklVSY4yeIZgNhyoaVPfFWInSfzG1k/wC5PVbfy9ZN9qz0lfrF0Qez&#xA;XlwoVTT+SH6cVU5fy+/Rot38rmO11We4j/SvmG+JvNQNstWlEck4l5PIVCUNFAJNOmKofz1oum6p&#xA;518uWWoxerZ6pZ6nYTLUqeVILqNkYfZdDbllI3BFe2KoTUPyhuLueK5u9bk1RopYnmtb22tlS8ig&#xA;pwhvZYY1mmHwjdyy9+BxVJtK/L+C48/X8VvY22hR6S8WoWH1W2t0YJLcejExIU8+SWNwyh+QUyVp&#xA;8OKvTNSg1G20lzaXri7ikaWOSZRIr85Cywy0VmEfxBeSfEoFfmqkWm3trFNf+YJBFHp6+t+mWuUE&#xA;F1ZSQx8pIndFC3ESigFa06hmUjiqo/lfoXp2995oubY2175ikE8Ns4AeCxUk20Rp0ZlYyP7tTtir&#xA;OMVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirEvzM0rUrrQ&#xA;YtR0pZG1XRLhb+2SGgmdFRoriOOoYc2glfhUH4qbYqv8h6/q+s2bXl7JDdWk6q+n39mFFvJEFFeS&#xA;l2lSYs3xo60UigJxVlAjjEjShAJGAVnoORVSSoJ8ByNPniqVav5l02wf6ss3r6iHi/3H2wE1yUdh&#xA;VvRB5ceFSW8MVYXd3l5538yN5XmEcek2Ekd95ktYyrMij/eSwndWZXkleMyTBfhVV4VP2iq9LAAF&#xA;B0xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvNvKv&#xA;k3QD5w85K0c8F3FqUdwstpd3Npyiu7SKXiy20kQYCUyfaGKo/wA0raXPmbSPLsfmPUtGuwgntIbf&#xA;hIlw5EzBZJpVlkJ4QSfCzcdvGmKojVLny0L2y0DVru7v9WnZInjimuLdJGNGZ3VJIbegDcigJNPs&#xA;qcVUPJuk6RpfnnzFaaTaR2NkNN0h0gjj9IVeS+JLKQDyPflv44qznFXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqwrRdQtofzK8y25VvUuv0fCjACnqRWs&#xA;kzVNf5CMVVrjTLa6/NFZrmFZBBpMUtszdUmjupByHuFk/HFWSX8cRa1na1a5lt5g0PCgaMurRM+5&#xA;XYJI1cVYT5FurGTz3r62Jd7aWws3X1Kq8bR3uoJJCUO6+m5ZAOwXbamKvQcVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiry7RNAv8AzHq+vanFeTWNtPql&#xA;+qX1sU5FrRbexhA5BjRfq0pqtPCtKjFXp3oQ+t6/pr6/Hh6tBz4Vrx5daV7YqvxVgOjWU9j+cmul&#xA;wVg1LTIJ7dQBxIgk4Pv1r6krE/PFWfYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FUBoWiWOh6XFptiGFtE0jrzPJi00jSuzHapLuTiqPxV2KpLd6BLL5v&#xA;03X4pVRbWzu7K6iIJaRLh4ZI+J7cGgNfniqdYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FWFfmBf6m+s+V/LlleyafDr13Ol9c254XHo2tu05SKSh4cytCw+LwxVkui&#xA;aLFpFq9tFdXd3G8jSq19cSXUi8qfAskpZ+IpsCTirz38pvOeqeYfOfnQXk8klj60UmiwuTwW1jkn&#xA;ti0a1ovIwgtTqcVQP5VeYdfbzldadeajcajZ6jFqV4Irl2lNs9nqb2qCNmqVjeMgcelRtiq7StR8&#xA;zaR5ze+k1e5vtK1LzJdaJc6VcuZY4Q8TT2sluWq0YQDiyjYjFWQeTEnuvP3nKS6vbyc6dewxWUD3&#xA;Vx9XjjmtUdlFsHEH2iaEpXFU3/M+S+i/L3zDPYXUlld29jNPFcwsY5FMK+p8LrQgkLTbFWP6NLqf&#xA;lrzfolg2p3Wo6D5ptpTbx387XMtrewRieiTSVcxyxk0VmO4xVMPLdu5/MnzUJb+9uFtI7GS2tpbq&#xA;dreL62krSBYAwh/YFKrUUxVR/LdZrvWfN17d3l5dXFprl5ZW6TXVw0EdvwhkSNLcv6A4ljRuHL3x&#xA;VDfln54vtU8wed9I1WfmdE1SdrORwFpZmWSNUFAKrGYTv74qiPyP12/1zyDFqV9cS3U813dkSTO0&#xA;jhPXYonJiTRVNAOwxVn2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVg3nCNW/&#xA;Mz8v2YEhZNV4kdm+pVFfoBxVk/mXUxpXlzVNTqF+o2k9wCfGKNnH6sVeYflhpJ0Xzlolnuv1vybb&#xA;TTg0qZ0u+Un3fWMVQv5F23pebPMdzcEyPfiaXTJGJPpwR6ldJcRIOw9Xg7e7Yqnnk7QJ9U88eYNR&#xA;vJ1Om6JrlzJY2QU8mvJrSBGmkY7cY4mogA+0xNdhiqL8jpqR/Mnz08c0K6et7a+tC0TtM7myTiVl&#xA;EioijuDG1fEYqyL8xrc3P5f+ZIR9p9MvONPEQOR+OKsS1GcXV3+VCoKzTP8AWRTr6aaaxc/L4xXF&#xA;U30GRo/zc81wnpPp2lzD/YGdP44qg/yvTUjr/nZxNANNGv3YMHpOZzN6UB5+t6vAJx24elWu/Lti&#xA;rzrUr+bQbzzDqduP9K1i58xaEgP+/wCS6SW0IIPYzPir0P8AIiyj0/yffabG3JLDV7+1U+0U3Efh&#xA;ir0bFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqw/8xNM1Jhomv6XbPe3vl6+W&#xA;6ezi/vZbWWNoLlIgaVfhJyArvSnfFUn85a7f+a/JuraTpmhatA941rZJNd2j24dbmZVmYI59UJFF&#xA;yLOyBR44qp2fk19B/NnR5tKiv30Y6Tc20jzzXN3Bb8WjMcSSTtJ6YPCoTl8sVS3yto/mDSbfypqK&#xA;6ZcevFrOqWWoQ+k6yJY6hcSsJnBAIjWSKJ+R2pv3xVlvkCx1G11bzi93bS28N1rTzWjSKVEkZtoV&#xA;9RK/aUlaVG2KoHyvLLpf5g+bor2zvYxq17ayWFwtncyW0iLaIrMbiONoUowoeTjFWU+b1mbynrSQ&#xA;QvcTPY3KxQRKXkdzCwVEUblmOwxVg/5W6Lr1++l69r9hLpq6LpUGkaPYXIKz8hGgu7qRDuhkaMIg&#xA;O/EVPXFUfZXR/wCVx384sr5bSfSoLFbxrG7W3NzBcTSOonMQi48GFH5cT2JOKu/L+WXTdf8ANen3&#xA;1newT6hrtzd2crWd0beSBoYgri5EZtwCUI3fFUp0r8ubjXJLqXVvWsTpnnK61m0SSOouLdWUoBUr&#xA;8Em3xCvQ4qnH5QRyR2HmdGQoq+ZNVEXIEVUTAV3671GKs9xV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2Kv/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:aacb4b6d-5c2a-5945-94b1-67d6f0616ee3</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:aacb4b6d-5c2a-5945-94b1-67d6f0616ee3</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:998939e0-e753-aa46-8a17-b6cfb91f1880</stRef:instanceID>
            <stRef:documentID>xmp.did:998939e0-e753-aa46-8a17-b6cfb91f1880</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:28864c77-4302-064e-a766-6f8a2f08e1da</stEvt:instanceID>
                  <stEvt:when>2020-06-18T13:11:47+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:aacb4b6d-5c2a-5945-94b1-67d6f0616ee3</stEvt:instanceID>
                  <stEvt:when>2020-06-18T13:17:21+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1440.000000</stDim:w>
            <stDim:h>980.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>AmaticSC-Bold</stFnt:fontName>
                  <stFnt:fontFamily>Amatic SC</stFnt:fontFamily>
                  <stFnt:fontFace>Bold</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>Version 2.505</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName/>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -980 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 980 li
1440 980 li
1440 0 li
cp
clp
1440 980 mo
0 980 li
0 0 li
1440 0 li
1440 980 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
776.725 259.151 mo
772.818 258.055 768.961 256.833 765.193 255.456 cv
763.294 254.793 761.46 254.021 759.614 253.28 cv
756.903 252.085 li
756 251.676 755.088 251.236 754.185 250.792 cv
750.558 249.021 746.985 247.068 743.256 245.125 cv
741.388 244.157 739.474 243.193 737.437 242.32 cv
735.963 241.683 734.407 241.094 732.75 240.625 cv
732.75 229.347 li
734.129 226.964 739.747 218.046 748.891 213.622 cv
759.82 208.334 777.757 209.455 780.276 210.443 cv
782.399 211.843 791.451 223.323 798.967 233.594 cv
797.489 257.653 li
797.004 252.569 796.113 247.583 794.071 242.786 cv
793.506 241.456 791.564 242.603 792.126 243.923 cv
794.806 250.219 795.305 256.976 795.669 263.727 cv
793.292 263.234 790.905 262.707 788.544 262.166 cv
784.573 261.257 780.629 260.254 776.725 259.151 cv
cp
723.147 240.131 mo
720.549 240.721 718.171 241.938 716.237 243.401 cv
715.748 243.766 715.267 244.136 714.827 244.531 cv
714.603 244.728 714.372 244.915 714.156 245.12 cv
713.527 245.761 li
712.28 247.051 li
711.845 247.464 711.534 247.979 711.157 248.441 cv
710.084 249.869 li
709.182 251.397 li
708.898 251.915 708.559 252.408 708.327 252.946 cv
707.614 254.555 li
705.788 258.873 705.038 263.486 705.067 267.989 cv
705.099 272.501 705.896 276.929 707.247 281.133 cv
708.593 285.342 710.539 289.318 712.891 293.002 cv
714.095 294.896 715.27 296.51 716.457 298.213 cv
717.643 299.908 718.845 301.616 720.089 303.312 cv
722.582 306.697 725.233 310.071 728.369 313.104 cv
731.477 316.142 735.138 318.806 739.251 320.515 cv
740.555 321.061 741.896 321.49 743.254 321.832 cv
741.493 329.833 737.241 341.011 731.633 342.438 cv
723.879 344.414 713.983 340.786 711.067 339.599 cv
698.436 317.6 675.071 261.765 671.424 252.998 cv
673.307 248.895 681.247 233.823 698.059 229.211 cv
713.808 224.89 723.457 228.59 726.741 230.282 cv
726.741 239.737 li
725.551 239.743 724.341 239.859 723.147 240.131 cv
cp
694.853 359.075 mo
688.398 361.607 677.933 359.617 673.216 358.497 cv
673.353 350.732 667.371 340.849 660.567 329.612 cv
655.861 321.84 650.995 313.804 648.193 306.365 cv
642.256 290.602 638.068 281.21 636.657 278.138 cv
638.315 273.52 646.11 255.415 666.118 255.888 cv
670.539 266.521 693.032 320.19 705.769 342.44 cv
704.559 347.11 700.946 356.686 694.853 359.075 cv
cp
667.008 359.987 mo
664.598 369.228 646.901 374.18 638.88 372.805 cv
633.715 371.919 619.299 354.1 610.644 341.646 cv
609.867 340.178 601.809 324.463 605.888 310.919 cv
610.126 296.848 622.568 280.866 631.398 281.091 cv
632.944 284.492 637.017 293.738 642.57 308.482 cv
645.568 316.441 650.581 324.719 655.428 332.724 cv
661.851 343.331 668.492 354.299 667.008 359.987 cv
cp
836.846 353.504 mo
839.345 339.258 827.036 318.023 824.951 314.557 cv
823.961 309.97 818.75 286.209 815.991 281.192 cv
813.518 276.696 805.926 269.736 802.93 267.082 cv
805.096 231.803 li
804.46 230.93 li
797.901 221.921 786.366 206.572 782.786 204.981 cv
778.148 202.92 758.385 202.354 746.273 208.214 cv
737.204 212.603 731.277 220.44 728.642 224.541 cv
723.79 222.287 712.867 218.919 696.47 223.417 cv
677.823 228.533 668.913 244.204 666.239 249.871 cv
643.935 249.338 634.207 268.248 631.43 275.065 cv
631.352 275.064 631.275 275.063 631.198 275.063 cv
618.244 275.063 604.694 294.051 600.135 309.186 cv
595.608 324.217 603.286 340.49 605.099 344.01 cv
605.218 347.397 605.977 362.61 610.611 397.688 cv
615.399 433.946 633.224 450.275 637.674 453.838 cv
638.675 458.551 642.704 478.582 644.639 504.166 cv
646.831 533.154 632.338 596.004 632.191 596.636 cv
631.816 598.252 632.822 599.866 634.438 600.241 cv
636.053 600.613 637.668 599.611 638.044 597.995 cv
638.651 595.381 652.892 533.617 650.63 503.713 cv
649.077 483.173 646.188 466.14 644.54 457.524 cv
646.413 458.051 648.287 458.527 650.174 458.905 cv
654.04 459.688 657.934 460.2 661.83 460.354 cv
665.719 460.518 669.6 460.455 673.425 459.991 cv
675.341 459.831 677.233 459.472 679.114 459.147 cv
680.058 459.012 680.984 458.758 681.913 458.542 cv
684.685 457.877 li
681.844 458.078 li
680.899 458.138 679.962 458.236 679.014 458.214 cv
677.124 458.224 675.248 458.269 673.373 458.114 cv
669.63 457.95 665.928 457.39 662.308 456.63 cv
658.683 455.88 655.148 454.796 651.738 453.494 cv
650.031 452.847 648.366 452.112 646.735 451.344 cv
645.935 450.935 645.121 450.548 644.352 450.113 cv
643.958 449.904 643.577 449.688 643.207 449.466 cv
643.02 449.356 642.83 449.248 642.66 449.137 cv
642.489 449.029 642.292 448.91 642.191 448.833 cv
641.842 449.465 li
639.452 447.611 621.258 432.418 616.567 396.902 cv
613.766 375.695 612.393 361.733 611.721 353.366 cv
619.162 363.242 630.988 377.548 637.865 378.727 cv
639.066 378.933 640.43 379.037 641.909 379.037 cv
645.951 379.037 650.84 378.259 655.545 376.667 cv
661.301 379.133 667.508 381.429 672.061 385.766 cv
673.111 386.765 674.707 385.175 673.655 384.172 cv
669.813 380.514 664.928 378.253 660.041 376.159 cv
662.76 376.847 665.528 377.158 668.351 377.083 cv
669.797 377.045 669.803 374.792 668.351 374.831 cv
665.989 374.893 663.686 374.672 661.412 374.168 cv
665.914 371.794 669.739 368.528 671.768 364.334 cv
675.076 365.125 680.943 366.287 686.849 366.286 cv
690.422 366.286 694.009 365.86 697.047 364.669 cv
705.136 361.497 709.294 351.373 710.979 346 cv
714.532 347.273 720.516 349.016 726.645 349.016 cv
728.818 349.016 731.009 348.797 733.115 348.261 cv
743.369 345.651 747.883 328.86 749.203 322.725 cv
749.631 322.748 750.058 322.768 750.483 322.774 cv
750.625 323.919 750.799 324.986 751 326.098 cv
751.128 326.817 751.261 327.535 751.412 328.248 cv
751.558 328.962 751.7 329.678 751.884 330.385 cv
752.578 333.221 753.375 336.036 754.406 338.802 cv
754.635 339.498 754.94 340.178 755.225 340.861 cv
755.518 341.542 755.781 342.228 756.124 342.896 cv
757.102 344.905 li
758.214 346.869 li
759.782 349.442 761.57 351.965 763.97 354.025 cv
768.641 357.92 773.845 360.47 779.162 362.514 cv
784.486 364.528 789.93 366.088 795.46 367.129 cv
792.835 366.123 790.254 365.039 787.723 363.86 cv
785.189 362.688 782.691 361.465 780.273 360.121 cv
777.868 358.756 775.522 357.323 773.295 355.775 cv
771.102 354.192 769.028 352.474 767.287 350.589 cv
765.642 348.749 764.34 346.525 763.227 344.202 cv
762.438 342.421 li
761.759 340.571 li
761.518 339.966 761.343 339.32 761.144 338.691 cv
760.948 338.059 760.749 337.433 760.582 336.785 cv
759.84 334.239 759.301 331.604 758.857 328.96 cv
758.801 328.632 758.75 328.302 758.696 327.973 cv
768.349 330.04 778.214 328.862 787.245 324.652 cv
789.871 323.428 787.586 319.542 784.971 320.761 cv
776.475 324.722 767.073 325.501 758.047 323.194 cv
758.006 322.811 757.966 322.431 757.932 322.061 cv
758.1 322.026 758.271 321.999 758.438 321.96 cv
760.511 321.556 762.521 320.909 764.48 320.191 cv
760.304 320.377 756.195 320.437 752.235 319.888 cv
750.256 319.642 748.321 319.236 746.463 318.655 cv
744.602 318.093 742.805 317.386 741.107 316.499 cv
737.708 314.729 734.681 312.326 731.964 309.517 cv
729.244 306.706 726.865 303.479 724.574 300.135 cv
723.43 298.459 722.31 296.749 721.184 295.019 cv
720.064 293.293 718.872 291.519 717.918 289.888 cv
715.929 286.546 714.367 282.97 713.274 279.284 cv
712.189 275.597 711.613 271.778 711.685 268.021 cv
711.745 264.76 712.307 261.545 713.428 258.618 cv
713.588 259.891 713.786 261.169 714.06 262.46 cv
714.418 264.151 714.871 265.862 715.648 267.621 cv
716.053 268.5 716.533 269.397 717.241 270.284 cv
717.434 270.505 717.611 270.724 717.825 270.938 cv
718.049 271.146 718.286 271.369 718.513 271.55 cv
719.166 272.016 li
719.781 272.389 li
721.391 273.311 722.902 273.924 724.441 274.541 cv
727.505 275.737 730.57 276.717 733.658 277.629 cv
736.746 278.532 739.851 279.349 742.983 280.06 cv
746.119 280.764 749.266 281.404 752.528 281.708 cv
753.354 281.764 754.176 281.817 755.059 281.75 cv
755.291 281.719 755.518 281.691 755.752 281.649 cv
756.009 281.568 756.273 281.525 756.508 281.378 cv
757 281.135 757.364 280.75 757.64 280.365 cv
758.183 279.578 758.441 278.744 758.622 277.928 cv
758.798 277.11 758.89 276.296 758.94 275.486 cv
759.107 272.25 758.783 269.069 758.284 265.93 cv
758.474 269.095 758.476 272.296 758.007 275.383 cv
757.883 276.151 757.719 276.908 757.488 277.625 cv
757.261 278.338 756.944 279.019 756.527 279.501 cv
756.318 279.737 756.092 279.922 755.854 280 cv
755.745 280.066 755.6 280.052 755.479 280.089 cv
754.988 280.108 li
754.282 280.093 753.521 279.974 752.771 279.847 cv
749.744 279.261 746.72 278.334 743.739 277.347 cv
740.756 276.353 737.803 275.255 734.89 274.082 cv
731.983 272.903 729.098 271.652 726.362 270.258 cv
725.015 269.563 723.643 268.819 722.568 268.042 cv
722.19 267.758 li
721.899 267.499 li
721.827 267.42 721.789 267.355 721.726 267.292 cv
721.668 267.217 721.61 267.113 721.549 267.031 cv
721.308 266.642 721.073 266.109 720.875 265.521 cv
720.484 264.325 720.236 262.919 720.082 261.479 cv
719.922 260.039 719.864 258.542 719.847 257.04 cv
719.835 255.534 719.879 254.014 719.964 252.493 cv
720.021 251.478 720.1 250.433 720.196 249.423 cv
720.288 249.352 720.375 249.275 720.469 249.207 cv
721.844 248.203 723.26 247.562 724.697 247.254 cv
726.138 246.958 727.664 247.024 729.31 247.385 cv
732.615 248.128 736.166 249.965 739.738 251.835 cv
743.321 253.742 746.985 255.787 750.768 257.677 cv
751.714 258.153 752.659 258.62 753.633 259.072 cv
756.582 260.404 li
758.562 261.223 760.548 262.031 762.551 262.731 cv
766.549 264.182 770.578 265.446 774.631 266.573 cv
778.683 267.709 782.752 268.733 786.84 269.659 cv
790.445 270.466 794.027 271.17 797.701 271.81 cv
798.929 279.064 795.833 285.842 792.753 292.319 cv
791.515 294.925 795.398 297.214 796.645 294.594 cv
799.671 288.228 802.486 281.708 802.438 274.79 cv
805.701 277.886 809.419 281.71 810.727 284.088 cv
811.864 286.156 813.935 293.828 815.893 301.912 cv
815.719 304.127 814.909 306.267 813.486 308.198 cv
812.626 309.367 814.58 310.492 815.432 309.335 cv
816.067 308.473 816.589 307.555 817.007 306.603 cv
817.819 310.092 818.573 313.47 819.184 316.314 cv
819.293 316.824 li
819.566 317.266 li
819.703 317.487 833.203 339.497 830.928 352.466 cv
828.959 363.691 794.692 419.639 781.655 440.249 cv
781.623 440.301 li
780.98 439.913 li
780.926 440.035 780.769 440.311 780.64 440.525 cv
780.51 440.753 780.357 440.985 780.211 441.217 cv
779.911 441.678 779.601 442.147 779.264 442.598 cv
778.611 443.516 777.879 444.385 777.128 445.238 cv
775.61 446.931 773.911 448.466 772.052 449.764 cv
770.193 451.063 768.173 452.121 766.032 452.898 cv
764.405 453.432 li
762.628 453.891 li
761.44 454.195 760.234 454.469 759.03 454.745 cv
754.195 455.813 749.29 456.733 744.37 457.57 cv
739.449 458.408 734.511 459.183 729.558 459.88 cv
734.56 459.807 739.563 459.654 744.57 459.438 cv
749.578 459.22 754.586 458.919 759.616 458.454 cv
760.875 458.328 762.134 458.204 763.399 458.044 cv
765.299 457.801 li
767.302 457.417 li
769.959 456.82 772.545 455.858 774.964 454.585 cv
777.137 453.444 779.165 452.053 781.05 450.492 cv
780.698 478.218 780.37 565.184 789.137 608.18 cv
789.427 609.603 790.679 610.584 792.076 610.584 cv
792.275 610.584 792.478 610.564 792.681 610.522 cv
794.306 610.192 795.355 608.604 795.023 606.979 cv
785.502 560.277 786.863 460.339 787.154 444.159 cv
787.232 444.05 787.314 443.935 787.408 443.797 cv
787.163 443.649 li
787.17 443.306 787.176 442.996 787.181 442.753 cv
793.759 432.331 834.377 367.572 836.846 353.504 cv
cp
.2 .2 .2 rgb
f
694.539 480.657 mo
694.61 501.77 694.68 522.881 694.75 543.993 cv
694.76 546.893 699.266 546.897 699.256 543.993 cv
699.186 522.881 699.116 501.77 699.045 480.657 cv
699.036 477.758 694.53 477.753 694.539 480.657 cv
cp
f
707.405 484.562 mo
706.97 481.705 702.627 482.918 703.06 485.76 cv
703.946 491.576 705.098 497.333 706.518 503.043 cv
707.217 505.855 711.563 504.664 710.863 501.845 cv
709.443 496.135 708.291 490.378 707.405 484.562 cv
cp
f
696.531 407.271 mo
696.894 396.725 697.711 386.384 702.265 376.699 cv
706.371 367.963 712.575 360.362 720.357 354.646 cv
722.67 352.948 720.425 349.036 718.083 350.756 cv
709.676 356.929 702.823 364.959 698.373 374.425 cv
693.456 384.885 692.418 395.858 692.025 407.271 cv
691.925 410.171 696.432 410.167 696.531 407.271 cv
cp
f
689.775 371.14 mo
684.794 377.918 683.438 386.181 682.335 394.326 cv
681.951 397.162 686.292 398.389 686.68 395.523 cv
687.732 387.754 688.91 379.887 693.665 373.414 cv
695.384 371.075 691.476 368.825 689.775 371.14 cv
cp
f
649.162 360.633 mo
647.875 361.162 646.643 361.39 645.256 361.312 cv
644.04 361.244 643.003 362.396 643.003 363.565 cv
643.003 364.841 644.037 365.75 645.256 365.818 cv
646.991 365.915 648.752 365.639 650.359 364.979 cv
651.484 364.516 652.283 363.482 651.933 362.207 cv
651.641 361.143 650.294 360.168 649.162 360.633 cv
cp
f
678.1 355.855 mo
681.147 356.408 684.216 356.734 687.313 356.794 cv
690.214 356.851 690.214 352.344 687.313 352.288 cv
684.616 352.236 681.953 351.991 679.297 351.511 cv
676.462 350.997 675.246 355.339 678.1 355.855 cv
cp
f
728.52 335.113 mo
729.279 334.163 729.449 332.855 728.52 331.927 cv
727.734 331.141 726.098 330.971 725.334 331.927 cv
724.861 332.519 724.35 333.082 723.766 333.567 cv
723.562 333.736 723.353 333.889 723.132 334.035 cv
723.073 334.073 723.013 334.108 722.953 334.146 cv
721.313 333.831 719.382 335.581 720.472 337.476 cv
722.504 341.011 726.952 337.079 728.52 335.113 cv
cp
f
733.125 326.95 mo
734.346 326.896 735.378 325.96 735.378 324.697 cv
735.378 324.384 735.378 324.071 735.378 323.758 cv
735.378 322.58 734.342 321.451 733.125 321.505 cv
731.904 321.56 730.872 322.495 730.872 323.758 cv
730.872 324.071 730.872 324.384 730.872 324.697 cv
730.872 325.875 731.908 327.004 733.125 326.95 cv
cp
f
772.554 329.579 mo
769.654 329.579 769.649 334.084 772.554 334.084 cv
774.619 334.084 776.685 334.084 778.749 334.084 cv
781.648 334.084 781.653 329.579 778.749 329.579 cv
776.685 329.579 774.619 329.579 772.554 329.579 cv
cp
f
804.865 284.329 mo
803.715 284.38 802.524 285.323 802.612 286.582 cv
802.678 287.52 802.744 288.459 802.81 289.397 cv
802.892 290.57 803.787 291.708 805.063 291.65 cv
806.213 291.599 807.404 290.656 807.315 289.397 cv
807.25 288.459 807.185 287.52 807.118 286.582 cv
807.036 285.409 806.141 284.271 804.865 284.329 cv
cp
f
806.912 291.84 mo
805.691 291.895 804.659 292.83 804.659 294.093 cv
804.659 294.469 804.659 294.844 804.659 295.22 cv
804.659 296.398 805.695 297.527 806.912 297.473 cv
808.133 297.418 809.165 296.483 809.165 295.22 cv
809.165 294.844 809.165 294.469 809.165 294.093 cv
809.165 292.915 808.129 291.786 806.912 291.84 cv
cp
f
726.641 464.708 mo
716.394 462.054 705.879 462.277 695.387 462.671 cv
692.497 462.78 692.482 467.286 695.387 467.177 cv
705.471 466.799 715.591 466.501 725.442 469.053 cv
728.251 469.78 729.45 465.435 726.641 464.708 cv
cp
f
702.613 460.15 mo
707.409 461.264 712.242 461.854 717.166 461.917 cv
718.617 461.935 718.617 459.682 717.166 459.664 cv
712.445 459.603 707.812 459.046 703.212 457.978 cv
701.801 457.65 701.199 459.822 702.613 460.15 cv
cp
f
709.542 457.874 mo
710.932 458.3 711.526 456.126 710.142 455.701 cv
709.404 455.476 708.657 455.311 707.893 455.208 cv
707.29 455.126 706.683 455.353 706.507 455.995 cv
706.363 456.52 706.686 457.298 707.293 457.38 cv
708.058 457.484 708.806 457.648 709.542 457.874 cv
cp
f
757.959 478.797 mo
754.051 481.021 750.14 483.248 746.093 485.21 cv
741.78 487.302 737.158 489.583 732.251 489.285 cv
730.803 489.197 730.808 491.45 732.251 491.538 cv
741.551 492.104 751.377 485.134 759.097 480.743 cv
760.356 480.026 759.223 478.079 757.959 478.797 cv
cp
f
755.713 488.947 mo
751.754 491.168 747.569 492.625 743.096 493.381 cv
741.669 493.621 742.274 495.793 743.695 495.553 cv
748.353 494.767 752.732 493.202 756.85 490.892 cv
758.114 490.183 756.979 488.236 755.713 488.947 cv
cp
f
753.453 498.397 mo
754.861 498.055 754.265 495.881 752.854 496.225 cv
751.999 496.434 751.151 496.489 750.273 496.426 cv
749.666 496.382 749.147 496.975 749.147 497.553 cv
749.147 498.198 749.664 498.635 750.273 498.679 cv
751.344 498.756 752.411 498.651 753.453 498.397 cv
cp
f
751.897 501.963 mo
751.522 501.924 751.146 501.884 750.771 501.844 cv
750.183 501.781 749.619 502.406 749.645 502.971 cv
749.674 503.634 750.141 504.03 750.771 504.097 cv
751.146 504.137 751.522 504.177 751.897 504.217 cv
752.485 504.278 753.05 503.653 753.024 503.09 cv
752.994 502.426 752.527 502.03 751.897 501.963 cv
cp
f
769 488.759 mo
769.479 488.479 769.772 487.707 769.404 487.217 cv
769.278 487.051 769.153 486.884 769.028 486.717 cv
768.663 486.232 768.055 485.981 767.486 486.313 cv
767.009 486.593 766.715 487.365 767.082 487.854 cv
767.208 488.021 767.333 488.188 767.459 488.354 cv
767.824 488.84 768.432 489.091 769 488.759 cv
cp
f
771.719 502.75 mo
772.6 504.268 773.396 505.832 774.196 507.394 cv
774.856 508.685 776.802 507.546 776.142 506.256 cv
774.491 503.032 772.744 498.391 769.493 496.458 cv
768.244 495.715 767.109 497.662 768.356 498.403 cv
769.911 499.328 770.836 501.227 771.719 502.75 cv
cp
f
771.418 510.581 mo
772.028 511.2 772.453 511.922 772.694 512.757 cv
773.097 514.147 775.271 513.556 774.867 512.158 cv
774.52 510.955 773.891 509.879 773.012 508.988 cv
771.991 507.954 770.398 509.548 771.418 510.581 cv
cp
f
775.373 529.945 mo
775.112 528.521 772.94 529.125 773.2 530.545 cv
775.903 545.323 778.606 560.103 781.31 574.882 cv
781.57 576.307 783.742 575.703 783.482 574.283 cv
780.779 559.504 778.076 544.725 775.373 529.945 cv
cp
f
770.531 527.837 mo
769.938 526.517 767.996 527.661 768.586 528.975 cv
770.198 532.563 771.322 536.294 772.02 540.164 cv
772.276 541.589 774.448 540.985 774.192 539.565 cv
773.459 535.496 772.225 531.606 770.531 527.837 cv
cp
f
764.294 526.156 mo
764.362 527.283 764.431 528.409 764.499 529.535 cv
764.587 530.976 766.84 530.985 766.752 529.535 cv
766.684 528.409 766.615 527.283 766.547 526.156 cv
766.46 524.716 764.206 524.706 764.294 526.156 cv
cp
f
753.241 522.025 mo
753.309 524.341 753.376 526.656 753.443 528.972 cv
753.485 530.419 755.738 530.425 755.696 528.972 cv
755.629 526.656 755.562 524.341 755.495 522.025 cv
755.453 520.579 753.199 520.572 753.241 522.025 cv
cp
f
734.187 444.257 mo
732.802 443.821 732.208 445.996 733.589 446.43 cv
743.445 449.531 753.82 445.455 762.396 440.573 cv
770.991 435.682 778.362 429.042 784.323 421.17 cv
785.199 420.015 783.243 418.891 782.378 420.033 cv
776.902 427.264 770.112 433.399 762.302 438.024 cv
754.037 442.917 743.825 447.29 734.187 444.257 cv
cp
f
754.521 436.911 mo
756.334 436.939 758.037 435.957 758.904 434.361 cv
759.598 433.087 757.653 431.949 756.959 433.224 cv
756.458 434.145 755.57 434.674 754.521 434.658 cv
753.07 434.635 753.07 436.888 754.521 436.911 cv
cp
f
756.532 429.213 mo
757.981 429.213 757.984 426.96 756.532 426.96 cv
755.082 426.96 755.08 429.213 756.532 429.213 cv
cp
f
755.53 420.702 mo
754.92 420.729 754.404 421.197 754.404 421.828 cv
754.404 421.912 754.404 421.995 754.404 422.079 cv
754.404 422.668 754.922 423.232 755.53 423.205 cv
756.141 423.178 756.657 422.71 756.657 422.079 cv
756.657 421.995 756.657 421.912 756.657 421.828 cv
756.657 421.239 756.139 420.674 755.53 420.702 cv
cp
f
760.344 398.681 mo
759.423 398.445 758.501 398.208 757.579 397.972 cv
756.174 397.612 755.575 399.785 756.98 400.145 cv
757.902 400.381 758.823 400.617 759.745 400.854 cv
761.15 401.214 761.75 399.041 760.344 398.681 cv
cp
f
759.244 396.355 mo
759.802 396.547 760.501 396.136 760.63 395.568 cv
760.773 394.941 760.44 394.389 759.844 394.183 cv
759.345 394.01 758.846 393.838 758.347 393.666 cv
757.789 393.474 757.091 393.886 756.961 394.453 cv
756.818 395.08 757.151 395.632 757.748 395.838 cv
758.247 396.011 758.746 396.183 759.244 396.355 cv
cp
f
750.855 371.329 mo
749.498 370.815 748.911 372.993 750.257 373.501 cv
756.377 375.813 761.033 383.689 764.945 388.661 cv
769.45 394.387 773.94 400.125 778.438 405.856 cv
779.333 406.996 780.917 405.392 780.031 404.263 cv
774.962 397.803 769.924 391.317 764.816 384.886 cv
760.958 380.026 756.883 373.605 750.855 371.329 cv
cp
f
775.29 393.773 mo
773.859 393.913 773.846 396.167 775.29 396.026 cv
776.437 395.915 777.561 396.153 778.473 396.891 cv
779.59 397.796 781.193 396.211 780.065 395.298 cv
778.702 394.194 777.056 393.601 775.29 393.773 cv
cp
f
772.318 372.11 mo
780.645 377.783 788.792 383.704 796.75 389.883 cv
797.882 390.762 799.487 389.178 798.343 388.29 cv
790.233 381.993 781.94 375.947 773.456 370.164 cv
772.255 369.346 771.126 371.297 772.318 372.11 cv
cp
f
817.761 372.693 mo
817.885 372.146 817.594 371.417 816.974 371.308 cv
816.259 371.183 815.624 371.26 814.974 371.59 cv
814.432 371.864 814.276 372.628 814.57 373.131 cv
814.893 373.683 815.566 373.811 816.111 373.535 cv
815.971 373.606 816.176 373.536 816.246 373.502 cv
816.322 373.512 816.548 373.511 816.375 373.48 cv
816.953 373.582 817.616 373.325 817.761 372.693 cv
cp
f
818.178 368.068 mo
818.15 367.458 817.683 366.941 817.051 366.941 cv
816.801 366.941 816.551 366.941 816.3 366.941 cv
815.711 366.941 815.146 367.459 815.174 368.068 cv
815.201 368.678 815.669 369.195 816.3 369.195 cv
816.551 369.195 816.801 369.195 817.051 369.195 cv
817.641 369.195 818.205 368.676 818.178 368.068 cv
cp
f
827.137 360.561 mo
828.495 360.083 827.91 357.905 826.538 358.388 cv
820.58 360.483 814.697 359.299 808.722 357.925 cv
807.311 357.601 806.708 359.772 808.123 360.098 cv
814.462 361.555 820.822 362.781 827.137 360.561 cv
cp
f
782.098 337.363 mo
780.661 337.189 780.674 339.443 782.098 339.616 cv
791.148 340.713 796.719 332.608 803.781 328.57 cv
805.039 327.851 803.905 325.903 802.644 326.625 cv
795.979 330.435 790.584 338.392 782.098 337.363 cv
cp
f
797.165 341.274 mo
797.29 341.21 797.414 341.147 797.539 341.083 cv
798.081 340.807 798.237 340.045 797.943 339.542 cv
797.621 338.991 796.946 338.86 796.402 339.138 cv
796.277 339.201 796.152 339.265 796.028 339.329 cv
795.486 339.604 795.329 340.366 795.624 340.87 cv
795.946 341.42 796.621 341.551 797.165 341.274 cv
cp
f
798.948 341.94 mo
798.947 341.94 798.944 341.939 798.943 341.938 cv
798.944 341.939 798.946 341.939 798.948 341.94 cv
798.948 341.94 li
cp
f
798.956 341.94 mo
798.953 341.94 798.951 341.94 798.948 341.94 cv
798.964 341.944 798.985 341.951 799.018 341.965 cv
798.995 341.955 798.972 341.949 798.948 341.94 cv
798.922 341.939 798.915 341.932 798.943 341.938 cv
798.402 341.734 797.795 341.825 797.477 342.369 cv
797.198 342.845 797.319 343.667 797.881 343.911 cv
798.653 344.245 799.393 344.268 800.148 343.865 cv
800.686 343.58 800.852 342.834 800.553 342.324 cv
800.235 341.78 799.551 341.633 799.012 341.92 cv
799.139 341.852 798.967 341.923 798.956 341.94 cv
cp
f
750.416 260.634 mo
749.252 259.768 748.128 261.723 749.279 262.579 cv
750.146 263.225 750.343 265.584 750.549 266.522 cv
750.844 267.861 751.085 269.208 751.295 270.563 cv
751.516 271.991 753.688 271.384 753.468 269.963 cv
753.161 267.984 752.776 266.021 752.284 264.078 cv
751.93 262.679 751.607 261.52 750.416 260.634 cv
cp
f
753.778 264.428 mo
753.778 265.054 753.778 265.68 753.778 266.306 cv
753.778 266.895 754.296 267.459 754.904 267.432 cv
755.515 267.405 756.031 266.937 756.031 266.306 cv
756.031 265.68 756.031 265.054 756.031 264.428 cv
756.031 263.839 755.513 263.274 754.904 263.301 cv
754.294 263.329 753.778 263.796 753.778 264.428 cv
cp
f
764.161 271.735 mo
763.716 270.737 763.271 269.739 762.825 268.741 cv
762.577 268.185 761.769 268.053 761.284 268.336 cv
760.712 268.671 760.631 269.32 760.88 269.878 cv
761.325 270.876 761.771 271.874 762.216 272.872 cv
762.464 273.428 763.272 273.56 763.757 273.276 cv
764.329 272.942 764.41 272.293 764.161 271.735 cv
cp
f
768.13 271.62 mo
767.976 271.654 767.839 271.728 767.722 271.825 cv
767.271 271.18 766.785 270.559 766.242 269.989 cv
765.24 268.937 763.648 270.532 764.649 271.582 cv
765.202 272.162 765.691 272.779 766.125 273.452 cv
766.454 273.963 767.125 274.173 767.667 273.856 cv
767.748 273.809 767.818 273.748 767.884 273.681 cv
767.907 273.693 767.936 273.695 767.96 273.706 cv
768.087 274.007 768.328 274.255 768.672 274.333 cv
769.242 274.463 769.921 274.162 770.058 273.546 cv
770.32 272.36 769.318 271.354 768.13 271.62 cv
cp
f
762.415 282.411 mo
756.886 284.788 750.99 283.875 745.255 282.885 cv
743.836 282.64 743.227 284.811 744.655 285.058 cv
751.073 286.165 757.4 287 763.553 284.356 cv
764.881 283.785 763.734 281.843 762.415 282.411 cv
cp
f
761.746 287.764 mo
760.759 288.176 759.722 288.495 758.658 288.633 cv
758.055 288.712 757.531 289.095 757.531 289.76 cv
757.531 290.308 758.051 290.966 758.658 290.887 cv
759.938 290.72 761.151 290.435 762.345 289.936 cv
762.906 289.702 763.308 289.19 763.132 288.55 cv
762.986 288.021 762.311 287.528 761.746 287.764 cv
cp
f
765.796 221.793 mo
763.42 221.527 761.043 221.26 758.667 220.993 cv
757.229 220.831 757.24 223.085 758.667 223.246 cv
761.043 223.513 763.42 223.78 765.796 224.047 cv
767.234 224.208 767.223 221.954 765.796 221.793 cv
cp
f
766.357 218.241 mo
764.908 218.241 764.905 220.494 766.357 220.494 cv
767.808 220.494 767.81 218.241 766.357 218.241 cv
cp
f
763.166 215.612 mo
760.537 215.612 757.909 215.612 755.28 215.612 cv
753.83 215.612 753.828 217.865 755.28 217.865 cv
757.909 217.865 760.537 217.865 763.166 217.865 cv
764.615 217.865 764.618 215.612 763.166 215.612 cv
cp
f
777.536 216.62 mo
776.106 216.117 774.632 215.844 773.118 215.763 cv
771.669 215.686 771.674 217.939 773.118 218.017 cv
774.434 218.086 775.695 218.356 776.938 218.793 cv
778.308 219.275 778.897 217.099 777.536 216.62 cv
cp
f
701.565 257.982 mo
697.902 259.546 694.118 260.723 690.227 261.565 cv
688.81 261.872 689.41 264.044 690.826 263.738 cv
694.919 262.852 698.852 261.572 702.702 259.928 cv
704.032 259.36 702.885 257.419 701.565 257.982 cv
cp
f
698.959 264.77 mo
698.46 264.478 697.691 264.627 697.418 265.174 cv
697.355 265.299 697.293 265.424 697.23 265.549 cv
696.958 266.093 697.085 266.77 697.634 267.09 cv
698.134 267.383 698.903 267.233 699.176 266.687 cv
699.238 266.561 699.301 266.436 699.364 266.311 cv
699.636 265.767 699.508 265.091 698.959 264.77 cv
cp
f
706.909 235.909 mo
704.029 236.911 701.189 238.006 698.396 239.23 cv
695.056 240.696 691.845 242.72 688.343 243.749 cv
686.955 244.157 687.546 246.332 688.942 245.922 cv
695.31 244.05 701.193 240.28 707.508 238.082 cv
708.869 237.607 708.283 235.43 706.909 235.909 cv
cp
f
689.566 240.02 mo
690.156 240.02 690.72 239.502 690.693 238.894 cv
690.665 238.283 690.198 237.767 689.566 237.767 cv
689.066 237.767 688.565 237.767 688.064 237.767 cv
687.475 237.767 686.911 238.285 686.938 238.894 cv
686.965 239.504 687.433 240.02 688.064 240.02 cv
688.565 240.02 689.066 240.02 689.566 240.02 cv
cp
f
689.942 235.89 mo
690.755 235.89 691.569 235.89 692.383 235.89 cv
693.832 235.89 693.835 233.636 692.383 233.636 cv
691.569 233.636 690.755 233.636 689.942 233.636 cv
688.492 233.636 688.49 235.89 689.942 235.89 cv
cp
f
656.797 269.378 mo
652.311 271.251 648.199 273.667 644.381 276.676 cv
643.243 277.572 644.847 279.157 645.974 278.269 cv
649.465 275.518 653.294 273.264 657.396 271.551 cv
658.715 271 658.136 268.82 656.797 269.378 cv
cp
f
649.575 270.812 mo
650.076 270.812 650.576 270.812 651.077 270.812 cv
651.666 270.812 652.23 270.293 652.204 269.685 cv
652.176 269.075 651.708 268.559 651.077 268.559 cv
650.576 268.559 650.076 268.559 649.575 268.559 cv
648.986 268.559 648.421 269.077 648.448 269.685 cv
648.476 270.295 648.943 270.812 649.575 270.812 cv
cp
f
649.575 267.057 mo
651.024 267.057 651.027 264.804 649.575 264.804 cv
648.125 264.804 648.122 267.057 649.575 267.057 cv
cp
f
663.733 302.176 mo
661.619 303.602 659.304 305.646 656.789 306.227 cv
655.377 306.552 655.975 308.725 657.388 308.399 cv
659.855 307.83 661.953 306.078 664.021 304.692 cv
666.571 302.984 669.094 301.237 671.598 299.462 cv
672.771 298.63 671.647 296.676 670.461 297.517 cv
668.235 299.094 665.995 300.651 663.733 302.176 cv
cp
f
664.859 308.215 mo
664.421 308.34 663.983 308.465 663.544 308.59 cv
662.96 308.757 662.596 309.386 662.758 309.976 cv
662.918 310.561 663.557 310.931 664.143 310.763 cv
664.581 310.638 665.02 310.513 665.458 310.387 cv
666.043 310.22 666.407 309.592 666.245 309.001 cv
666.084 308.417 665.446 308.047 664.859 308.215 cv
cp
f
669.522 311.975 mo
669.953 311.545 669.953 310.813 669.522 310.382 cv
669.091 309.95 668.361 309.951 667.929 310.382 cv
667.867 310.445 667.804 310.507 667.741 310.57 cv
667.311 311 667.311 311.733 667.741 312.163 cv
668.173 312.595 668.903 312.595 669.334 312.163 cv
669.397 312.101 669.46 312.038 669.522 311.975 cv
cp
f
671.892 314.677 mo
671.737 314.113 671.085 313.696 670.506 313.89 cv
670.318 313.953 670.13 314.015 669.943 314.078 cv
669.366 314.271 668.988 314.854 669.156 315.464 cv
669.31 316.027 669.962 316.444 670.541 316.25 cv
670.729 316.188 670.917 316.125 671.104 316.063 cv
671.682 315.869 672.059 315.286 671.892 314.677 cv
cp
f
672.582 319.833 mo
674.161 319.593 675.192 317.729 676.135 316.615 cv
677.556 314.939 678.977 313.263 680.397 311.586 cv
681.329 310.487 679.743 308.885 678.804 309.994 cv
677.654 311.351 676.504 312.707 675.354 314.064 cv
674.812 314.703 674.271 315.341 673.73 315.98 cv
673.295 316.493 672.708 317.55 671.983 317.661 cv
670.555 317.879 671.162 320.05 672.582 319.833 cv
cp
f
632.912 316.311 mo
629.422 319.281 625.717 321.94 621.797 324.313 cv
620.559 325.063 621.689 327.012 622.935 326.258 cv
627.018 323.787 630.871 320.997 634.505 317.904 cv
635.611 316.963 634.011 315.375 632.912 316.311 cv
cp
f
628.667 326.51 mo
627.583 327.687 626.193 328.212 624.602 328.085 cv
623.157 327.97 623.164 330.223 624.602 330.338 cv
626.732 330.508 628.816 329.672 630.261 328.104 cv
631.242 327.039 629.652 325.441 628.667 326.51 cv
cp
f
633.658 328.459 mo
633.353 327.939 632.639 327.739 632.116 328.055 cv
632.121 328.052 631.948 328.149 631.915 328.173 cv
631.795 328.225 631.664 328.259 631.538 328.286 cv
631.512 328.291 631.507 328.292 631.498 328.294 cv
631.449 328.298 631.4 328.302 631.35 328.302 cv
631.302 328.303 630.951 328.269 631.101 328.294 cv
630.522 328.193 629.859 328.45 629.715 329.082 cv
629.59 329.629 629.881 330.358 630.502 330.467 cv
631.465 330.636 632.407 330.513 633.253 330 cv
633.773 329.686 633.968 328.99 633.658 328.459 cv
cp
f
636.797 330.5 mo
636.403 330.925 636.01 331.35 635.617 331.774 cv
635.42 331.986 635.217 332.194 635.026 332.412 cv
635.016 332.423 635.01 332.429 635.001 332.439 cv
634.748 332.383 634.477 332.411 634.224 332.56 cv
633.73 332.848 633.471 333.599 633.82 334.101 cv
635.291 336.215 637.408 333.153 638.39 332.094 cv
639.374 331.031 637.785 329.434 636.797 330.5 cv
cp
f
626.732 304.988 mo
624.151 305.886 621.609 306.884 619.118 308.008 cv
617.146 308.897 614.854 309.654 613.617 311.524 cv
612.814 312.737 614.765 313.867 615.562 312.662 cv
616.58 311.123 619.417 310.314 621.057 309.596 cv
623.114 308.695 625.211 307.898 627.331 307.161 cv
628.692 306.687 628.107 304.51 626.732 304.988 cv
cp
f
637.072 310.098 mo
636.573 309.749 635.82 310.008 635.53 310.502 cv
635.202 311.064 635.435 311.693 635.935 312.043 cv
636.509 312.446 636.732 313.122 636.691 313.797 cv
636.603 315.245 638.856 315.24 638.944 313.797 cv
639.036 312.297 638.281 310.945 637.072 310.098 cv
cp
f
656.158 363.94 mo
658.053 362.395 659.624 360.517 660.833 358.392 cv
661.552 357.13 659.606 355.993 658.888 357.255 cv
657.767 359.227 656.322 360.914 654.564 362.347 cv
653.44 363.264 655.042 364.849 656.158 363.94 cv
cp
f
625.377 415.903 mo
632.243 427.265 641.72 438.399 655.976 439.029 cv
657.426 439.093 657.423 436.84 655.976 436.776 cv
642.569 436.184 633.741 425.387 627.322 414.766 cv
626.573 413.526 624.624 414.657 625.377 415.903 cv
cp
f
637.383 425.708 mo
640.078 427.067 642.63 428.649 645.045 430.46 cv
646.206 431.331 647.33 429.375 646.182 428.515 cv
643.767 426.704 641.215 425.122 638.52 423.762 cv
637.228 423.111 636.086 425.054 637.383 425.708 cv
cp
f
642.709 425.64 mo
643.906 425.855 645.072 426.194 646.178 426.706 cv
647.486 427.31 648.632 425.369 647.315 424.76 cv
646.028 424.165 644.705 423.719 643.308 423.468 cv
641.89 423.213 641.282 425.384 642.709 425.64 cv
cp
f
647.246 421.055 mo
646.697 420.835 645.985 421.294 645.86 421.842 cv
645.712 422.493 646.06 422.993 646.647 423.228 cv
646.96 423.353 647.272 423.478 647.585 423.603 cv
648.134 423.822 648.847 423.364 648.971 422.816 cv
649.12 422.165 648.772 421.666 648.185 421.43 cv
647.872 421.305 647.559 421.18 647.246 421.055 cv
cp
f
647.697 416.696 mo
647.384 416.696 647.071 416.696 646.759 416.696 cv
646.169 416.696 645.605 417.214 645.632 417.823 cv
645.659 418.433 646.127 418.949 646.759 418.949 cv
647.071 418.949 647.384 418.949 647.697 418.949 cv
648.287 418.949 648.851 418.431 648.824 417.823 cv
648.796 417.212 648.329 416.696 647.697 416.696 cv
cp
f
713.599 383.088 mo
713.599 378.52 713.599 373.951 713.599 369.382 cv
713.599 367.933 711.346 367.93 711.346 369.382 cv
711.346 373.951 711.346 378.52 711.346 383.088 cv
711.346 384.538 713.599 384.541 713.599 383.088 cv
cp
f
715.525 373.812 mo
715.523 373.803 715.521 373.794 715.52 373.786 cv
715.523 373.796 715.527 373.807 715.531 373.817 cv
715.529 373.815 715.527 373.814 715.525 373.812 cv
cp
715.929 374.216 mo
715.923 374.21 715.917 374.204 715.911 374.198 cv
716.013 374.23 716.114 374.264 716.228 374.27 cv
716.128 374.251 716.029 374.234 715.929 374.216 cv
cp
716.598 374.639 mo
717.185 374.613 717.754 374.143 717.725 373.512 cv
717.684 372.66 717.081 372.056 716.228 372.017 cv
715.639 371.989 715.075 372.554 715.102 373.143 cv
715.12 373.55 715.331 373.872 715.639 374.068 cv
715.833 374.409 716.179 374.658 716.598 374.639 cv
cp
f
719.322 375.12 mo
719.881 375.307 720.577 374.904 720.707 374.333 cv
720.849 373.711 720.519 373.148 719.92 372.948 cv
719.733 372.885 719.545 372.822 719.357 372.759 cv
718.798 372.572 718.102 372.975 717.972 373.546 cv
717.83 374.168 718.16 374.731 718.759 374.932 cv
718.946 374.995 719.134 375.057 719.322 375.12 cv
cp
f
725.62 367.769 mo
726.312 370.91 726.537 374.058 726.335 377.266 cv
726.244 378.713 728.497 378.708 728.588 377.266 cv
728.803 373.858 728.527 370.503 727.792 367.17 cv
727.48 365.755 725.308 366.354 725.62 367.769 cv
cp
f
659.971 524.665 mo
659.872 523.227 657.619 523.216 657.718 524.665 cv
658.321 533.465 657.84 542.263 656.074 550.913 cv
654.548 558.382 652.33 565.67 651.528 573.275 cv
651.376 574.716 653.631 574.705 653.781 573.275 cv
654.661 564.932 657.339 556.954 658.777 548.712 cv
660.164 540.763 660.522 532.712 659.971 524.665 cv
cp
f
664.357 553.304 mo
664.019 552.799 663.364 552.579 662.816 552.9 cv
662.786 552.918 662.76 552.941 662.732 552.962 cv
662.517 552.48 662.254 552.018 661.935 551.59 cv
661.077 550.442 659.12 551.564 659.989 552.728 cv
660.85 553.878 661.215 555.127 661.091 556.56 cv
660.967 558 663.208 557.994 663.343 556.569 cv
663.369 556.676 663.399 556.778 663.42 556.889 cv
663.538 557.485 664.251 557.828 664.806 557.675 cv
665.43 557.504 665.71 556.889 665.593 556.289 cv
665.385 555.225 664.961 554.205 664.357 553.304 cv
cp
f
667.193 544.831 mo
667.899 548.284 668.135 551.739 667.942 555.257 cv
667.863 556.705 670.116 556.701 670.195 555.257 cv
670.399 551.538 670.111 547.879 669.366 544.231 cv
669.075 542.813 666.903 543.413 667.193 544.831 cv
cp
f
671.824 549.81 mo
671.952 553.065 671.977 556.319 671.9 559.576 cv
671.866 561.026 674.12 561.026 674.153 559.576 cv
674.23 556.319 674.205 553.065 674.077 549.81 cv
674.02 548.364 671.767 548.357 671.824 549.81 cv
cp
f
579.663 349.807 mo
551.784 364.738 522.076 375.031 492.149 384.983 cv
488.503 386.196 490.065 391.992 493.744 390.769 cv
524.16 380.654 554.359 370.162 582.691 354.988 cv
586.096 353.164 583.069 347.982 579.663 349.807 cv
579.663 349.807 li
cp
f
577.337 371.208 mo
575.138 376.59 571.477 381.082 566.901 384.621 cv
563.851 386.98 568.125 391.199 571.143 388.864 cv
576.594 384.648 580.527 379.156 583.123 372.804 cv
584.583 369.231 578.781 367.676 577.337 371.208 cv
577.337 371.208 li
cp
f
510.27 335.367 mo
521.227 338.422 532.356 340.533 543.658 341.796 cv
547.489 342.225 547.459 336.221 543.658 335.796 cv
532.894 334.593 522.297 332.49 511.866 329.582 cv
508.14 328.543 506.55 334.331 510.27 335.367 cv
510.27 335.367 li
cp
f
839.882 231.008 mo
866.067 212.819 894.624 199.047 923.439 185.606 cv
926.936 183.976 923.893 178.802 920.411 180.425 cv
891.596 193.867 863.039 207.639 836.854 225.828 cv
833.704 228.015 836.7 233.218 839.882 231.008 cv
839.882 231.008 li
cp
f
839.942 209.628 mo
841.527 203.993 844.428 199.119 848.607 195.023 cv
851.37 192.316 847.126 188.074 844.365 190.78 cv
839.472 195.576 836.012 201.438 834.157 208.033 cv
833.11 211.756 838.897 213.346 839.942 209.628 cv
839.942 209.628 li
cp
f
911.102 237.243 mo
899.866 235.474 888.578 234.565 877.203 234.608 cv
873.343 234.623 873.335 240.623 877.203 240.608 cv
888.035 240.567 898.804 241.343 909.507 243.028 cv
913.284 243.623 914.911 237.842 911.102 237.243 cv
911.102 237.243 li
cp
f
%ADOBeginSubsetFont: AmaticSC-Bold Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2020 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /AmaticSC-Bold def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 73 /I put
dup 77 /M put
dup 80 /P put
dup 82 /R put
def
/FontBBox {-461 -265 1059 1139} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
10 dict dup begin
/.notdef <1C60D8A8C9B72E9270CA2AB8CDF5D5F287D9A7B2190E918B4DC510
584B63785EA4B3E6> |-
/space <1C60D8A8C9B8B51828> |-
/A <1C60D8A8C9B80CC2BC11C7608721672E386027EBDD79DD96B89E91EE0CCC
76C50E329DEFFBFBD54AF165D9E5569F043C4516FA35A07217DB90945EF531B0
E411DA83032B55B1318BFE853B48A5C67EE0467E30F681B9E232A4E8DA221B41
1C9E247EA2099E69DB5EAA8ACEE757958AF706F3A6A9434B6BF77C7DC89DF50D
A73CFB7CD2397724F2723EDDD5C9B93E9FFC52261D1848D949A5C6EA202918B6
B903AADAF0243EC0D5736ED0018EAA1AFC5FBC367605D5CC03BF07E471609603
EE43E8BA4C5584E866DF5424CC9CDA4922055841F2> |-
/C <1C60D8A8C9B81BEA6E0BA68BB72C63E42324F7FF7AE028D00BD903197B6D
219F626A27E67E39B0713A48860B956D67D641ADE6A3F00DC5355F4979FE34DD
1CBB0E9E745FED3815B16A1B035DECB66433DE6E730559176E37C2D7202EBEBE
D7BF6B6A66B59FF62462479EE303216E4E9C0CD19DBB7CD057411BB4282FA2ED
3C8E6CB23B1936B9455A483339617A241DA012995E2DE4C3F1DBB3E736BC9345
9DDC2995FAFDA7FC34FED46937A884778D93BACDE14D149183552D3A32BC888A
F3D817D8DC95D0A2C71C0FDC36E368D535D634D94FEF896EF335BFE557C2C21B
F6AF3D8201A3DE50FEDF6DC466998FB01C310EAAAA36E618D432E2DF1BB32C1E
40597ABDD3396DDE3473C5F9> |-
/D <1C60D8A8C9B72058518CFE8E24B34CCC59EAB88E3D5ADBEA1FCABE64006E
2EEC70DE1806C5B329B29955203F828C643B9A1DA2D7565D5516EEB060006AD4
0C0DA69AF38B1FF89E6D1A3A46345983FCD8035135DC7F673E13046945C97F60
11799D7A6329CA7B9F94EEFAC2380DF86338B3EDD2184D14870BC63CD2F11C21
A3E6441622446DCF09DBEE8C0F47C77A9A03B8603D8160BC62582871F81B8382
17AB7F1F0575C4B5AA09FB3435A6BE712FBB60D17F254BFD4BE5839C2752BF8D
4BAD149386D46E320A80EBAD1EBE7264EC0AA2A4FEE2F03DA1E28BB8884FB322
0ACA363C08F266DE3C6B7A46> |-
/E <1C60D8A8C9B854D0F43A33A47DE4ECD7D706C21CC780F8D787FEB0C4D1A8
9BCCAA330AE1FF1278D5C0C48B81A82A01B02521D846AF812D6240F7A32A5E75
274C98E2BCB0660C4FC16FBC31EC92A664406EA3AC8BCB2BA3B14E37D8F01D0F
A4FC15DA0F5BE27A97C0DB805B356BD42ED4F43CF60181F22523D2207E847557
5F495B17A82DC65432215E70AC7E9CC83B992BC28ED547F7EC0F135333838320
380D32ADFE5355C99F93D972A6DD1BBD495862AAF2B61E7900F1CC1312C8FA78
ECF8EB2A7D78629A6E27576237AD289C742E> |-
/I <1C60D8A8C9B86B643B5961EA6C5E8A9921F946466E0D0F9C08E14804091F
229037297790A68591C5918EE47B37CCF16DF2694AF53955E0E238D5E3CFE0A5
872951482B730023A926A914CE0906720CDB5DA18D5ED8508263E9470DEF461E
52C19963CB5809C0999B9223E9626CE3228273066D19A81C0AB6C45C3FC18396
1A41840F38851FE58FC85CF9137988DB3B8DE3B3D788DDC5576C30714B82B29D
84B04295085658CF80326A8FB18A8B6B23EFDC6DCD8DE21C435B203EF059EFEF
F80BAB7E1B05AA07023613C8B094909DBB1C7933F179E3E60B9592C3> |-
/M <1C60D8A8C9B776A0631550D8405BE033017062E0A2776BE6EDECA085C1A6
65C79AB3315390606190D9C647ED07BC28658D3B5FE939FC7F385FE3991C02AA
32331BD1FB21C3684B43B5583EB072A87E545A1A503F762772C0988A19236968
D2FD88864FE8E4C4F2435BABC3919D83616B4FC2C827847273BC8F648493D233
C8A1CE6987AB4D8DD1E35E9ADDFD3C6A45CC8209D07FAB0CD867F5528369196D
D27F2CA82550E3127BB4053DA4EF58BE425A376A0032440B955579F53243C1E6
703AF68486B7AFD316A5654297CA7F1532AE2B08A9C57AAB556B9D9229836CD9
3DC106CD7DE182792BFCA492197DA7B8DAD0A8DE34F0060BD957D7BF38FA5931
0EA99E260A54C0B35A93CE57806001B87F54B565BFE0D7F020541FA997FFBB69
8F93597A4F3B01EA2256B17369E29CF31679> |-
/P <1C60D8A8C9B84AC0FDE96B53D93250348ADC89F6FF0B9407641B91C3B9D6
6E613B69DE088589835782C82DE9B967A09BFE926ABEF33D68D3636A47D44C22
731A4E7B86E700338ED15E694EBC3637F768F3E1668D9D0BE82126C2E9308D84
4336B38B46FADE186664DDC74872C20A4DBC97B145C33C726CF8CA6F1B636276
C8F707851DAFEA57DFA8F76BADB1A19A141B4ED8C4A864294F6E7CAD3D6E7E45
5CB7B6D8D80BA72C01B7063AA20DBD27E84809F12C7D70FCD23EBF9D> |-
/R <1C60D8A8C9B84B913F979EC05AFAF4A170FAFD5A56BE8BCA6D7CECEB38E4
4219F188D17A7ACA069D67B7F4E97735D5C9B38CEBFF3D415F95D2B0166A2988
27DF3DB54C2B514040949390B1C3F7E677338D6CD8D66FC240AFC5867A7373AB
9D7BA5E1DA86C17C476D5039A86D2C726DDCACA2CE070ADA4640A78AD248B808
32D346F836BCE5D13EAC145F348B9B3F5CA5A6BC69B4AE6C6F5B9EC7A4BF14BA
D42735E8562012F9A8ACD694AC8C2713D0E8345826708759371DD1F535D29424
7309F2D1254895D9F265E1FC5A157373D1262203221DFBADFDF0FDDDA6F4E2CA
836C4CF7AA6DCEDFD75B158C02349D4D0D126243371D57A05DEF0CE9505A4828
DA59463BEFE20F95F04D0FCA3960AC> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/WZCULW+AmaticSC-Bold /AmaticSC-Bold findfont ct_VMDictPut
/WZCULW+AmaticSC-Bold*1 
[32{/.notdef}rp /space 32{/.notdef}rp /A /.notdef /C /D /E 
3{/.notdef}rp /I 3{/.notdef}rp /M 2{/.notdef}rp /P /.notdef /R 
173{/.notdef}rp]
WZCULW+AmaticSC-Bold nf
WZCULW+AmaticSC-Bold*1 [163.214 0 0 -163.214 0 0 ]msf
467.676 756.634 mo
(CARPE )sh
749.214 756.634 mo
(DIEM)
[61.8584 41.9434 45.374 0 ]xsh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/WZCULW+AmaticSC-Bold*1 uf
/WZCULW+AmaticSC-Bold uf
/AmaticSC-Bold uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (Rian Gumelar) ()
%%Title: (405662-carpe-diem-motivational-illustration-vector.eps)
%%CreationDate: 6/18/2020 1:17 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Blb<:OX9jpB)E26Mp.uB?!tYnTm?@UE#8.[XJICF8MaZ$2HC$E:_cGF^u81[RU?*m*;>95]XT*#7D0<_WlRH.&KW"]a5'Ph
%iYUA([l;X9Dgp?qrh!P9VTi2E:)b#0[$_t"qSb,ebOt>-?GHB%rU&(C0<T3LI.QXsl.,+O]A)MXY?q6TZhsRhB(Od#+65AIS+!MO
%5JR0_B)DMsl!Kb.>hn2KO`SiU>e[atqX*^OmHsLXbMRgHp>sK\f2p;d3Ucl)l2-D)k>rJ/YN.X3HoA5aI*\/Sj(iqO]EnM^p@A0#
%?:`PS=)Zs:f?!pcrkJL1mIJftKfFPW:VX[@iVN5:=7XGeS,`:7S9k1(XLJ3&lK+lA6>lM_NK`Cho#o;WlHbf8T>/cdDW\:dYA\lt
%_(GYYc.=VrnsWWkH'%&@fqJFdFYraN.u4/LVqq:jrpD^R'D4BCI'^jL]Uk4_9hb+nD\ooF&+K@-^*J$o%p(Dj5/2Jd`A'#p3_PsG
%@`*\]s6(iR)"9rNg=[0!?^4g?o#A4"S[C$;h>CE_F(]L'qW[kAYJ8rlQ`J;B=0HEscX4B]pA4g3W):8sd&d3?DkCCMqW#gXU`d"G
%kt(aGp=[u;3ISX@iqXn@G4D!uIll[$Q`kkJH6Z=9qtr#Min'Y\p##`9m>HJ(r:p]Z)se_T^V%/R_sMs6Rsl)>4nC7l9aL"-k7BT$
%=cf88Rpt#\kLk^@->f:A:ZgThrGaXKC-3d"0u*KQK_"G1f0<Ntr&P(tq'rdco(r*aY+NtulGb!V5-'T+XoGZ8Q9KQbk3Ai<Mt>ip
%I_-0gl0Pn:ik^D>B=ln7(ld/Bk>h`b7cqSZgE5dko0<"3\]*<iO!">Lj%#e+q;6+/hd!j\4$LF5[/B!?=-l-Wa`l>aLUXI)2_Id^
%1]DLlqWc1pA[nm][.W+EZq^20oukt=o(XTY/q<ZTlBV<<IfJKnod^W>5<lpZ5>PTl]mB;1mG$6Z2p\(Cqt0I0mELh:hHiG0]q8[1
%q9>,,%jE`"mu7O^+9*t,qW"(88=nQ8TtgHQ>A8NWjQbm\jm+"\>eT'FhHW9pG4e8#rj/XAQ`iee4aDJJ:qcYtlH-Be2pXp8>]3k^
%:VM1!IJ$4Hq"<dkl^*r6V)r^Fo(;=M='%=VJ!PTF-\$Gbqj4@Q5@'/Z]3M!#o:J.YIJL5*o@:03?bNt`\\=3LMglrLJ,T$1q9A;r
%-U7V.o#If#-a0J8jMGP*?<f\5CIu"X+?b#Gr9\:1o'P`jDuP([qQ4knp$Je-Dgm(VFZ'/@q=O'DX!]RWMM_^9f_4[2N'He)o]k-&
%oB2H\Vq[^:$@/<]Q`m$qIEjdO'u0\(D_GJ>2>HKuQd>]5c`kF@)k$+ic7'9EX)i^Kq-l2,[=?NCf:V(*St$mom-GIY*-h:C"##tP
%*#=k_`c]&DZ[S[1ps%fghi)UdDgm*)4$HJYo<hoo[9i@qie"B,S\?/s]b!>UrUTd1:VM;V*&@')r]u%`MuU;splFI8n+;rrq!n'C
%8B[8L9/e&0YFf(bK.m,r>V<1ne43l+Rp<6\0!Cj/mG2cYQXB"5YNCc)<`e=mCH^uecamFFid.,9-/ER9&%pHADu2WP/hXZA;oWt+
%Y(+#PK6G7=^%AEjl0[bahMuB#emH1#BDgPS+$]V>61n[_YM]B=[4DNshY^+Oajp\HR`!D!>?Dl[hL*(Ao8bJRIsSF"rKHp-\d&)k
%Iluka7A'8MDZ9.jmF<;-IX,L^R1K7&hVoL=qDXp=^O+)[eaL7ur`4LDpTJJl^AQ7#T5Pf9qW7OZgHSt\rW2UVJ%=NVJ$o(ugLM)t
%p%HpCjIa24G',h"-YJdt07WYdRst7$X#Eh(4MIr*I`dZMgXXb3U43.2e[*NPJ,3OC&)7?>OE?0^j38,*mr?W?DCA0%X8`'</cXN(
%qiL-_<0ET?DkO4fS"HjThnE@N=O2?8*PZlKH#rdrFBTb4=d?_3PYmuiM%d)Lr8WFt.JiD-F:7QC*gHDjYkZb$*d.;@8$S.e-$h`B
%Y5b$L*+,IX%hbb3?i90^q=X%ij*o1;Da^+uT0C$dp1IN%*n8$<93JB.k.giaqWVVhlL!mZ2h/?NI6R(JiqMKXQbVRaE9.2672D/X
%YA^dtmQT/r3.@N&JpP\Vihqd::-D0tq/>LH@[<^#:-E+cX770Fr`AlZ50.2ILdJaeikP)TDuY,4)Z(VZs7Dn>MJiFboo1prRr@1j
%^U]frdd;sZE4\'drcn80MUSu*q<`RQKLKagDLM3.]2pg*2qsh`.=_@)G/oS%Z+mp_F'#qpZ_KZ3T5o's,EFk@0'd9)CnK)m&4b+!
%jobVFE\#,PKCFrD\]VZ4GY.g]::9r>?`'gQa,f6B(Z0.<IAWJb?=qZ)"*[=TZK_,9oNQ.u%cXrDERpunpOR,Pr?pH6qtcN5,^ksp
%8Y>o%TB.s&/[kOZ@_:"C,Db6iIJ*1,e_b5XIW]r-_\GT/W+@Q.dhK_La595+c6`Cj[GX4I`dcJT*5s4**th"UC6QP(?#or%a,eO;
%H'0DDLN@t5jI"XeNd]Zjo7imkEYI?CL$"kgA#b<qYM1PAW28VpX08[2ParerLffsJ@L:$8$T[p$CpVn@f8Q>d@h.28iUW52F<S[J
%mH)usXW6o1<)\o(V'q*p1*_s?(NLMT:(DR"fV1JPAt0Eb*'R,;$5_YDa$/kNOO"4b<&mR4#N@!H.kcCj7i+sMneXCuEpWa"Nia;a
%?9Ze=?f]!q-82k%d])ftjHsnr$[7\B0?7*SCb)&#?S*I!jN&sq&Y2#g(H=?ZaDmU@EpVl5FuktbnYgJ=*bgLT"F\5K8,jZ$7paE!
%__;#4='kj;T/H:OH\"D)*;J[sM3S&.jSsFES8Yn-kBu$m18*AG8(qP`_`#Se0#7p&aDm;O-O3B__)SVB2io!k0Qa_D%]-(/aKZQW
%fu\dY+XSBKPT\&/8eF8d6B8b#dS>fSjlsG;V`]Dr\]Qd<pdD\]^*$j,&h,o,^&6R*s)7$!cfJj2Voo#Uq>UN4JS9l;Gmm32b*4P#
%58$OMaJ%%lP<W9arfG;IEg]?O+e)au+eR'@o>2aeImd'/kY.WEk<4$2+s0t!DEAlo,k@3ho![s/!Y[t"Rgdml9HrFe\nr8W,#0n;
%@[,2RE>oF&8jOdtPo7#+#Pl(V?X9HDG54IN.`f9)d[,:m9..&,b?1:X#[PMr"W>'!)I_O!04gr3N-l@3fU_KW018:B85'UE3Z"2F
%M!R-iJl0+ZaPaM_DRUGPGP`MRR.p.Ori,edrH>s5b8k.TKgXj^%n5!oq-eL"bFq-:153@h!"9'sMMP$>fIi3_`F0a5Nm>QDK$a".
%+@Hd<-pj3[e)X.NC_41!&O$KZT&PQQ:K2G_"bC-P+=@`\a,`WYnT-=RZ)*QNW@fhXX/S9GVaI7XKo?a/5\:(H[ao#:R7nF`3-icN
%j$X8Z)'_nib_]Hl!)CfkV^eS2!E5HCM[:K,PLE8rOBmjk4r:&8NXO5$EZB6=]*i9o)$&'+1'ga;A4(p!OAEYBa^F%Y4o0Sf*hAtc
%6pJi:+i>PYQc"FVP&A-,b:qnOk+TXW9c&hY<OD9517>Tfm+;\pG+UrR:Luf<_,T^`!%<*)+<H<]75I9&@Moa9L%sXtjH`G,V(aiM
%2*+JJMB+)/T!F#>6b>BSBM<59nAM;d.:8`XVueYL>:P@J<Q"nn#1Xk0"=8Zm5h6Ms(-EEM(FgCQSjkTEjT;riH91PJ<UuH]-djBb
%/Q''$q<J['Peeu+90!EF_]ak9XHZ,8ae^h_4:[5?6R%jPfqi^<QR8,KF@6ab+qs-[92*thh&8_.]ZAJG13F.:fnkrab@@T#HBt^p
%,*>u`-8%2Y@^`_TPc\%.1.78JMW:FOOJcMQ3TkE\F?)'3A<JTr&[F2K"H1@L%)MKXD^rGS`T(2aUN4aQd`6nH7UI]i1,;rWYW-/G
%%_=Jj>S?a8%*lBlPUu8_$ku4ljC!_a\X=b3Ak<PJFL#Mr,h\*oDJ>851J&c"&uPqjQl7YL[UtQ8(eJ=s3#WrTI]2L.Bm(aX3LlKU
%H^X:U1`BC\Nm>f:=$prUmD)FT!uW^g,B2+K^eH`g:RV3SGU#)W5N*s28UH>ekDf>_oW;X-'FBq$6t_<4.7AJ/NDi(BaVW_?;'ft3
%]3`:n?2oHc^`RK4/mhjHg\bGRkZ,+n-efMW1M<@b,$sVg,[.7jbhn6uG%)[ad9j*jG+t71-U\QN-Gm25[R(b7gkpn/`*RC,]Lg%D
%P_ob>Si25!dY4^Wb*o$h1fAl_g(%)KU+Dub,F)c49&*;b*r>FXPI3'Y](kuQGIcr2,r_6llY;HKMCNL.<1HW6;fg5"?<)*Il;ZH9
%\l4;aL>&+3?iSgE+h!@[_QF=1j']nr5HoAc%X7a\!Ut;nE:ShZ*,0gtNS\m?H]N4I+a:TfGP0u+\`:TRD@\bgNXn2>iQ%9HhKQuV
%[rJ-@!kjVs<=Ya)-Lkl(=CnL8[^&.a[s33BL"^)cbM%Y$E']f$9FW3b7>-&,=shTH.5^m7lBuo&e#q,lgX;0F:uA4k8^obc>)/uD
%/CrWVF#;7Tp6j12m4cZ3+B*>t(h3q@N37]pW3)Isqq2uD;lgpJ_2PX%9.`lDI^FfKG&@L&Nnl\g93p,.2Eb`b9uEfH$Ou:`J'CK.
%`t=AmFQ]<?,R/AJ;'(,7q2d\h%m8RX&%U_IcM5cH_0::rO507]s8;c(j81[U6D%3hF*P101u,rOfi"Gu2(8;HM%O$)$Hd)mX$sZp
%-g#THh,7sp^i=I<(*aj=Kg$*8d$Z]Bh8&nF9%PLbX`D^@EG'1GiCL#&TiDe9!1)/DL8AKBF=2"j(=b$P!R8EtXC[.P-Q8h_*5FK!
%UTS7tlBl'UZdLgJ8$0/D>43GFTG,A.jtTR!@9VppA"fm_Nd%n_]8ui3gAA;77ibt)ps4*'IhDV/fqC]^^a%:fb1(%'cd'KI!7$)1
%PK!O!DMtCJ)WLu_Z'\M.H-pT8R4<@7DV.\?4L;,X%X(d[SA[49@`tM30M-EqI2AjN?pS3&-kLPfq^EB5>A1+R+TT`/6#]Kb.!cA,
%Y0_6*"L=u^#[p$"Fg%po\099k$rAgJ>"#BcMSZ+bUKU3n6IdSlA+Ve<a0[?No>DE9(VMD_$2@c3B=7B%Q6+E,IlXrT(I)@8j(El$
%31N1paNDWB1KsCs,<k1M4$Mjj!l,=-jGja7pHR(H]10?@\Cb/)AMG_PkosBB_o6%;6f2E0,aj7%J$ImhL]A(4qmcBR6MJ)D6-r:*
%e.MT]o\&G4B7c_*499[.mKD1A:o=AcHcF2BjA^ra!6u=hC!`_Z'HPtV#dh,B2[O=R_+fP@+$\c7;2DQ2S-j<ed&Bj>Jt36mDCl3"
%$$l[He6$P:BWUDG!2.W3Z99hP\(L&5E9Oj4%?&ULMpq6jN7Q"A59>U4H46dQg0MX7!MAZ)VcJRU\uP!A<?2<=]>ot%PW)gJG<Y$G
%#cm"\a3BCpEQ![bLV((Z35"k8bNc?^n?I>]+a8=\H2#*W-P!]IK?sLWF2s2s0,ir17ercU^1`bWFiQ-RjblV(U/AX<Pg=PDdjQFU
%H1=,Ns7bcmA<'!=.9[=uQO0gWnsis&.,ld5QeC@FAC7"DbDB2PcZ;=hk>>7E!n%6!d;@nU8'V"Vm*;.!CdL8-DNUr<l?E2q,54Vl
%Du=\mHn275NdoZa=f!4!L/6,CE;/E,\5dRSX>/H1`:R&B1lV(/3VG87<Ac'nNntt;3AW=s4LesbRsb/3jcd_@\%DUK;aDJs48s[S
%Pbl;f+f_h';2@PYO;(jXVW-a&P.Q3(.?pIbI[[K=4OTXB03MHR(T^k4GH$dE&[FW\]U,D.Lkl;kTrp3:5MnX$4+?JhIbrrY$kpRu
%dh>.'O!_ptiMI7]h(t--7@5T6?A-9<_cTJGF:4"bC#B9b(,7=_%#?-U'aa1UW(T[JH&i<r<edfD_5fsH(Eoi-5*X.j<Fl<3p'===
%#kJ1;1P&b`T,?!odn$eoQ<n'HXHkRX#g=(->Lf7o"$fs8\nJBA)Hj)/UT2,o`Q1g)r7#k,C9tS&Ssandl$HfUWog5Q%+S`'WlS%C
%AuR]+KGCE8T7\.#R^;kcd:&3Um&i^[,E=".6t=JQ>p&abdH$=Vlaf2Z\F@UMJ)[[S\`9Z]Mu/P3/@5-`Vr5)05PWT!h4m@*Gc0rX
%N\>VScmr0`/e+9pfMkT&+;m\%k8IgP9ZYUl^HGN)-dt8ZIi:[JU)l>Y'-3D\:9Sb_p'`c`N'tHt)JMj8F;S1Qo<:k`eR@>-J_AU;
%<@<b/6-ZI]'LC&#K?3t)kUO)s4%mlH4R&f<EsnJ0>G.sNao)L$,KurlmiLU\!8CY,.Bl''6bo!m1(5"qp5MI(g;3'4`C9bhNb*7b
%q'$?!f7QJc%=:9fccPWYq-Els##$73?]R7.3DscbPQ#d8r)kM7MtJe]k>HrDTh"3hr+I0I*:_l1^$!IWa8FkjS2fg(+a:TJp5Yo]
%s,]<+i2dGLrdE\/(X,RF)dYR4_b85LhlYf_c]YQDgeb?TH]J-Bo)%V:Icg?^G$&AN5:!^f#+*3$o^FONFIe)N]]T$N9`J&,dL7X?
%hS4V6@aD/bV.3?$6V;Vh8o$EN%[85bH\R^75gh(mWRu2!*A'N$\`6u:BEjC_",Dm:T]JHnk[?a$4W-_lXUhu&;2_Ic50BjWmbl,+
%q=F\gUX+;bHbSMPOM-ih\6`^r2&DJ/_)lD$.b8lu^,\kr3q$4.KK:B\6:)-E<Zms&hFUD-d-@B4HXrC3/8(NSN]s,ukjbE0<C[im
%/"Nm/NdBeaY<D1I8HEda^dV&(4?>-Q<38iZFcF(&osd8p13H+1VpfXRlJkB86`a\k_3XAW'i]*'+0M#\e)KZ06m:*&>%eoc9Fi\a
%p'.NYeUOFup#rPX2]Cg@PdtO;cJkV@-JD;&)=-91M^';al0,YK,BjPD%Y*s+hK)M'5P1U\J+)q&dDO89j7*%8meD==532M5I)hML
%@;2rZ)jC`&1Z,U_,gFh$&F7,#f!/C#-QhQWn#26(0Jr&??j&5V`Il31MptR*QE_-uar`%MJbj--C0G`qc<3ThBYP>6;J+KY-C[>2
%*f0Kd908G:AID<bs$/`VVlncsGh$Pne9C-5"I4uB(c(nU)^a-Hl4Jb`1(soN(h<Z".%hZ'6C^2</@jRlKl.*OC$Em_]"hsLP.)o6
%U2>-[`,r!bl?(.th9mck"]t/QHqY&2HD-\&*e(nEGi'ZgI.')a4SHgNh!n.oV]B.4p`[\5K[L]aOL;SnX;D],,'YUdSSIj%0YEHU
%q\'(`b0gsNL6'$c,3TcjEP+qJrl-*0InrY:[$/RT7bCL;$gne,=egY%2VH&H3Q8;&!X':5@7No.\u]@H@*snCecch+;-pN(Kd_g[
%m^OgS\5UC)8h+(!X'#@]f&hNbFr9FMMHJqXECXXJnf=uO7u1`PLBaj.E6A1IegmX)ADlBhlBjU%,a3u(XDchLHf>+O/8c<;SWN&#
%$CGm<eY%<[7e-V=q0Z!LM%q"qE!S@<'oNd_]b;o5cb^q%n3ma\-Un3NnT/ttK(ggN^eVOEpn!W/5G7pg;^'+UOC#Jq2[<p98R1]_
%eF1jT_i#]W\`8f,IWX($8%E]BN,uPi.22Z_OoBgigl1]1VCBA9l!`P3K:-1q6UA1nOEHb'(hIa37N'H+1<\HkQpGf>B%bTX$V#6s
%L*<F+QqVc]_9Ri#<K-i"R@0o6<B$le_gjd[>#N7N_#,Po:To'4Zl[8`*a0f=krdZ*ehLEB'b_5]mN/[WMkJm".s%tgP_k'n#FUOu
%a;b1<Mi"I\ZA.PJL#nOYB"oIJ6.db-QVTK-QlX(O(Ieq1e1g]99HIZmPi!Xr-@RWJ)A(uK>1Xr)f&XK$YV]Cg,/4:-q3&)Oj)8CK
%&QA@)4'dC)Z)-!o9db[jHTk$E;&o=/Mt9Hqi6tcZHfEZV:AfE+4F7dL:EZ2l@g^Jp%4733U^IQDmcWg[_U0`1>th1Z-<,a+O!`B!
%VeJe"7]+m%[F4PP_SUqnrK^rSV>DgMQ_MIf995lq+fB^Kfsb&rTQLmSh1@??S61qPU=GA=e'"2COm>H19_2\7Bm)%D""VAj45qqF
%KPi$5rLjalJ*+'.Z8g's0b!C?EG@r+"n#e="'S`@9("[p4bbQ>/[G'>cCbZ8I/:*pa73P<M0nU0:H8!,,OMFsT<0Smc$32ZUpj$s
%h(e&S25-?#Zs/Pp;OaOiYQqV4<()rQ(ujDRQqB\6:F`u/4S7D[(U[P!pH`o%fe%bcM)'WNZgQ%\aeVLMB#!\(O/VRRAKoP.6g#VE
%)5SlPN!@@\XJq[u9$jkpD$+/W!=GY^golMCMci-((8/:ck'<%'q8#:&meF!_Ndi8a#?87MI#Z,Ig]OP>PZRpR&N`VT_2(]-@ppds
%h%+7O:0,eRG0$H`Eu-VU@&S[]Ul]!BS8<>f:e,i-R?^N',.7lbJXM!?k!XBtCpX;8F`,6/>iV=6iJ_JGW<[`XY1;D>@MA=WM/T_2
%S\*',k6Llh(koWukbs+671R^41FM",>'R$u='C*i=QfR2A[RoWO0B`b3:2FG5'Xd0+:I5citL'1##3;-j)7_Jb3r4VgiJi)q\]pX
%j2+`j.b5>;m0H->("ZH$91-'L,><a#)Vj^E)ZHRl5CR.l,)r8#L60"eohj4XF175lVVH5fHL@>YX=l-X8.T@R>cc;%AiDH(,EJVl
%6RLnGc*N,0[&mqfGdfYuq(Ke)KiJt%($IXf'!8k!]A]Y/R[S`oHHGDHYUbnFl-s,_\_Q_XQ[[A+ZfAaK)WZ*hq!ikIFIF0;45Q*F
%FSE9M$i,GXGFX:Pm.JNX_ADq<[]\!KSD^hPkF-pJJrM8'h%rb0SW,*PdW,R/Q#Yg.Hnf3K'!n&fnRuUJ2Ud0<'doS>O_Y$P2)9,E
%5:`LN9L-5WoWqtgrcUt#],c`Ha!A$"4]!?V\0@]=;h!8,=sj7:HSX>Qiif6Y+qur5U+I&#Q3grV];r-E1ZI,"6L[E>#fa]Vi1@2o
%?YXO@8e#+)#;6^AEEH-.]@)<"-3i@s&:>iSptetXUY("AE?Zk,'+`r>bb(0D]j!JOlep]@;"/?NE62p@2rHV"pJ(k\mKpKW_`>?J
%Z&Dd;J!ROYP*Kk.E-BH"ZfW31/(e@_ULV<>iV^k>="qG\3!pJG6%e3-AYb.5fWRPm;ocKu!8hW7XeCMorS22(h.slmO$<h%ed2WC
%isrt;5N@;V*eas/Jn[0=X@"*'+pc_KSYFm&\aSIXUE40(#g[bb`Br%WM`4>5;kn\LP:>g^d(@68n#%eP94$E2n4j&I>hN=4.;=ol
%\OsP?Ug<]+0gY/X@,sImeINh(rZ"K$SZPjTnd^OC2mFS_C9re"$akb6>BJLDourbiE0CoOa,uQ#?QXb.X7-as_m(O=k1i;DZ/l'7
%g`U\Ck1XUhNbc3ilM=:F_7`&>JkP]4K\:)ePaH6%DUX;"8P76m(Z\hJF_Zl,/(-"`F?"GI2_hOr`qkWGXdarP&Kh/pPo@?o0s=-a
%ZteW1iM,!EXR:F1U^_N4N;F[RH[4L#-fC/./9D#*iCbp+O=Zse>r1bso^?:5CAO0l:??[^j*mHmeW\"$2*l#%FT6IGrl8AcoS!2q
%-YV%'9:VnY-m&1!ns;I-YMA._JqK^+r[T@mFE[q:b$B*!qH/Ygol>)IK^kBGFY:e[[=H\m85j4$AB"0gh<%XKA2p.P&P-CQ(GjK[
%fZJ1dgEO<,^*q?W&bYC1a)qm$RVCI"ak;K_cVWujTp^PN!:324P1VN0R=F&Bl^>^T\+na;ULH^/-rebkj?%Y.g#<--b)N!<*%g4G
%Y_j30[KBd_m>)QlVSf!p/6+=.?C"YDY#n_eiIF'!H?9-k-@%67]"j57M?"ldC!LZgguN,]4gYlnK[#J4OlPp`>km2RhTO`I?FcCn
%'</MrD%K-nkqQHp2"@S"A6B\R.LK>F?+&J$WgA;/!Y?7@a,`^Ca'@ogL4qPSAMofhoJ2A36@f:dftLM7M1=CV[c5^kfa_)=Z-1Zm
%B9e1'nA0uulV:N&BS`jB)_=G9"LbU#JZGkLPpN:_,:^W1*^Aq7b.pp7fNY#Vo7<T?N7-m2Wq^jM;FLA\H'LlSB2PaO.#p&2m`V3;
%Ah,)2jp7![pIOa4npJM!oBIau*q^Po_?#o`Y$KKQF()QH3#7d<ElZuBY@r9IjBQl7Qa:9M*k]B`Y@WB1S/&WP@%4ik1l__J47%mC
%^fl%=[>`,q4!(4TXHOQG1CJr&RoD`eek:c_GO,!0R"=*RY_s)!=95V^eZd/H:+l%XT]%5]-r"Uj<pi++XEo'?$/_YXWMmEaM,38l
%=mi`3$2.\n?'\O;`+m@da6-qb2ij`N4b:Wb8lOnejY8U\a:6O[a*G<bp0p:tYk1"@i@`sXaba%r(0-.7*dIulE[25cO?8_"MiCq+
%l5eXt[\6q$59G@kI1O_>Te_TdMq6)M%M"4;mU2?M(n!7RE54[&nkZ[enk!=E_q&%<?UgdF.?r"X(O%BjC%dlooZ=-?64.:ln/@`N
%:Mo3ke[;;eES\1FI1ZT)R50Bp1<&5sWnRiFqj%qIgYaWLWo[\I03=&8lg^a6Tn'jIf^YgQSMkr+g(eG32]]!?UVO\8rcE5:nm]"&
%h5Lj)']PWAFQhI$oZI!D/^AA=SA(]A]NItdElKTmBnc:H_O>TBTPMB+rRYbl]6(.9@ouJQ,>0IW$]k:W'Nf.c3\7r?2QP?4;#'-M
%ECshFGG]De$m+fVIW]N?6s>>-k!7?MPU'/60R;64Zs2rd[kN8Co4Qp*DSOtc!;4b6CirX7=(0s*DRg@qHFLH(2G=6TkHr`A[['h!
%QDiIeR]6)F9gWt!N@nA?F=h%)bCl"OGFj]3)X=GArQp2(hL_rQJuNTEVtZ,-SmunQ&+M5R/EY=\1c^lMA>>nEZSY7/;+^n4Dp/u>
%AX`<eYhYW-3Yq<.P`:1h/DmQ2InPE:Bsc1GY\Vu^H>jAt@WjDWJY$($oFY10"ae\ep3aCYi3"$4oSZ5<E"OjIgps`jh(Q4Qnr)(1
%]3E^mYH1.B-p%f3DVoU7S+76K]it\//#hnT#H1EXCUTG<NHOQbf"bFd[6(Er)I!L>q;Q7L[q\J74)XWO`o]q:2$Kj+?/KB\2uXS*
%o%b1\FH]g<Q9$Fl'N_&%<gEhF66lX@jQaOG,'$t&>QZTJa8m7!G#tY)9BI^\OhGq(p5ADFK-.-4:Ta+K+4Zq(.Q\Zq?%i^=JDn2'
%V`ac2m!?4to9(QuT=jLOZLYuC9)cb70:0<gU)cJ9Y*[<p01CMCnue<afcso1k:jAe9C3a.L.6\:>D8&<5f%!j;e=nn!,$&`B9EIa
%"k.bcP(jL/#=nr@R/Ljl!,3"4poG+E1p.@SLsIC]2M0+,>`Rfa*1%n\*6[GW!Y1YhF?.+&A%EN-eLY'flPNdPU2D]sbOJm+Ek<=M
%jVTX@fu@/GP\F+3m0:$f+77Oi3;8,<aU',+7j%Ec\BcD7*;ej]06b6<Nkb/>F;\1Q_0nW2V'IU'_%DhE=V."RXlNn>&[P048O6i:
%T$Tcc+lN("AW#:?[7r8#__P!XIt$UXIE1+u<V=NY":3+'4?S3M.-*PMgOIjuTBt("Xt7`cNa&\OmLJT3f6(:1f+fOTgl<MY"[GL-
%Nps56c<?oWE,JgM#BT<#GOA6DNGG:?0&4Ze44CS<dVm/f*u6#$5PB7-'YFoRbWs-`W9s#+FebCAGM^Qs]7ksL\24r$OoLtV?g=-*
%Dg)60GFia8a4mGqs&?7^iH%bc/`1Ek$)R*gk+q`[&Wld(G*T2)A<?[6X6RdcS)8(3]D;Ef2k8dqA@NIjJg].J3@K;'BPb(lMfn%_
%hoPZMQ>a6]^V^Z<86rsij%!.2kH%2*n%!hpot.eAD0K(1q)Us!JOO91egcP=l80VWL_>4%:o.i$d46RHbF`eoC-Y^UNlSDn48$cm
%eRdj<.OuU6aa3`"#uc"A[SH&Mkp1iUos:-2\+F28S^rnO&oLlOEIt-g!uZ6Y$!q-kT8o\[,EaC._Al57dBjdmGi,+KlQ*SD9e[OV
%Y^e(_S[oW1j#rLaFoaTE3Y8Or*bP8ojW<.!h6<7C=O/FV1SW7jJm2-"Y4mH."]4n-jEM3Nj&PNopAnO_i`1"/!QsiQ0*1HaYBeNq
%,#1Cfgt1OfB%H'9Vt/T/)=C!TmZ/GAMNsL#j9'R24ouqWMV`I^DpK'(c?N\_gWQVlAR54"b@XO:gM86Bb$!VCpj=B+$`IbC8Y4QL
%rZc"6F=Pp0CTJ_198T#ZCTXm&"^0^n>,OFpYm>KBXE[k!4EQF)^J):ihqSlc+YmJQk2%'PR#Ze@1I,fmk__14nt>H+5#+[?heb8)
%_!4#Y>MHmCVtPlE[g5gepZ([,Qe`Ph.ndFSV-EAt5LOd(6['o%5!9'PmQpb_CZ(X$In>X7)fTAd`RgYT!t-K]S*>L9Qsp<L`b^_=
%pFK%7OBr!RNVe`BOQ&G5QkGh7?F-Amq&IW@QiY>S-4Bs?i<qpH"e^5R5l!hq^<"5/RJ7s>muiNW=b-(8h`X3;93#u4D"7KbjD3cL
%khkkq>!IWm=qECuElO0RYa7Hn\V*VR@$0q;N5?0N:nqE0'%gTqVZ2;&5$fN&VX&Z[jd%7f+d\eAe,,NU5N^(31\3fmo)@^;m#'S^
%l`tD-<D,qXkaT6KR!.IBG>"_q_qdLq_Ys3NYMWU`h.HQ^o''L8doQMJJq8?d^qO2a?SJ];(t]W5ljF$k"U"XRJUR'*^Yg,>AE&M@
%I$'7=(te#g^ng)hhqd.:oBQ27c1T<l?[]>(eX+$rr9/>Xq7E<7qr[IoS#]ULil,inrc%\2gKQZ,rN@1'dod9tB-Wsp(@r5!0t">7
%o!/STS`L-K<4qb3roYC'MZ:E@Ioq!Ujr]*(J,`UGqu;i1^IgG$I_5ERs#Fqf4m#bZkE[7h=oHX8(MLPS^s,*FR`Cor_s/TC1p:h<
%KE$:=rp%c-qWXL8gRHAf5Au"QgQObQhVLHRr:9bEej818SmB+AIJ*R4o''MW)o)Ejp%,6QIt..`c*'$TLF`?[rbm2^IsS/>g$=uS
%h01,?bs=%\WF^jud!ZV'c\a+Y8k8iMh"6YoHB32-`_b!u<:\%_E0bOHek;^,JJ)"P!VlH&OU64iTiBV=Fs_5X%IVGoVPcC.lo.`5
%b"4WD<Aql?U+FbmmQ;e0OXnEMgOrVR:t`3q0qX^HdUn8-dHi3j[G5*N5tuB/3KpH/V'V_TB6\.4B/S`s/`BBN&?hFX4ui.*hS-rb
%d1LgP)WE;Co'7(:U0+jnTCfL4(,3Fj57?JACsZ!GfJIRF<6p%=CULUW!+Pl(rMihfgXLg8fQd!;qJT<=Hq2+di=&sQRu0!pm+;'>
%,W]X<j&u*>_^Je+6Uh/?Gj3+hQ:9Du_:P3((KUIfTiKSR:6Ua1jO\F!k@0PXH0mT]"h_K6^J:BLjI>6o1JX,mP1L;6N_$e,Fn;/I
%Z^7gdg?cdSORqPHVA_H])/gLj"%7Z]bf"0JI=tG&/)M^eT>aq&#RD9=1!)N".\[s.AoriuOus.sCoHZb/s[)5S&C6C1F>u9dc0B]
%SFq%j0;f-$%Y'URTUS+,VR/`jDMt9/#.Ic?U*#`A1XY,TS+TYsW<ko6()[4]Pf[ebZ]G&_-R'qe"O0BlE>(r+'><`,_ERJHW<?I.
%+RaKEZq=[1p.1;lM%<E37b>`e>-D$'aC7<$0Q6I%-L2(ER`dGr'i[9"Eb(p>o@E6L[#N0+,g5(7r2MRCfeTAZM`YKuSq75lJS`M_
%Q+J>tS&h+]0:L6!gLu\6]RP3kU!.1ccu1)MPk0-e5P#<p_]8?0pT7#_d]SaQD3"4g9^#QG',a+en'iie.2+8kS_<ITQ1U&X\P2>O
%70<!tR9_TJRS#VY$et_4)b@O9AKh*SocYb6!2X/$P`Co&nY/pgO/3RNN&:Df0g@@JGZ(\\8`17K98]RN75SP]50i7@Lh.c_JP0Q>
%`;hof6jG_"^!9As+pJTm-V@ps&QLkj?Hl(1-P6`66D0'r(9qGt(\4WjX56HLP('7FI;l0uG2WE]<<luYLd[KG%MCuH=uT!q[-5Pf
%d?;e>_%m2(2NMNU.dS@*)UkaCe;1Y(D<gYKqOu?-UXSAXjS*>MAYZ9ZSV";+:=+'NQfmS/^=i/LU0p6V(48P`<OOk`Uo>W^^N9qS
%=YqH^^AOf1I[R,@07=FC$#LeD?qV6"X^;9m2a($P6d/7b&OSZP^WXMmbFU;k$8jFj--NLY;V4U8l4?ui71Y9.>.M0-QcZ)0*+5/5
%5t\mkY)q6L&Ng0$Z,(4/0KF<S$o./rH35^#BW89Mp+*I`#qVmb[)e=P)WPA>PpQQBZ7,l(B5b_e"ml=cPSFV<1grFS$unmon0a$(
%lS"%U$Gho40%+%t&HNE-QK4Mu'MB-DjSQMfbP-fU/^MM4:iOI*259(f1.s@5mKh0cG]ZDnZeK&qCVZbY0.oC1]e.gA4<n>VPYlqa
%0,5q&3u3*2WI0@9`\MTB`Za<`C_&*ol(S=J8f;(qXT0/TnF%JT_3TsI#;)s@V+$'JcQ"K7'S(cqkpWd"=RG\TOM`dK4IIn".U&9n
%,B&_g_R0'i,/YkX^b;=C4Ni%G,R1%)7GA&XM2OG=,*AZeQE<`Cf]Y;_lsa$Xk*WKA`(0=F+T9_23HE7F,K>X.R-N&1Yb.RB4m\pn
%09;EV@%.rAdfR6VhEmgaU]mf72b;<51<):N?9VjWM)`\rZEuk#B'hX)=C[8]VCkOdV@!.jTm788D1g,uLLo=9N$Bb0#nK[VWZR/"
%kY#9H\+d#96IH3\=dC%@CKp&#1XMR]Zb4!C?Iq%el-^3Ak.(,a@4*Y+a;:4aMO85l'NmM/FV-i83ZqoL0Ji6)#^2)pb(5t86tBs4
%Gls"cLi)1;U1:R^j`\.8Jq:!DmV3T*<mH,8\kYnWkS/<98/].j_ZoZO@p)gC&shZBq8DF;6-`mI"PC-QH(rhtIfs%>0oPhg]5FQX
%(`@#<#n5#)B5N2;%\kD;8["BYFrOT0j4h*kZ7V!5?&@emX(oXerR=Uo<HP!p]lX]RTgI_]pJ3Os.='WqW>)^a[DV[TA-pQgHnWo!
%91bi-h8F)qB?61XggNjY#u?7e03oI&XO`#V+YL[3G$gXU^Ve+IKg[!L;25/QO9H_MeG4fQ=FHt;)CG)',3r/b)cW,>`1ec;g;?R>
%*`J(DL7'ADXiA('Fj^"%D],K#qC5qd'jYE=/$#Y:6R#lt%5\pPON+Sk)I$cnj0XCqWot-43Kt<,.$\jA9Tn+P24PjnNh_I=F>[5O
%el'Si^+T=0H%`QO?69][]"4Wf`NkYP-pt)u9Qk.\Ib4J,+M&$t%SmL>;O(gZC+^f+0Cbi;&<iVg(/C#d;tRVjQZJq6,G!E<;H'1#
%Us`Hd<-f5\b_pj_Ml9U`Qs`Q[R!a+'A5)osc,If+M_LW>.oB\GH5cf98`t`i?+UNR(+jnB29[&3k'XLR-W0qrVWRNWX*=M?AfI\/
%kFsDSaVeq.Bb8`"%0^?ajQ]Q1#\LQKplO11[\65N[4%@%-qdY1E&9r.iEN1Dm6k&unoS$>XG,LsJj\&-HtYF?'D\1]:DC?9o,sC"
%/\tlcMX[^<lZ/Te%ZS1U(GGQ-<+,";3Aq:q5qJY^KhsrhW2Gd:R)@/OSjrS][dRM*T,7M&55aE,?X`+uH$&u7k/k)N?<uIdYkdC(
%HiE[%gD@W>I<17/O+E3\d0^/!UOa\]-gP5>J,r!<h&m=[_NHnYR:1^;(#onK;oU,oW_7CPG+NqVijbt$,UbPfq$"&P"'K:I?pHmB
%W#WEMP=A'5$P/$XY@=&T]ce%V9`.@c.e[>EF-'g#4RL9`1pHfk?7^=r9f9"[+h($If&-<!]C\>dn[%(h"Y+Mgc;f-kS[+p16CPQP
%m96pcA2k2+Th5ip@g.AB7:5pj-A7#*!"/tD>b*sfRS"[RL6WuLoCp4'QFlEA;8ad):`Q2qP:TsR,2cK5GEE9#I8CtPXbdGg_\%C?
%i#-5?#8gK0JWgEem(ltsBNI/if^?<alPal#R+QDIi4Qm#FE<);V)#^c?Z)A]'1f\bo2VU@bf3BN)IaG(d=IoeYg235>Y6i64Z+/Y
%KaAm]BE8CtLO[BWGYqp<2"7m:c(G+gO8rUEVZM;ik0rm;jlu)2q;0+%P>@hfeL!.poi$3)?24*`)VLR1D+WWMN7fKZQc0hBV2.m<
%&sOT3*&Dq)BCGUhZ'J?rM1LRT^tK0-LA>AN^a]c9dj_4sYV!6VL<9AC<Q>5NnfG[R%*?.%0@![Pi;ssLQDK?=g@A(P6)@/S=6Xk;
%edW`IN&A0s8KU!MF@qIIMi@"=_2-qRC^sPud,NFRBFuI;Z3<c,)H%HD%a>Kt3fcRXHQ6UJ:LMO:Mtg2Up59N5-jq]!rV7k=$sq2B
%qN(JV3[W=OCTrN"bG-UQ`7eBn3sQ%d(sbe@Z77L8B[S+U%q_HtcEWbp7]<a3lP9MT%9d;*b#8Zf>Ho9"lDm[q]GB<So<m5-Zudc_
%AWN6.M`dLA%j_duWe20)`:'"(l2?;(n8Nrs%.Rfqb'GM?LQR7U6jjG1]/2h@i#/7jAXmFR"kYYF_3Bbiot(;g9ke$T_)/>,a6"eQ
%1.K[m17:*XW=E="GYW]H:f[SM&^:N\_+nCIMi-]/@D+;UK\2u7(!d27go)LN5h&mOG9T%\Bel(3hLa9+$^pb9:kY<LF?J=m=nQg&
%<\5&>pB,G*Z`#RMTkDW+Bqc#H<m*%IJODb=DD5i3UP_"pVe+q'(;!@H2"5eHDV*HMn&::;$$%B,H_qN(MHP\Kn0<kWi+,OGN:&=p
%%,a;fM!;1`5n?LZSYjPq'TsV:@T\M5_K"fp"rX'81K-t5E>h6]X%_*d4poFJb:d&G=/%Lp`.L8\3t!XJF[-q(dp[=nJrc2BMA=2H
%T2='WP8OaH[SbrhPNo!(VF.)"Lf5pi).4u-7sT^=i\KenSd=uJD8hD#%tu/LWgH`0!WUUanOYmFliubnQN@T90\%iWI-NZT3>fg+
%73dcKmWXN"ABpC;8G.-H<,!j"<T&O1224jKnTGr),?e:2mA)`T@tL;i4pu$QL_S73XQWr8WC`X?3B;661I4UKdI[R"A;$0A>K!nI
%.j<gjYN,\q5hUgd5Z.(VCl>"4i=Q6on1j>geSK/j]QkPpk69b$(>p:Mj$_G?^V'\n18EB5[gTm/Knm8hT.TmEIWXR!,N`*:MoUUI
%7@[>HC8*!8pI&s#CWYXsFG=0U,;,.skk/PBM`B-A^I<#T30iSb97NWY(G=bKk,Y0o$$JI??!/&=2eDe>L_pRG3gB^2'?07].<VBe
%lSs9BKP=)WV:*@@E>>Yf=C^G:h6Q[$JeahbO$XcfmFRXl.mn+WS,(bV*6f)c62bE0Qco_\c"IVVm"1UFErD\V3s:^W?Fn.clX(c5
%,089=:PBV6>Fpj-_=Z/fKXB*oN!WP'%7<'1!%JW5`p6XK$#-)JF9UMRQ3J3D`D*ULKjbe?Cf9o/9I?s!C,3@C+%0,#kQj%gSKj52
%HTg9b]8R/Cq$mNM@A:PtjhdSP1]Wi$7<PJ5$J,k\/5Uh@]Eo]3XZ!9<0Jp^QQM5p/,gR'6gnc*.=[bRad7c/uNAF9@2B"]>9`ull
%jml_)@;+2Y'3#RN<6PMc[m1L*&W7'U*)^&hKg'?SHNj<9/s.5677AaEKgOE\V/rY"hHSK>@gbX1^c3f)G[(T#,]ljIEBV8s49Gud
%0UN`^51r8f-n=,jgukN9!t(EI:+QVSU1$>Z:IH$95bSJdf]7,i9U*lqJBJMO:QA6SZrkIUdpu8i;PRRPp#SW<\7c.De/27#Z.(n2
%Q_Nb4?\dS<A]HK(_:CV+&UPZGI`4,DXC+R,7t`B%L]XUf!#pGunhG/cQME+9*uYs]=@<EaVC`_)l5A2>rQ*b+6$>["R6q7A!VS:P
%bK1b$$-5M)-F"JJct/Re81C!tA"`n\W4`D*UI*FfO2^X@[?KgX8P;K7K-Bf!Qbm2Nkenb4,5Ztl%UjfD=skR>\;nE,/Ojsb8-lpI
%%9&Jf[Alc7FKhLY28Naf`]#m(:5ajg/eM)3pIB`OQCp'j2^g#q'GS]U^6X?8Q8D!(ZlF)m`8[&g&EK.t2!@n,j"OL?CT>%X#[<h$
%pF4##6b&JcKc$=hFYU02Fs>cMM+8K_T&15_%0Jfbas%Rgn4J\^:pA@gVV3b3><WlYJs;,k@_@SLInhD+M*O0.Ss/AQ($'[7J.N)X
%0sF+62(4jmr!=MYfQFg_q[Hc+&8%o!.CtZW1/c>KG)_6QiFQ53@/D5uEi;Y['Y*NK,%CTRiTjtVi-g-27tfF#&''diph6HCFs6#G
%Mf)m[<>VS@`8))(8dMY1.ZY@m$f\1oq,3\*\HeG)LnFk'!cUjL<fr8KQQhGU>HgWqobm7S7Dp%fja0u'etWC%N(%-&.0_5Ah=&Zt
%$`;<rO#u7qq7H<*37:=PD2fdZ8H^Cs.qtGo,I'_JNr+dgQ=@k?KU&']@L=S2`,$FABFnX<%Xl`ARg?D2i5i_uJNh]H)]1gaHYUud
%N?f14gEm[r6his5Bs,>BT,aER#SU1W+CQVd2po8NnKJOb;lnL#"qri1UoK@k1Qhh*[7!\HBd'FMQNef&WD5!1]Ssdj.@,Dc@Dieb
%V%bXNC;^G;2>f8i0+@qA=DIJNM^Eh1FJ:#gUM##Zj$%_8Co`1jX[1hX>:6h_8FO@+&i;kJ7YF27_`0WQ8g,.:`]6c#e`)dgT-j?"
%E$(Nj/*pfDKL*Z]9QOoU(gaq/bGJPM0Xg2.,SNere"e-*s/$9G*j'FhMR=lT,]3\d46T\l][G+7eA5[L,;C/M(j:!@Tp_=L"61QR
%G`W)u$f4\8M5,"P-GW%=0S/<5YX8g-6.ZCA6)#2#D9d'NUSu!0C!I"G7:L/Z0$RMb&]JNj8`F3L,/FaA*/7Fc72?)#-&QePUP6:a
%6MiCCYUA_Kk.jrH.2'u2DGp?L:2M91NEF][4Wlr=!uu?kFf'<4P,/s,H2Xn8E>&EhZ2hs]+s.LJ%Tm&!IM-3W'De!n-1IaV0hM.6
%B"!N$Jd=&&_^M+8-8>N/+>q=sEJPQ7$c+NX&j^,&]Rt3_>LbLADC,t3)1d\m,=[&kU=BU#cSK/Jn<TLgPB)_kTQu-CN(b*DH6Z4-
%]GW&Nk3Xm90Jhl;G3G>)olq8`dER\)-h^uq>XtTti;M+-cTt`FMN@LcX&Lnh-0a!68_m,E#/pEJ^"8GchbhnH`'-pCGDr=`X$Cj!
%3>=4l@lI1l6_Nb,49]X[,%R]6-d[+%Vbq7;8MnJHa<a5F]f&4oA*oHP8b8f79obGpG3TA2`Xu3D5lYdI5T2Trn,\sW_>mnu>TYgJ
%L=*U6>p8Koh&Og9\.)dV>0sLBL\lm'opV6k.^O<KMcOS'7+JU@RP!1oE^!V*C?.uj:q+rZUnY,#fK"VP?rBe"BQR$tb)Rb_7<-\s
%`5*kFCa*nOi#j8/"\r3!0/7Qj(N-,t5@s2MQdfLK[-Y0k[=QC04:]sI[YE;jas<LY\N,e?"'&&]d=3?In=V4_0Fij[MN>hDRUHb>
%(^'P0NW0*?TS3InMi!/@<jnp^X.dpIJKRq;Bc1o<B@>ne"LDK5_8f?-7H!'\I3dH#fhmgoHqP4aIbOHcc,f($O<M(?plIP1=Kpc#
%UBNq?1h:ii2HG?:n^*$`'!htm)cQ'aRd)qo7'A#t,8tFF7)qm,6#13TiTiKcJ1WNPB.-ZE#XT_JWi6J'O9`-(XFNX@n3M'Y)utNO
%G5uW5TJQUI6,T?IMK**JE/(ZRcpNao9.%Z>Ol21KAO:Q*oT;JWou7b3d;%'Ep&gM8Lmcep/Ku..+@K-XClk&4er:*@"&@a"U7t0?
%&JfJ9=j4e)5UK1B9.+#!E*d!;"?\+<AAU@WdiOE6CLcW'MQUF`!7o9H1'_OA6lN]gh,gt&[2gb^Zb4X)"2:F:a`<i7"/1IKObnG%
%eS[0h-T3W"+`\h`X>Jj\\T)EsNgUUVX*V+NmeebW-D\L&CLX#T2VEK'Q=p,$ItX`9&*6reKCD^+FmNJ-oq=3$EmQf$YR#CEY/-t<
%@pbo`6&I-0/OYoOdRI9BW(D-D!D>1"$P6:^fe]M%)@`WA%t9LS/)X,/97%ooaIjkJ<10bL'eN3Pi'^loP#?ZHAg27VP%MBQMH5hR
%'SPF!.7t'Q<Fta#<&,P62LQ5Z;QiYpY`[b+ogC[4Ysnf)Aag_Sk\d&"6qi^3K[g)7>,@r_`Y-(iTDI;:bb^CiJH6]VJ[F7;9L-l:
%Xbpq'c@P*[>ZBbhLaL%M/Hoeq^d1<=J/^A\PL4j:Pndd!m",<6)dS!\]?,)*QjWIkLYt!r(c``n5hLFPr#oNG3RVf>K&fPRK`kM;
%VDq%DIY\_;C_/9S1aFgQ(/#g':,6EQ'\JY&@]QGj8B@g#i59"uE!)9)nFVk!aqutt#Qe8Mngmr(J/5aYiWcB34i;A5<u^@JaFVrB
%1[L2HO+au98"*oB6"MAI@t?#i-6e>.f;)5R<ZlDI].W5,1'oD&'7(*>aS:\3^7nr6/I4I4*Id'qLG],>QSPT316\Pr@@$`GD_ck8
%P7`e/E^G[r&-eq_^fW"563k8IS'[-kO0I$MgVab%']=;g1*CKP!H]$'e;=aJ'UHP12Pn]H4B51!>%j'!5''%uqW8j3a*4N-"-nWI
%HpU4RX!*Ckr<+@]Wu3uHO<nGPdC+[V&5Bc6<&e[EO1:'iQ;kh\&D9Rf!PM*m/TK3IL@\!K*oZ20D/Al'UGg.ZQ&2^J&9X@sJNb9^
%;m0k1L(1WXYW/?rkRDhJ9\#>\'94S`pX%80#fmKLo/Fd;JOL,&BSHbQ9M>\@]ei:XZ.o:B`$;%tVjK[c8:pQ`=;UOT+G;Co?g?g3
%jZOc#Y'l]pT/r_e!6S//SsJE(>6m>+@`m'SPHKp\l6@[AL67+^XL9QN.\:h,97%]Th_faa>-ZI493_e-&F8D-H6%M\(0XEL$^U=>
%<R=.kP'ueJl0%NbGJQflEOV]bUe/.Ti/p"4bXO''b6`/73*:tb>(rG*<1W)Sr6&ni&kkY%ZE!/N%5ih$V&A?V8W5ne1b(rr-aJ+-
%#!/),,b!dLJu;.QLI^U6J0KZd\19@KJWb?a]:5t*#dABl2r>MC,rQQl]s5EgUkLU?/Q[72Kup*hB]OQTP^0l+Rlir^[.pHU<-`l;
%gIqf",E\cf7.C]J9Hq^'L^.*1^]^8*UF\Z)LNHiEYjFSp)Nqu0BTYlC"AB(=&oZ0\(TEn0\2:WTPbJ^'TIg:/9N)1dFa:2@9"T1C
%BSqX"4gUkLCGMOk/.*sa%m<-7%J+7DIA0Leb^R31$qt(XRdKuXIm"RZTc*2RHl57(b^]\`LRU`V*jg_NeK&R=>J^:-.,.BX!L!V]
%$":NI&:$PB\Iu^)M;$m?i+p^.L;sNF%L8OV,MS*T^_>QN&8_eKF2@S9BYYC'9Jdg:A>$msAuakcI$KN%6OW6/[U:7D$S%Fp_Sdb4
%1i&3(7gjj?7C51Q3#X>uRfV76aS`0hGcJCs,(a8rX$$_r6u@<N_?+ncUmZ$bFm*us2ma.;o!1aC(2.*-!ZL2f/>PUH!Y\$5h@+G%
%.!ENBHl$rc#*k$$4Y6p'eF\A)F+u>u#SE!d4G@9qs6p$%[_b[uJ8:Q&0D8pgIOm`K\>UH<?60s!KT?G)BeoWL[F.'F+X6D7-XMWL
%lQ/hf1GM_PW2-;FQ-9B'8aFVh9&YLa[P2@=Xt2uQd97C\M?]:@Cl*ntj%3*!Um.gu)_J#0>Tfp-Ym!:T;-_Xt+qD8MRe0"6f-0<-
%_sYQ$pb%Bs'c<EVRA[9a[@>j>?t;_PgB/211RK/;(?V[pCitb]WFt1[-oA=CEA)0b>+U8R&7;^t_5>JpLWYm<dMrrt+Uo,-^t9)p
%DM$J8Wq;G\MU\6!K]_X/=VKPR.3&==9UL]LXIt:'X&lUf%24>e>3&,h/W:7DP-t;BWX_k;"1]roGg7W1Bj"5B&JNXLJ6O8]BG$Kg
%.aILb<ZR7^X+lt?PLf6FRu-E#!Y_9eO['G5'.JeIb!@$lP6M%M,fVR/Nq[,H1_T"A^-:=4k]/L8Z^"HO_4_'$9uR0Vc`Be%p#Qe0
%E`ruRK;h^W][0W.\"GBK0T.9s@(:;^MGKmD(ZS-P6B3)aIlL6AHU]MahFb.C1:W52JXEc7a=T<P&OB&AD5_?Ukto)K2;G56#$C+o
%diuAq\cSIb@NL%#7E04Jj5Zp=?],'i/dMBH(9:btR[=h_L+lLVEC1ZAKT>eq@h29T-Hct/$S?i5bu7B'M[rXQ%ua>M#dMOefTMAl
%AX>`JdFsN1!J+jY6l+iGj>8N81/f3__:kh<[mOaW&eEKD8@DV76g2eE@&eA11RrBpk\$tnGSfL)r7"Mq:<$@KhJ!$NSb`*+@lD5R
%R!8tp@cVSUb9dMACI(=rN:Wg<1(sr7,9lYk@F>)TZQ6(#fo0/@,V?;G2\<o<K#FJ+G[S'al"FHpWWQ[SL5!<e:\Xq(#4X_@neolm
%Kigni*Ak-;4on44>Xl\kFh&5%ZcfnV&3`gg#.2qc7U)j\;(/JMmrHq'--1P;R]".f1DIY/!,g:XM#0!afhDgL%Ub\BbQ4_c1/!oJ
%'>XjSN$X&a9P^0i[,^9?pr/:JTd,ZA?3b/%a;E5P3Y&<h3aYKEKEKtr0:14;&e1[t2o]:K7FO!_OKL]g9ou`\(B$n[##&C.^M$H;
%W?S:Y-7E3l?I23+8,!d6[EKC?f?B%*U\u6:S]kCf]E4qZCfQHGd_d7WQZ@DrLbTWlKg9Acd$-),=Vn#G@9I8H#"@\H*j.[thZm,9
%&;[L%W#QcpoC*KN)?N<7MC'Ni0Nj<#!b`^r_j,86Q-Cb6N!*`J$6\1s.hUZj'N5B`7b&Gk<Z_DEA;lddp)LG;/"07f22:@0Q=a-u
%IM@F[N$2l[f[m(C$n["J=VI[sLY/F<:lqj7G%*2L%X#ELo^HH$(3gTr%XY2Z%4S'?IQ)S'!#&7A-eK*`F\)lhBZ`#).GKH0he6mA
%(,."g!m[@V\rAI;VPpd9Lf%A)*m?u^nfdN#;ht=.-$m-UN!rdI+JC)MCSBdJ(8#3dC!$tGiP'7d!SU)OcARqg<p#]:)UpC"I]nR$
%B=a-TQ.G.$YCsYX3QrDG717ci7_H4(`ZECaSeVHaCG78FHm;m2-5PeHn6U0tR1M1UA>U5k.n.aIei\mJj,$qKMUlPu9k2ekBEb>b
%(:@p4j$hqOHBVGg;FqI'5m&GU)RR'\$0Ro:Dpt%1'k)J!kW"1bRM3u2i20@@ZtP%K#Qa&f*TekN^gWT2/3sQc:Flt^Q?R`^&pPKJ
%;@o--EVf0p,nu`QdK.%;JUGlBP`R)0]JBW*:_lHn1$L&[77%8)l*M#fDg:!LDd`OZVPVUsoK=U%B(a!*brWNMGR>ZT%Z$gYh$Z/K
%j4Q,AB],YXiDCh8!Un4irc%<^l@D'-GdnIX<-h>rnhDnIr2$%#;r7a9IJDXd^"E^`VVf&crqBJIY:e^;4o8QgYZmY^n[Fk:2rF(A
%?iL!%m@Qu>o_5P,hnD4%HJAAg=.=^;n+c2TEi0GL_aDs82,,XeikNjk5c6=kH%Z@i'mbeSnYRi<V'>\4(Q&6=nM6%YS,nq_#bKU>
%LaqOmOA_%i8nf2]if&R\/grSE0r<?V"p]JZ<LQIiTUQjac"J$7+38Y9/kMa/e\DUK-N!O5H4gQ8k#7eia:UX+i@G&efI7f$Ad&j_
%K'X2mO/XB)cs/g?Yt1dG#l&)SM^2kNQ1'GJL;[0,O_B_4Bu&Mqf>*'WU4'_X^D=+s-`;fJ*aBU8C+?rH)fej(:d`"#C/HEaU\`\<
%VhaX@'^7^H?hgCj"7T,h%Hq1Hb-RfoW1T'KN'se1ed\EL3G3_=58!aU+:jWBaRd227\p:[i_\VERgeR\7Q3-RL$gg%C@&kg;dY+&
%bTrFO3%+,>f"BH]isa-@-1+A47UiFe&K,>(%H^c3#V?J:P=5X[-tq#dQF+lp&L)oo@$n_rS0\kTpX-iWI@sl6d7pFqqMnh^mF$e!
%BL^p86:Y&jO"p=.oo]F20hd`rel\`[R1p,t[MG(qBG@_I")0lrRa>A2NI""t+KU$&aeFJ/-O)5;T;,#MM(TOS[b,<TDlK%B::.(,
%BZ*RMrJD;j@NPdXghqXC$j37oKE5G1<ltYD0nR)r)2K!_"lrrC#g.;',)1h'8Y*Q/hnEfjMdDjIQ"to?$gTbA*i>FWXL"$&T1i@W
%k\aWt#Lg#^K2F%)):n1X9/3j/&\LLoN(JFmX_]Tf5RZ.)64M/d70Z-EQ1?J"ADMpBlD&BE82^Z>,YkD+TU(nX*LiO!'/7mpDb!j*
%@L5N&5h*10hP-@25SeZk4q[<:at.Icg:XsBOBf`,KQG-I"Z%]TYA+bASo7JP6=X%S0Dj0=1RcOgKG1-R2,dP'S8M&Zb/hRf'eb99
%a)D-f&VKuM#d\#t86*,nX):LK_=),B+bl9k_?p\ph6-h2cQUkqhO;$6*h;cM+[Ssq$k,f\-Y3`C!YAa?&oi_lrB.sOTS&E(a_;2@
%#c!8XK]3:hkR,NrW-m@1MA$Ct@aHA0VuoiCQD2@PoQ\cX);E,.;XI@1\u^4K4XV.*"D2mJ/KRa)Cs^@9XpYStHI/?FYD")[PMdB7
%ZQ!ULU"dCs%X]'<lX7#]Qik0+U_9@j(bMhu5UI'S$QUf7j$_Fo)$T?%r:5pT.*Ve2J:9&)8Ya!n/dl3?1,;(SN@_YR+E5phg=BsB
%"#:rFF<*tcn[W=qJ^X*0X_J+?D1t&k->lFQLVbE]dRZoa*WenK6L8B)r(c18ThdUdW3M'kd;>ho^a.m_J2,`5P]28*]EeTpR@@,+
%NmTWsOsbiri2sd-hT3[6SQ=^Q6nZ-JL.':<8*MWE7LBK9,t+*1d0_'aVWB%d)YP]W&=onMbqI3)ONS0CJ2V,h(?lPG?\']0/?T7^
%l[mXY*(MRa=u0;'RFXB9KR+grip_5fo;gujl",5md2@XPFdqpTJ/^b`UL,B)WAcp[SUcR8<aoB$bO(FI'*gB1E%Y"uHms`fcp1<]
%oO:oSJbdZHDb2HPq\V<&/:^t;+dPZN7--+#VP(=_TB&H>UOaRDIB-foGdc>D_")L`g6?`>`Yf4s!j$0\K<t^e<-3"H+9@<3\;*GB
%eY3&E'-ii_EGG73!Z%kh#\_c=$1r)Q0lp3eL617;C'9n25]-J4M<6]WO*SM8[n"+q@8cl,A1Ggurn7I.TOgB_*^aB2'X3mS.4ZaI
%D7#^'EZtMR7Vp*L0G.iT3f`Mk.hKn^$&blC7pm*@/eG?D5fO#.2fKUb6RjW:@e%:`"FZYZObF\]-qZfl@-^!?etRmqEcG8SmE#hf
%b=@tbp_.G,/?UaMD94=6%tf8?JYfPP&HZ^[O^s9J$sQ@ULg5IMK"VPkKEY@`W+Z7SP:T%\Auqp;2hp-K,pr]e%np\fP1UZQ,pYA<
%Z^<9u+oEE/ejAVdK[o2[?SPhFncOD&^tReUR4?fUl-Nfe6WY5e5XW7+0GtSh:m.k7<10-e'k.<$;C!)ml+O1k$6$Td13R7FHoFrt
%V<K2`;k&M<Ba,`G!3lke%?%)]Z!m]&7EinW"]\)U%Y7SiUB]kmp:!P,3s)Q1re9SK^u.8iIrm@L,"X1,l9d\eb.9<&n_*tq?m$-I
%D7D*<@qK8C/-AGHY/;5I2?>k]dAt2W5-XZEEBu/]a(cG,3OsAICVF*&"?+%79`#!\M[XGY^R_7U(K:<HOL[#r)`@#=BH\]tYqgS\
%jX,u-!D7NiV_kL@0R.8BA`H!d^ofak,\`>n,KC?/1Z=Z$3ff^X8nnqt^`Y/p70A()LaIIK'Vs4$/BrfL.\5A;0n18no$Q!-%"09V
%#%ei%p5<f&1QAqic"/2!NguE_5k\=EQ[YK"".$6)>mFblUB/#$%1W\Zpj$-fM_!K#oK(hmBiu`l9_nt_eOBr(1mXme0eAFQnGkBg
%T45IMnJ?ZR^AOId`-lqa',722^_Wd$;n=:)p`LI`T0C^rB&K_(0ajs(!\5UjR=/#*8Q1jFj1I!H+XjHr1(JoQ/C5M/:e[pBIH\Z4
%*n5V>U'I";/@;.>eA0]K0`fd#oaEl-j$H3rRBd*=5diB:1a%`U/<I[q@)eCG'gQH%/C?CY#mD@n[Td7bS5A81[c6mGd^VMI-779:
%c3t]1SpC@"et^J01iW&FniA53%TIkZC,VP_(9G-a'3dN^$CY+;`+%Ef\r&4OXKVt"0JLhqY$f3\G,]*kK*6)9\X/Wj7(^g4;sK8N
%^IER[Jjtnh.EgB*ZgeY//FZ>>T/t7%FJpK"5t.V)7K\j'1s)th;%,CSV&E0NhC0A^N(?U.-NjFRN%G.No%E:ZfaJD-1IqMTJeZSc
%i$]$CEcgpZqA.Uc:@m$/]Eo<OBF/S)E.jO]Ogi$e,nkQ!jM<?MMPsZ8/6H\VS\^fGVS$DL^`#up4"G*4*7a&u)%-Juptk$:44$pJ
%7?]VIHjc.(e4`9i8lO^lAP_r.V>#]R-*-23,*b2Pm1am;!L(5)992-pJP'k!hf5A\Fta\K;Fn&0BlFl_R:Qn>Z9Z,F'&f)R(k%OH
%V@+$'5U*3MP_<^^JN2#3!&oa[L"5q^b07Q#M]p2%bCD^,eQXeMh"/sgd;+t/JUgL!W[>9LKt*f/-_O$$g70t+"tH4&<OELS[>qF-
%8qg8M19)C!H3@DDZkc\A+[AqP-lo%ap#(W]3WuV6UdYW8L4YX<9dBrj>379he(@3#N,hu&a4M2s?/N#Ce,i1bYDY&,%,S;L+F?!4
%aA<8?U(IW);lAfW$N`pW1XucUV%oPk9\.V^!!8/<d>U]miMU!L`Fb8MO:%&2<B-\l8B60J$SsSEBDAc=R^=sZa9qb+0RN#NZ9SOq
%rBGG;OAsS?Aj%bF>$2^JX:CqF@Z%7FXF=kO^oL*rDh@[<>"JYnJ<RB\8=9i,MRe>bF?h1oe&:;pmR`ZLS0BKN%fI>9'nas(%-CFL
%a!h*#kqlBNZ/D:`Y$aMhK!?\H>))tVY-"]70O6_Rp'\kSV"!8aMi*l@L.`mA6B4\+=&gFM@Wqb1il;,Z<'QK8:I.%F8/d%fj@Z,b
%JIGRp=k_6[=LF[M2q@2X*(g>XZ4P00B?q:%jnrl4'JfrG&l>pe.Vg;!Ht]@\?7^Js^'F!nqHQPPfa-c6OGdg+YcXnRE@(SJVqk<"
%:4ajtEgF.[`UoQl5gb2.0%g<7::nqiA[eu)@[03#L;fA;:@=AG,_Tq[KF(%D>eX>_K3kAhJO'1PTm)s2ARMJLW0/T5P=;-<=kZrb
%52iDgU*dfRc/=!qZ7tt':!.EF1SSq!VbrY28(6'W[8i#fQs6JP!XV-A>SQ&;CF+P"fj5'6faQkZGiC>X$NX!up^<;+\HQ%Rm-dUK
%@%CSsB2=#5"abV'`0<mF_EM"]N@RHVB?Eb[aO#GTQ(rLC/+:4<fQN3K21cZSp(8iWL:bWfGM$fP.q0I5d'DtNC#V<25e2^TOt?ps
%-d[B!BaZLe[%u,[c%)IOIui.@+Bh_M>MUgX(;f&grc1*@!/!l-Jl*OY\V%jPPI3.?adRQ>#O.M6@BB8sNM/G3oTmE'VQ@.i%43n9
%Mi!j$RB7,rq.:`pRQWQ45mNT9&sF/:A[3Tq;M@SRh*uqfXdDL4C<NUJ[rB^74t7C6o!!Y%9nAUegsiL[nd5LgD$KG%P"1R$1Ou^a
%#D</?9oD^\,$-7!aokq3M7'Ud!RMW<nKL4*>LAW;JkIf]?q+sq[,?m^Ah>;1LdJf`i.K8;,S<r%Kkd3K5c4\8-J5RCC?Ebr`"Y(K
%HJV92_lTi[*!\14Og9eaA^Gi3LibXhU<^u`=NM-iJh`9G^^U^(7NQZ0$s*0t.b&Q2lq.k0DG:-6YFhc_51BM*`[?uc'tKYeh_RnR
%X%$6rfbcdNI#B['=plRP!0q+B%8iq@APXlm((+hY`b&3(@hT=fe\X.9A-E;Y@gPct6^i,_\B/EE?sJl$(aOLNl%q."Km_Is8=4a9
%2KluoMu]WeP*63;Z"^MT^VoM$&?RJ*G+@\H33\"MoO0WaTM.R!RKC[&l-R7H/L)FpFlt^kfZ>7uM]#OW5_q.Y^"N%R3HrU3Wn?sO
%L7jm_PVmtf2YA5\4^i+]^AM9gIZ6r/OE$q4Ju%7^=0HA&)T)/IGGn7(AOC?acd>'/T+r5ZZ37P*UK,Q8kmSs*hBg7b"ka68DAmVJ
%Z:gLrRB.^[]7+.r1;js0Yap>*kR'^j1pD*-(&48p1I21Z9H!A*N8oi!mDTQ7JcZ%BF]TCIA`C(,PinbX#O[D>C<s]NJR(pp=.,MG
%iiR06M=m$f0T@B&delh.[5k2oa+7;BhlAK^C=O:6mSbuJr'VTECqELPgf?WH!u^n<`uk.(S*?OsRgHo)WgOU$Gg*Tl;WeaLK;E>+
%35tDp(1/^D`EApoZKKL]?B!T_&;i:+>1+"T3:K[@EHFBan2/Oel#bpeRV#a.M.9ts;jp:p.jJlhLeJf]!ZGCS<mh]C1/j#SF&-Gm
%P"?Y*+!b`Gd$_hMR6l9^iXT&61!J/+\=2R,TFU_'nD"Uspir3%*0/W&Q6JZPE9%rL:0d=Dj5Yu]FkUdg?m'd+AdrZt8P:"ui@q[N
%8]#V(6djnNXuO>XU'5cTSMD0U"Ui^YN8`H12`bAlC6j%uq82AVJsgdN(QR"bac_[O,L/,JL-LVJS@]skJ&E'sUl0AF7MX4%=erBJ
%VJmm57X)cb:2#Xb\4./B8lI;6K.!2^kjaHT]PnrG2tM\Iq1tLSXa.c(GK-=FBKY5r/7_67i!BXZ'P$6?SoCnmOA2S#KL:m-^2(\#
%%UV(rDE&G#DJk6gkT&R6TT;]naUjJ3+fp*E+C(]B43>eGi/FJL"'s<,_tTg2d+Q5Sl(Q9C#:C1+8k7[pX_8u-E.`dN&t&3^#"S]T
%T7+ZeN]r=K&Eq'j@+qp2TGGK(+PKGjjI$jT42^m*?j6i:(/=$N1H;ju6[3o2K6'/ZPRhBq7E^i3>ap.SoIe8gVU]V)q9Am!=R!5h
%#"Qf>fh]Y&,`mq%jp%G^<oi2mbaM"2#Nrea?ZpU3dW<50?aGB[=UU<Q4ZI-gOL6e+_9(_kD&q4"i'a;BQ.tQ>8ZB\RTN:^C\k-0Z
%1Hd]6$J$/?IW/2"@@+/45<'*D-AZkpE,Mr#`;Rsl%b$d_H7O;\dKQtYT[SOW(5giQFFJ29kfuCCIW3**b$AoWi,%?@)*9geAn0*V
%MB*\PmRS@2g_4:l7o@*k*h6ADgc)(YK/8dV>:F]@E(#*k:0uD%4-n"!R2m7VRci;U_+F@d\k>(Tq63t`QtrpYA"?LUpD#bLJK40+
%%!HRkJ5#JlG&SXK`JW/XG&Su=TViaii/[]?5U1GuE'SXn$sV25A%C!\kk*eHd@1)1%uqF-N*jtb4)WRP[(k(B,Ab<PUGY1oU-raL
%(d0hb,T.scH>q,e4X(.*Us6#UOFqo..`N]NE"WFrB=-NS23)+o_$uE)DBe-2MAmOG"c9U7SK$?6,So1ng1"I89Fe5MPFot5kF6U7
%E.'3ek9W-u^)k+-,6si*Ti6O.V_/mZc93qOUP7Hibe2p>B*WJgWm2(!?m(:g3]B#Y4-Mb##'[VA7!36`YC)FLV?R:<b&XC;2)l.)
%`P=Pm3++]T5':UZS5Ztdk_^;6Z];3bR2R'<DEoYrTEZctXHJ8jWPL<-NGRCK_<Lqp(:9cPj$ICH>]GD6X]/'`c4,dLV17dci/RpK
%/K\tbP<>ud%j\^%aYuo)P8-#9]fjdjF`)/8WFb2rT.aJiK@<1tQ>bpj-eFUNJnj*!A=b"Vb).,X,G=om))jP((5!2#ceRI6@8uKN
%N#UPl=+Se3DK'RK(t8>E)]UAbEas91E"&_po\(TM31;_Kgpt7H,5GB$)]\1.19)t:_6M-WEA3"qiMKD')'"7EK_H3AX&@M\2jhEA
%J6?fdf8\Us=3TU`5[q`WB*QB`X^]"R"p[r%!frliS@kSm[[A#g!AP%,l!O_!gs's'"g=-CW%2%j\Elc3lE&pZ95?/4'V&<O@)-&'
%D3q=YfhMi[][Al`7e#2ts("\,:@S[:n:>(fMs(?aGj`,u.l-T&X:h\2EIecW@ZmlkJO>N\=Lr)G7j*M2[[d]ZOcfd'CI&*KXs`8D
%&V2aoQs2:f,&gR(-r^)-#TV*?mSbJ7BB=a59P$WMB[Mg2<^bl2]@)DL!tGus>:+G1E1/H".6@'NVee=oVZBRV,2[+Mn$q_6ZTKVU
%\o6bm=MRL\9,,*]IZp7Z0'_4iPcAfDWJsKE'OmV\>?cn$)aUr>=cS<NnH@ZM\2/U">9MCA[#iHBg4"H!X7tZ6$#Bm*QalXXs2NKX
%5(N_Sa`gpW[:B8mdD;C#MufGBM=>aN"ZT168EZ-:S2G1?s#7DHAaN#9!-]ug%df&PS5CBa8_XNdJSEcfcUIo[;B&S=Y6i!Y9;aiB
%J"sj&30sL"gbT[UPaqgp%GhQnDqB1K>4I+&I9C49)8O@[C9%>kT_Y>'Rp%OsZ]k]65\C(pmH]usS.+>Wi=U]X]uD2Q!\^hmJ?uB`
%DFGoQ-b/6[RfAi[OQ;Gir84lSRJjANs!F-\*K/5Cc,_)O;Wn',&mSPE[H.AMB%G0blhoXNS>Ce@ir<W9$pM2MJ(%l"n^cs>_;a[I
%m05;oIrf+:RaRc+Rk/F#C$kQM,WfO!Bgr'H0LU&+VZ5f8T<(iRo\X=Z@e1?5\!`/&SY82CCqH<7s6WoM#1^&Ss5m6#0H[(i-9A=-
%l:^tl(<&!'Xj_bub:(oId=9%b<<$r,s,DlQrQ75![j+6lTZe/J2c(&4#7^BF^8a\A)uDQF#L_;,l+acH+p'O`^E)mZR17U/^X5B*
%b8'o`,9&B1FjJ$rCcg:crf&Ea:kKM[2kN\(da%hdZ\F`hSc.<*@+?9[J)`UJV59B*PBN/O=Y'&]VBaL"mc<9LD5,O&no(s1jtb0A
%hem8/eB,K$%^b.Tq)@,X<CTXPD\hLI"#f^goGAgnSbq/]Ml`)%\A(U+a[[9B2gTH&G,iR[NNVRDX3SZ@XM3]s3q5/chN=bO'7W(i
%HH9m]DmiOWGN*PLE&X^jr66"_lE?#YkpC\6IM+bP+VZ^a=2`uQF@'7eJ$Z`mMKJ!!Z<`p>2g>M1%$\l^kZAIsg;pmoq4$QcA)_DF
%9nc9&QF4kW:i7H-M8.0W8b$!sJ!9Aa,b:M$)igQY9@8U2+VH*qqR&We9p&>NA#'$8#+P%A];5GWLicd]J%O"+1<@4qbr2IEno$AN
%c<m.?S)JdAR@X6pE.CiTYLpV[es].Xft[&g\ju=KrL9BSV!2IWhe9!Z8"KSt2m^`!-2TX45WQJ<q`!%MKOV08CF%ZR,PH%4"8M??
%h[0Y#RJNC'_dpRY9`5DtB,SOYraqH5o8-PuholN!D*e+p5`@c[FR!dVc"0P_S>j785ue\b:ArEKQ)6MmWP=;.<&/k@pGX^9ZJFI<
%Ae^*#l&,A-<iD17/,;,>5)HOeqJWL_[!hCUXs@)./tg[C1XhEOH_(-TG(u/7Y3<V<$mP@>VuHsSVRubKqJW_hQ/@Ju)pM%\lh'(Z
%KP_XBV#MdO7oR1OIl"d"7U;qlk!Nj"XQ[DBQ+D9cqJQcsM00(%2ZkXBJ6C9L6U[.nVpg-*S@G9MT`8VE>*!2'IS4j$aYWfQEgAh2
%g)0J>RM5r+DFOTM,X157Sc@HL#dpRSQE58(ma8?"s/+lsA!m),*J<>;'!(qC<YtM'?1ECpZk^L&s35XMlK]2b2\YJ6+gha$&FQ=\
%f(m'Dm0_#FSb^%R(Vt]lj<udF[r)EM[s*T,Y5,i[BpDuNq7g?X=6AVGpqMBd'c5TJs39E\$S269#G5>=MZ4WX]9Z[S%/t0UGH9LM
%pqK*@.Z8K'%/t/\DP]qfZBB>W,91(\J$\Lb:Mho_^QE014'Zn,D\eDuh3\&s-p:N*![@\X9c:F<l3uTqMl]>89*T@J/hOV/!"M<H
%K(]o[3!<NBVA"Jq$ZMb6!7"6FAOuk3bhq%kMuXi'C%TD$!OtTg_p&.?b]E3)0_iE1@W'n_ru:!k)g?E'Dl2PFM7<#)iuC)e/,F1[
%Z=iaeGPZ5A[,dYR)_hbl%P.6kI$>O5Sc'K^>6WZ=rYsq.3X.,6Dt75]]^,LQKRUsr4bNbR!iur1kPqD\fnmROeBj4nij'a.=(g!i
%R/ib^*A+HL!cYNNN,VJkcF'BbZD4gPjQVJ?:k5<l7=?ZnE!D$#(j67*IQi^O:',mbo7%kGn^/W?b`ejc\KV&ubdV(JMNNF)LN;uK
%,6<Q`%(<(X4MR*p_]jBe!,"KhDRX:!i63HJo5dJ)NlbOP*Z[hfR0?Kj$AR15[RoTa=cn5U2/3??0hL,^FNgg[P(;Hgda-gMs2mpK
%=dDI>@mpGo;j-iN-NT"dF6Ch7!`%/^mQn-&!CqXoQLdQIcKH`:P3F7M:@h3.&ICFcFY!,[!fhQEWi\PgNd4Fspb`@;0(h*sR09$3
%9R0s,JFaWYP6VCRT#"+I5m"4U$QqlCOatnH6uDlF!GD0KYl#UELM'qVOa@U"<4MIoea4@7KEdg_g,ZqL#&'($35Ep8g5`uM%_#WN
%"n*GhNr)C(*5(>47l+(U#7!5^4l&e[aT7F2F(E\c*8lj(g?1;6JE&eW+*PU(%c"3VedWK%3*ODaZ(_4gr#I%bK)ltNL)^s;i(QV.
%l4F%V+rMu1RK"3DWN70)r85cm5?lTd!t*6qcKsG%QpR@c^B"@)Ur]XI^S/CRJfW@uXS/iHB)Z\V_oJ5@]@i2^KD-=HL`6"<hJ^GL
%L?rR0Dm[TQ\AA(0\7mo/U6iOM@'F-);Q'JJR=c]u2=5U]M#*P4)tdD,J3)pR,:5)L<h/(:Y/u30SDU:%-UDIEr!(7\86OQ'h_:E)
%Dl/3FR=Jb=S:UEC!SX"1)c$8ePC7LfCSpG8f/L"9=PC3XqCY&_L^2Hh\ghl<YaOdGc/bS_<8V@d@e*:ebn`_5el:Og?JXD:;glR6
%C^ZtUY^MW*ElIY+M^/PP2_+;:1g+JeL>Ni/.))s,d8fEFhpqE=*u*VR)f,,&i0uipWQk@tGjC$gahdF?N(s[FQi,]VAr;E7Ha<_i
%d,=Xf$S@Ju^GiH_CM5N;2nZl_g(Cr@EsgM.Ec4o,UDA;tHR#^s3F/!$hH64VSVb#lW'ILUVtJ&Q]+0#ZMUf>,nM"(Y8UlBWgI]'j
%>4Ni=35)R5-J2l6V)K_SC!8W52mc=lqV77\)c9OShKM;)Kl+r`]-R#<1I#=[HD?1YH\9\7\T&1=25<+!)&!jOhIpW[CA\f>,A.;8
%A!`G:W/m=/T,G>9:gnmWpq6-.JS`k+kKVog8f]s^\#)P6d<RN+*N\1T!<j#r!Qc@(hLPR(RFciC`;U>s(jt1nrCcZ:T/T&bPbYDW
%]Fh33:s(U#]a9ap'OXZ!NV/3p/;):g$_98H@4(Wd8kgsb:$@QMKC`e(oO\JsS2I!!R]100UGl@Y3Bek)l+/^WYq.?;#pUZ(TMp0S
%]O77Y:jU"^@6f68ktNt5jtK_[".CTol_*l>$h<XBV0@]f#GX6:Hh]t!d@5fDATC;*hCOqBQS^\8BalA`;4fk^Bps`4;gS$[-=:@W
%Djk(e8A8_/DZJ`ALEDc;bRFrZb`psZD3f-/ktQU/,T73)D?]]!d*sMXkm%3d>#TaZm_TK,Dad1LlUL-@kJVI1l-4UO;VFh/%2W2^
%A3-PG_?hdX>u>o(P`fZGDtGZ]*=&8s#E&<8MUItb30d%4oVOQ>HJ9122nkU%_4B!.&MW`hB(UhUUc-#Gd@2O<9c7I57RN0$DQK3n
%Zp<rGd@3]f8-9]fhD"JBJR($We*n^rBT1eu(i3gep$s+^gR?h.UGpBn\Hm=IDl0)Qn68b9_gbY.nP8<X+-Q]YT_)8'%]cP#.D:;n
%kcPttdbA`c1fJ]6qp`qq;L5Yd#2n.,oHmD5Cu@eINAk>Q?qokpYb+5@60X@]Yan.IPhp)V#_`[ZDqB2>(nBI:SM_F-H38Nb9J#S$
%hF-UVb"%uY`9Mma%SgrL0K:mK]`Hp;O'ZmR'A[0_5j.c/97gUjSDF\"GsZ[I:2^oA\DUssD[e2c;Btk3]2.s(Oa<4:Kj1Bq;K%58
%FiV^$lHQOQNMmSm2e0lrQ92-+2.@gekE=AbH823]l:lurqbAtcdL3$#eth0H2C8R_=hQQe)$h1ghFnZ./f`8b'AITZG7(e=/_bm-
%)\'aY<i"TBZHV(kUu'>hY"W:^;X_4MrqfNPO04(e'%Hc2'ra.@&ci[V;K%lbE<^P`DmJe+B#DoihO8X*g.^d+-^Hj'FAd&PVRg9f
%MUWSG(CP^SWOIV]I@<a@kos3sGI&RfVEocJSO)PcKRWTTN7IgnVgeVOr=;j4-Sl0C.-=G1hLf'(T`,UgU.PZqYQKZ^Pu\>anfUag
%5tI_`2(aSN=;a:DC2:p<K&(*BTr,fFTM+Y9T1Zm[Wk5JT!NBUP0J$(;\jR$$cjDP#4!9'1d!J#KA#+7AR7ejY%U%I)ON36G)AigL
%1`Vs$0nbiApCqgf]<8bnTINM,E0"0:8k15?^8Dc]IcuB.h'EGZ)JKOD(0%Z7fR=U8oVp,aXVcL3P:^rmJ8VGh_o(O\]EE4gcSY<T
%e46;d2VV-.lL%&8l/'cr)^%!G("8S=pAh5%CB>>Si3?Z'+S+Eq"p>N`llg!W6=0/S7Ku#ciK5NqS4Jf>eu1[4`)`2LB"Q["QlX9i
%U^Dh9Mt*g?6ip.4*Eoh+J_'/*iJ>p&!9L:0mHC@N$Ju7)po0ma*Ri6A7uQeuJFqh*Q:@[3d3(d;<?C55[6pX\D@7^=c!'NGFpOh@
%?n%Y.R#73r#FR%K]P+XF=YGaQh:EDSCU@c#%U*?9V#u[^BFGRi!+CC,e;Vh9G'K[-"EbMJ*`_>VY)$8hWd#DQTjmE6SC3F16(<"3
%ETE9OEdopW!H97e&6^;K""gbA[GMY5b,A@=I'-Cg>\?-57>,*Vh\1ueFm^X4%rD3YK)i^466%>W?\!mhr/HR@d-:nhb^gKd@*D(I
%;d`dk;\,M)UKs7OJWYsWeci8bB?Do[omii)Zsn5TG5TYLK4^smWQ_Ka^Qk2hWK7[?gg%>(AncJPMSuQ/V.MMg4cga!9#>(nW(okk
%j4.(tGdV!H&^-mM[(li8"8VZn$5c6/.Nn*seJ;OA5daQV=q\=(!^%5*He(*48fC#8rE+tq]Z%i%T>8<(]'d42$sIpC?sj\-K"@3n
%aeU.Q*%IjI!`%DOM@fCklhAK=dAB?&ddfc3<q1fP.o;k5S;SJX1p[FuQ=RZ)U"hcaBf#^X:okiN/S'/t95$F8/!lH+l7E96ScrZf
%#&YPTSct@u`?jCG<sVm7oEpfuZ3j!:5sbUO3Z=t;:mEdqI^)N<'1mr\3X?MsKCbcNP&l6`cA9;n!o'Q8P*^.oF3k)J):l<uIMq1A
%:*2]ee):W:amkg/SgRhe1X`Ni8_XKU&`*Eo(3(A-bhUej:_6;q?:orLY`B$k`A5OD>)sBWUs9-I.*8_-M3.*)a9])YI*Yo&1T:,s
%*!)c&#tVBm$W@Ab67Qf=Z)qX^A,&s!0Me.OM)CRkAWUMjHg+74\K)_#WTP%/^8^!/\B14="]^]3!eP?rZp!fC&l&l-jnRY^&M^s"
%hii/6qqC#.a8d*S2kVXT$o9I<@YMTW9[pijkY>^u/KIY64^t6RZV_[2=],BZSWL`(ZpqBGH88pgepn_[5hgNaZ63*(#%aSPG7/lB
%&?K'%"q!uYWD^71=l.fp3DsG.ag-!/#D6\\7.)fC?Z?SIL:FGM5lGeiG0[PdFIjkC^P)KI!nkM-O;SWlGYZ.W5o7^\_hhABhCs.F
%EJ9\]Kui+>Jc]+BSH^a,E?Cn-,KY[\MWts>,Cs,.1.qH^mkIn(5Z0`oWVOD2f1]?pOIM,DCKpQ\/T8PtjA;>kAIaWGi,1pGf4nNn
%USRr\1%c5<\3u?pK!*e]*e:2-67"KYSK'7!)_Z,HYD7o=G:5n-!c^"'TMO;3!Pg:C^7"VS:QSq-JO5/^`X^b$&fqJ",HrI=PW60.
%"#-4gHQep4>q\%taX;LM,:RmoQk$M[E5ht-RBVbWm]uB_ZhJ@^FW<o[n@Kn>+81U;j9ZLb\lXra"NpH.3Rm/SlkqfYS5;Hn-t7i;
%#6Z>gIf3>`AQEsJhRGBj6J*7D\_,\k^/e<HAZa0]X*V.57A6(K@*%:`c9[U1d6_dmY)in1'jDTg":jMQi?&J>af1YL8:?;Zcje6!
%V1h"N317r>":]!@\D?+T;&Bj$;QX9^JTM6$!1FReD+CHM$n[^)U,30.&\CLpB5]8\1qs`P$2SLnQU]&pl_Ou*>H\Y7aB@:;"9&S]
%N3eJsOB1T7R>Zid17kO+-c#&d;5$FTT&;IjR1V>*Pu>"6)\&3@d?0&J.]VjrgOc5hjQB".IU//6,r!`Q22J>SP5RB'0iHPqE6RBU
%CAl.eZDeLpPokWFKIeja\YAdh*uD/Gk6l$X6>r<8NC@7^fF/`[]"GOrZ0%FIM[AsiOE%aa/!G%/`m2tRAK?U-0u;DiG#Bm<LETHT
%%`$YNaZL'K)tKWU:+Fe+o&N/UR@kF%!nC7[*S\9'V<a/?QWP?td1iq_\>b@E+V.iUg.Dh>R0jGW!.8R,4$:[T4<ph7O;K2[!+.iH
%?.5h8%<klA8'qd5O2r@-q=$sr*RW;8&ja5W[8_^uiD-<um$1bHe;)c:]dd'gQkJ.&[TI6P7$]FW0Q<-rPV1>,C$h0q8-Z3m#T5M_
%BOSUn=ssBD_d)F2@I^m[;*Gs89U62'cXH!A[h*-;<;AX(&0:LifXt]!l@=/tB.;\?>&@^N\%sj@=+55b\iWDW-i,A`!e[Cn(e[B'
%7Q-/:,#^J8Dl1qd$IPhCMBPrY4a&8O#DOpr-'di6L[;u/d-qOoqgI55-.,GaF$Tm6r>GGP+D*ns2U-"!:)Z\Ve^fp5+R&4pc$1aY
%Yi$pn>&`Lbhg_!LKQt2JeU@nXP%.>A8Onp2qm8Ba+VNsp_BUWo?^WFMStZXs=&#,=nCr/H;N&[l,mk\V.cXH,8"g;Gi5tWmJI]]H
%A?MRp*KPg;>iI^;S;=7TF3!&dW%drgCP$ch&.*ed\$Q@eDX=*"OGY2K]o:[<l5NFK)';?pAo+c7"RG==79qhA(sUM=_XWL2@7Ds5
%1D?r3CGQ5&e.uH(Xb]?5Z'Rco`NcIr<;4:uAQFcF'*a7`:m8.t%n@hs:,X2qlbs+'ZR[\4)q&D\D]m[\btdr4,H"\+%,69_54:fc
%;Cj"Sm%!RXco4?9&TK;9q8?OB0K1PEZq^>2$lO"Y6YOR\Kkc(>VPD%:nk9jOZ06>Bisbtn38MY8Jq"*;GLpTGd*0nu=UTsM7):rI
%'ls#drJ?^'%_oe:judULJ:nT<oSJ_"M@Q;L3l5$5!VV*LB%f(O:R4XGV.5\t=-N"*n/k2\$V*9E&-e$X_lhj?jWR]E=@*(h9#$l<
%+Ucht8td3_21ZQ556p[f!r"C]/:]tc/k+S"jY;0uMb0)1#6e1[NhD(=.9+0,2,>-k%S=s=UmdF;c3*=pJD1*YE1RfK5Z<lAdA[$P
%VFZHeYmS"7UW\`pCdCYq?B?KH6HaHpoZSFe?(S[:+T4_`'sr3"dQgmJ?(FZ9K>/-h\XN1&(p-cYo#tN4hnp5F+n;)u:%FmK2mD_K
%5T@?=l#cuY=>dJ;iDdY.7XYA.$V99jXB1!'_]L%l"!#cj.*kg1"H+iC*$_[Fo*`7`.[j5XQj>sG@IN+`H1bPVDhm+.Et!FmAX1i@
%c;5-^o&7C*M@$sqmtM&'Z9%F%)YDEFWP!Ht1A+0j%Z,@#b91\+?P5Ee=b,TBr#ZA9p<^Z;@qrGrSE3B1,A/46/+^C&3!?X8qa=._
%MCPU4Ei8BE\2"V<ck/Oc2[4Eo8.($^7hl)hQc^4=ogmD]=%;lFfZRZqkN7-9k3%QH:$%aBpX"VOb5Me]C6WaaE^!;->GM4GgqMA=
%U7(kpQtq_/!Obh+*fU'eST-,%EXK[QL?m="3Hhh!<R0COI2C?NS$FgD]8da:Wb9Sn8@V>KKb+FNC'5ZfCJW!`4Q&B<Q`3n(K2h]q
%onc."Z#8P*escXaKoIGA224S..ON)`@4<_W:ggkOd_-CBU0n`#`^K"A#uL-oP3c?G:j2rVlF)?=$EkDi[),+"U!$iGTQjR";GH7A
%X*b6'4U%@1jI@b1?('hkZ$8p/g=-C&K$h4;_C6b+&2ApT2/<ac_fuck"^Gtf^6+^QF<WFs3O'k;dL;qcQ7N7,98MtE+N+'d82_bj
%N0Y6o$FO'H22>"6$B!s]T0=CXR%"jBppM*uJ=&A1DX]?Q!tW3.&>gX:#jbo%!hG:$86&iuVD7>B=L6san5rMq,5244+_%aBp5ff?
%R8+N%5$WL:GY.!il^JN9d?_]$-(%udN(=bK>`#"nP1h;>Nr3.6gJP":d6cRnjG#,Ppb[So<kaT,FYX7+80YJ4F9m7Ls3(jj9&M%p
%Q[SHjI2s0Rj6eNlW'-eQ(@DJ@>HHPtE=tSaCaF+m>QLg(.*BALJeGg!3%R3NTS:AQ"D1,+3J<'QE[K?le;?5kpgVnhA!mKlK;X?a
%8c!MV#Zj_rZq:H.E<)ft_d\bQ^ep(+?q$#P']>pdip+=TDCo0&]Hqs-:<RU]Tk#4F%*U?UE,^uR)I"%O!6B`pp#/kDWM\Ge89pSU
%I[Rb[*mTtFY,RS_7oU%&hf<I+;YQDQ[),Yap"2d:Jc_6'"@2.IOmo(n<Pf_2F.+3S1[!OceBbJ.cmh2ZCJ,P^8TcijKk;P5rO*NN
%&7'o>1+J9&\YH#2a-!9NN;]C__X]!!+L&[f"XgS#=XN6@c&VD:Ysd\<U1PsTp.QEc_FQ]6'#98G#8C*T_(NPWahVFfdLhjb-i%S'
%TVhFC>tKrg65g/gMN%6/T#4lE`5#MH?n]BhN38rJdYJ6CLVO,Sk[%'H#.m/8>n/(N7!n+=]k0ZPM6qfu<Vi//g^D.A?)#'"(*^1D
%nYq_Ra6;6(Qms,-^?U&2VR%\6"_MK^V'Dmfjht#gg5+Sm2/Y]m!_glD%5G/k)(rPN[K(\k8Y0TB-P/?MmO(:=-@Q!i6m*!V,P@78
%ZF]"tJMEfmldGmB:e8q:V3K@*;m$sV>u6p;LsR4H<=m,YM?%9,`cKE7A0c;EVI^u@!Er%F5[0"`i`$G=EKWe>_XGqekDph5Lb4o9
%RYpZ*+s?N!,]_]uZ!1b+,HHV$4ppiBTRjF#H)7!\^hrke4&\.J,:(+tkemt$<em.G4tmK]WeD6o4T70PJQ'QneU"5jQWV."R9X:N
%&1!4Y+pp=DTaeZ5c->:/)Q1P\N?\Od60*H-0iG*`G,gHE*';r./I6ILa4PXcpYVt)9'-g!__Fiq_<t=;0t\1Y*<:9aU-o#$NhE@4
%E/6i"io2^0[T,SfR/o1ERODYhOLQ_q^Y)!,-Qn!NqGta/@nt3.BqoW[0]\-S`IQ2(aOkHni(>,P8ibEE300Seg^Z_:\8Hhe+u#BV
%OVNW)Wn6T*jTRaCc:/l;7Hu7W*`q803,)tqb<QCW/MtUpN4687k9QI8mc@TNgR8!g$Nptk,cOb>93.QpB<l::=AQu.hV3-T.^$K>
%&TU;B*GT!<4HiB:0IDmNZWEtddn&$JfX%jqRqWi&5UIC0D@W[c%h>DMNb1lf@:(0t+03gn`M]"W4N_9CI>Xq78gh'9#sN;^UoXup
%ZV;go1Sl@TE]<<9i,XXT%RO\3b^+*<Qtk35;dlnkAF'<RQ$J^f`98])DW0l+7/=ns!K0"7N013qMma"U%()+APKOD99i#bl?5B3\
%eabfJnt*8s_3KP[i`M5gM1:LJ0A0O-aBWH>GZ0jtU:c'*"n:G@`Q'A-E7o_A=-)J&Nd97?jXpjp-"GFQW"%\0iq=%YlEIe6?-#mM
%Fd_sK(_21GW9!/HE2hGOPYSUhBebbBKU.,t,#e&7I*mjS?Gf3BZ[tmk&HK$-NE#(,aU;T`#`tgAJH[NLWftkPe3Qo&%P<DO6cG-t
%rAihKJ9FJ"^bkKe-5sClUg1pgoc7>j?BS[b##q-^$cU"f0J$Xm1EQcl700cffU4K$-WaI/^cE/[YW5kHd)(@S4A*CZBV@T-Sn$\`
%pE2Up?8=XQ@0I\qOU0]75-Yp$+Y--5"(W3Mr$9MqVdhS?$%Y<gD#,7srTP.U$0%3i<nrJk!.^M@>ir:aA=<qX/B9WtB]9HK#MPd(
%PIW"J!_koiYMa^SJN&W!-Jm9FrW\&a;VeS\2:0RQK`3o6U;lQ4d2nV#Q<-d1Kq"5nK:1L!'FISo#r%`,&o*CI!(Pm/BP#%(YXPkr
%9(\4:^(h\KDB)Ro.&kZ$/f<>0OBjG19TUOI>C;mh#rmTTLhlq$"=l:WFeWF:G\.a7#)3b0,If,sO;Os6RoR*h";^AQ<WMV+bfWd'
%9C[:jC.G%Q$f,7Iqp;6rVuh/2W89i5$$qE.T+4S[;R&;SnqGs&O?ad+r<o)<;pK0cpop2"asWk8+[,u28bT/89<ag9N,5^lU((i-
%l/SXscV^2q8WkMBVuX9"TBjZ*kc?Kh!e_KE>)>CmN1Y2^SK:=Fn:"n?%D`F:DT[^Z9Bdqt%KL-d._U.Z10],+VVaqSfLXSnJ;T`l
%=OIM-@X0X7_c)Rn:[Ou\`,X(g"\_Lj0g<,&kh8PD1a?4S,TICpA(;G@@GiaK,e<.cItEOq1-s"QBB51,&l6nAnl`U@99k"0?lnUG
%S]JCcEF`rrXp=6i!b3s<[I^>?*"U<l9*okk0#Pn3l6Og_&'O>l[n&O@@HhDS(n/R'(mo34,_LtA3\[b-E&*2bF]FB>IPK4nKg6Id
%WoOeLJZ<IHiXNfm$[;Nnb9=JWTQu^titaD>K4ZM2ZeiT?!t`,l1@VI=n^ta$X\e*o,t3N-]&k&Sq*r)i9F,)h=N40Z#a:2_@S[70
%R?iaNSF4K:l9t%U5cP7\/s!8'H\SIpNK"Ar=hpg9\&Kdc?Nm7J17'9oSfV"V"3;SV?E&4/U6mI!.i_iTE@3-E:E^?n-,VYH+L:\F
%5<*V7C*dj-%Pq6h3.U6l,=`Bf0%2__2gs8=0q^"Z%9XGOTPP>(AeHSf?9d%sl^2JhfE;d,@YI4*aDgJ(i#A3r#_P%2$(s;p+f7u"
%%u1q+UGsHN`J=SUPU')JnlDn\>d.]C6u'*3!6:L&1MW:*oZrEC8P66hER>oMR:(`MaiB`+*R/(*E[9lL5WOu5WMRc=$j@V/$n0VW
%`P=$1VQ`K$=:V9%?l`hfU)k*^?j1Bb/iKrM"A2lAqisH^T\`Kp8Xba_64($_jcN>G[8$dW<e@D2^p7r"1VZ1o!8'7b>I'S(*T(nV
%!`OogjGu&sJ.@\=;:9qp7W8cYq)lBT,("#iAt[=6[D5_;"i6&<%Mkf0[j,%Pa3k`R(,J8X^<V2k4!Wj^5UD8ITg`u20mDk9UcPWo
%O>LdK(h5Lf3D<'%OHd+=17U)8.'(6:BKr5m%J0icE@kc$j0!EqQ&:iW&]eZpN0*?Iei+8_LV.6'@q8sYJ!L81!HB+FWuu!Pe,Xj[
%ik\;Rd7=i0-j9fc[;A93+=+7OEaMDM%uqESB^A7.]uNH:?#A8E!p?hi?Ko$#lrhdIB+af`6(CN_JB4VXXQ&DD$B?\s&9q6AggM]@
%:-GsTi?)*&2nW*dhF26PTlu&(.n-R'BYi7CJ_Ru%G:%Te)3^^1^atG_e(U;^`XjUbG[:/%8H(KE*"pBhmHHjD$&0!kb#1nuL(u8'
%ipn>MM=-K<,o>3s5rBV\QLm7j&"j2YA*&(*d=SG*=Hd<N3&:U\"%TMgG"`>SS3\.nRMrj7VXM8uh_3+#UFXihl>]='ngs$N6<fJp
%"4HJN'ZK/L[E_I`"f2nhGYp3L3@AW@,E[-RcrhI65pk*1JP'BB,)i8&_c6rk6l^ZG]L&]cKeS<SGa=X<$-O?a(8PW=;ENYD3=TE;
%5l"ueY"7*QOF'69].NJN8r>o+`$k]ts.%O%9P>3)'?7(=r&qQNj?B9;-qRd)gk&NL'V4b\^_"VAO+f9a-5IW?rfH9)<CjNV!\L/6
%%F/]a%blGs7Dp\JTN'ph@8JMuU,%W"@S^cLQ1eV$3&Eqk,Z-tpa7;L=BcY;l3$;N)Eld%Aj=Ti]l`tCH+"L1ugK($aVt?h6l`C*Q
%KW(1_8/0QG8kV7M+Ku^`(O-Z`T:V&tpq9PS^mbsu;b_jCO_2c\;=l:D;`Z)F(FD_:UEn5kApb[P,heAZ;(KRH!7^FiQnncuPSU<!
%S\5^-_(`rW)e8qlEZj0kl=6%%MqPDLaBZ'=dT31U4Vb?#=VQ-P!=MM"*:Hkq=#q@ebt0>"=<:sT:.>,\+D#-B7Ens.d5#0i7X0fl
%LtqtuX*j]B'^n9eX[6#bHnSC:+q.,d@;9RCZ)Wj/-/;[kn8KeR)Q#6NFuFFtTXbpoPe;o0+JT6`GHR3O-Hb8P(H,6$q*uoN#cbZW
%a`a\<ps_iN3_sE)jU!'#7R`@Ds-eg3ipn91W/4](AhR[k(aD'cN+C(nf@8;r<-$8n>ARGpbjVPmY%St)&a=d.e\&2`Oi^F4m#FJp
%/75jPc!i=-D^O7S=^bRG7dC^#%[0bU>-;C:<YAgJ$t'm&6ip\nCLdcDe#b2.MkXl]#Ek%NPYHk4Kf]9rGh7qd;HW?PGA!FbBo99i
%ZU0L7%=*X*8@\pM8Dc32&%Sp'7Ua1,P`GL/,_As[4nBMPA2IVN-lL2^(*^/@\9Of3QPK=]JJ85+F\[2^7&8JD.,%&s/,qs_+<[Xj
%C>9M#HlC26\LdXp69kMaPD-B7l1gR'04S#j@8+T59B<;Wd1i[eeIjI(MA0?i!AocK,`#h0="K/iOopp+4'5?O`gm7d5XTDlqZrr@
%/W4Y<3"^8ZoYS^u!L-XLB+[uf94&5:CeKF#0kR53O=:^\+C-(*\6U>H?o')WI2;C$h?,%7Us1d1hA)t.>"74B.!%`E*5it1j!GRG
%&.QZ4q.`Dj$3A:N@"U9;ps>h!MaAa=bUf<H/J(*.XClRs7G>.?]rEKs(p$J5.-Grj.Iu6u`Oi(6@;IhG)2%uG>nAJl+\r=^.]Nn8
%6LA<;@M,^nAcT5[?]"R#=)4&8=[s*G]D6GmP2MutW&eZDUlQ<^:6Ti?Y^'c5J7FM%*nVaB`n!f=9^=TK@lQfsTZ/5bN0.RSMTnU[
%^(LM`N%q_Xl\$7XQc50j<@kZ]4#U5;^o3$'(o4r)+2tGp*B.OR(kTCfQEn>]ODG1CS%5/4ZGk@CCSXX!3PeVt[(+IcU":[O#B%8A
%,t"8ODCkRi.(]^L`tIr.7cULU0)IA!Y!GFgEia4jG,&FG/;!Dldhe6q:Q86bOu+p2E&^)kSPas`85VEO1cAitF'TgtW$<#D8XK^l
%OPIXQYCmc<-[6Dh;nRZu8UY-KO5*c[U-o1QFrM8Fb#25X)%YZ5Je0*hWBi&j3\%`KR5p$URF/NX6s2`+X[K=@/0'hu$hpC>?BC^#
%E(en'4pGCfo!L5OY$#Y;<L"!ZOu7rkefZ,Bm,r[;l%#11`;+,0\jPn;9_EUSJAQpJ`"UG,3b,7!pM=GX!krp45\C9.Hd[4M;kA<3
%2],L+WD+qs8rWJl!CUfg3rkq]HD=g;s3]%u#Q7RObbe(cJfdY0Kf$/b9ln8NAqCi]+XKZ=[4C2Te'@%QK4^X;[Olh\Gf!Ru&)52C
%Kct)[]W\XEcQo3>:@ibQFdY</9ZGL-)Bn^6=CO)9d7^PQ6\<8`BM#.:(&g=Y5ro;aJJ9g"iD_&f.NIJD(G'Q9+;t=-n=R+H-/g6T
%h44S(+UJY03g@!Rd6eX@.>DWlp.8sSS`iIL]>Kb(QI@PA5"-q9F5KJnfj<rtf`JXj3ehIL%Q1a;KPjeJ=sZ7\Cg!$!(#`m?QS;$B
%g8V#*lf@rl`Sl@JIHC,`8Kf5'au<+kRrY,*O2*K\5m%JX%LOXg-G&n;^H+&nnhj;46&%"<KimSb0nS1<&Xpu*h*cNt:J,*'OJQ6h
%O4ckQ;Im$i/fQ\fg`!7'lk7fk+a.>.(-///67H6nZRT%k-Rg86_m4;K/lJ8R$TAhaAtilLW>uV#8F'l!01'36bbdR]D\G[@["/D9
%#04At@34jPoEb#KJV3^(%V+`-17DW%"V?7W/KcE,Yon4DN72f]c>Aq7^cL]#+?pG9q\\BeB)2UopL'V.&Y>So%+1^`VHIBaJ\V\Q
%a1uKu-]_d*72(Q$+s"um"VTPZ??E:,*@%D-o0qPdT5IM;*kjt8#W;<TfP@#.oq-M-#`Bq<JQlHRK9d*hm_,9cNiCrFr'U?>fYt'L
%:iaHTW>9^b7\*$]>Tn*);mek'*I4b!p?)",^ki?o=Cq8^-fpQsagUIG6RjF?OMcdH-q04snCH$pA$$UjAgC-37hJU2\@>d$nJ&,F
%.E<q(/0KQf$BU3Y#pU,F?<TuA,rJ>:0=6V\OHk`4>DK_F;_cQ?,e\B&qUHW?HQgIr(N>OJ"ZKLh1ks^<g=ik;<LSV_=XXujW^MY;
%PU(Z)2l9sdP(o*'O*d%9OPggQLlfI''#J(2KWYM.0m$*n0uRO9'VG33qB8P&1J5@fQ_7-s.7QoG[*Z9mQj&U<SZN`DUf:d4'3Cn4
%+Y/bi9O90bZ<?fsRerhA*K:f-70<7K.sFudJm;i3'IoeZ#>$5@:8maCP&Pe1Vd+Q#>#Q[IZ&N06%pL=<)4OSLKjK&OFKe`f'M*>&
%Zl*J==VZglBF5b9;N@OKQo&3!O@fn'S)>lM*s%RZQj=&Q4bK%GR/XWK3g0<%XKX)C0KM6dAM(`?%cKEV5&)Q6_.e`jdQiViOGop#
%WY.dO@G$9"+HL43\`0AJ'!9CGM^na"RZGODcIRpJP4CAQ>HI:D)ahXN>>QZ>5t["RBp\t>dT&LUj:R=i)ht0`)MY`pH'B%2qAe>p
%]J4$o).@q,"+^jbN6:K$_5Zesdc78IA$&0;^:dMb23qaWUmrCgTuE"U_5+W.!X*,Ln_mUI(H's'C$FLMTg_][r!&WR*(VY,N)s<o
%hX&VK7V'JSAr[NH&"aaVb=[^=N`<"rN`##UoMmbl`3(?OO&RX,FJ8qH/G&8.;pd,*_c*h`$jkfPC@o?)S=apM=X'bAU^NW0H*LZk
%@'i<7>Q?VE=T%-sfg6'lBFj3(-+lUdShu):2s?e&)L::Oo%Yp/i3ufIP<^-]ToEU51M7M(Upu2T@Gpj4O#tj>10,8pH5)(n>?[3>
%G5'p66]:#I8'Or^;_bGLUuO9!`Y?_0rF1b;$r+t8OMshR[#@B#=K*D$<5N5K\_gr/1X4[OfG77:P-:VA"^/:!a[@^\OTqt(o"D!,
%m_t?PlC:g^(:u'K9T4$EA]Fs9#lt\jP0+:]"m"9t65i=CUM,*J#6`k3^o10T(+gjpWVV`,GUBjj^!E@ZcGG]M()@:k'XE3rI\@qd
%iHFA>3"h)l6)&?WE6+64'$qD^dZN-!-$[WC\$0s>1cOaGVNZG,;rA>iY]I\)(0K1>-r4?H7T,Y17t@rnAgqVj5W;nNoErR&+t?HZ
%O_2TIIP0g9$ns3U@"Sn`k^`^Ehd'pgNRWB=ZB:#MYfji]ftoK^Up>@)C+mpRKi+"YT>SX`kR('*hA),>P(YhUOUh]K(c)hFUu;KO
%$8BPj1:F,5LTO3']qj<hb8lN7.</`7dinLO#]/P[;O.E!,JiM<%PUN8-@+<2(_>(O.bh%`=2[0hhStC@-]_.1Y6m9;I<?_R"+!gf
%-nJrJMFTmbU1RNBED.HGKl"_?lD[=a!p%.eP?q?.]VsCLEB%@q$p"uL66C!f,'%Nms(%_D'b"DBU`5,D1,AG=>W%nDnG\<!d9#]r
%M*]*3l,%,<I2$r9JLs,.^_<K9T5l.J_0Q\'UKS_,9)r-L-j?89kHrVj0QsPYc=74lUsUB%9Kgq+5,#V)-oJYniK8ft?<!Rnf*S4K
%,=`B/+?.g*3X.$cKUB;">=g,7iY80qY(N@_dL.p1XNbLbNaP7&N2&`8BE_6POk:Q&6>A%^aXXM(Xs9t%8[4%'5s_Nm&:bAo#NR-W
%q"1WhV=cMcM?MNRAVER5/-lN81$B#S1+1)S3lu.aec].][+*f2O_[4,%0[\M,f9kGJ=1u#75'srRsQW^%H(d#g]e0up.7k=FI;g>
%L%WcL]Wb@lRR0pBVJ3n\ko%kk)5\&a1H4kI7N.BYCFXf_RBp`AYr7d@X':uk<t=^Ob1.@!5]R07#hW$9OM]^*6nO%Wb(EY;"i2%`
%DZGSq$AX0e]U/,[BOZQ2Ts)."+XU&_[n(+"J4@Ik62890KN!1!b,UjJ(o7A#p)Mma7i>"@E45sAT_d`D8=GP[(3+CbIQCJ7#1+R,
%[=H1^9uJCo58*buT-YfH[uoZ-?6WIp$?-?WYti'-4.[Cp(o0ckXSib@$0o%>9$%uONoF4?%$Z5fk)t>cR!1*:F=Ir9l/+2[j[[i-
%R$8:E^c'4e3!j(_>q=t;@/\g["E)+AhRPC;BTSEodU<5QX2h?J5unV2.FQ!]gX^s#)=j*ZR6"JsaTR^E`!A7oQ7/i<UA)bc\[3]W
%5?%>3CMXdJ`>fhE%$sI9HsE;p:W6D0>X>t,=r\7nl>s&Al20quD(WtQN8PfcL9+5PCT#_%ENnHD<a`lRdbIEQ_@.IDA<,[,)AXSU
%manO,Aeb24aWu)F3#*hV1E'B^)ENFo43VMD,S6mCJtP/dl!ZN9WJQDS7]@/aU+h38,!BrnZ=JMHE7I3^P@GT_8rSXr(I-LR.6dou
%.--o>Y;0+!R_B_"_O[QX[+llAgilNE$)($&^!I<.('Ec,18F7R3?(<uLo[@3'Ie2sEcK4RcU<t-`H.sO2HcLl@c<_s@$HcmPcsSb
%@<!S#JrF@.A:<OeWi'lu+\S+T(mB]X';^C(l-01/#LZhSNZTa7V%fejDPsoX&g/W"KMU&+)\jj6+=PYU8a[br/ffmG;qZZ'><M?O
%.$%'%;dd;,X1/M;OmoidP'SmZ_$E7g\eKb/,]gt3?TJ@H6n_NZ+`iM)a'[$jl@G$`YD<DSJ&10_A]JeC9-ss'pf?,t=i"r0,&67o
%9:,`O]%c:I_U:0$c/q_PTG`ug,()\b1^`^q<a][B!pKk59mKS+0F7P1g'bbT<2ks(Qb-&E'!sM#.7Ui]A=\\I%-0+nB9YbgHihgM
%0EhX5bKMGgiC(s)PHI=:/;rp8Uq7PA]k+>Y:^HFH+C.;o.5"EK%[s?]8!<a,;0[f0NhDS,0WSAW-Pu)a_I'D/E/:5GGWIR]=EE1E
%"pqJhSsAu3pjtGDe5ZU=F5ojP*Xs[.E+2t6+sa^ncSu1E1IKth_@8l)Nmo4QZR:anY`#"up>H:NlX366[`C@AE&\3Q-=W2@#)[9g
%_XX_n*pAc>1c(S\^hjm?IV6589^uT]WtWOLXaA%P"iBo+FUXJpZ\U@lR1Dr&PSO7&%Gh.`;$T>@X*b\S^T<D-3WTZlhU>ShR:c$O
%Ze@WQRh9dq?3sh$#0.Ah!FlWpZ@u25`cmJ),hn7?6hJJT@79Y0.a5n1;9rp`PnZU(PW]TnL(5r3WO:kf\hQ.dBI3da$-N\A6\k6&
%/39CSI1pn8TW0o\OY(dkWZ\>6.2h'3B]G>-O8A/ZHn;jF>?%J>@1eA`IE!OeTRJ1-*pRPf3F^q6^n-<s%B`2e4&"h!W1.:-h.r=,
%.gt4+>0:Lj?mO+4&K4U1.;5s\YjN7JkD*Yi$F+!&1.S@*b'He%D33QgW]VK+)%6oU\:m6/61lsF7H^_1;HLUK,&g:lge0"VDPDGd
%=.[^#<&8&[LOo2Y<;-MH!/&BW%f6oWYHgJ3<00gpl4>)b^k5<7k,Atc'IYO=p8P&<P'GrTL5oa^S>oMlA4_UTR@BIPS^B'Nb!gp\
%4rJZtV55(:l]o(]humlD@e3Kj@:Hl32+_Q1dSYIKJgnsr5Zq'IV7k=r;B^PY"o-6Ah*C3@&_D#Z2]c.!=")]5`FI#e',<k/>,#,\
%AZE7@?\`80SkW6/B-Hp`'&V!XW.q2^9N=F'@pG(hFooDZ9gq)^.6=H%W#RqT(;b4WIU>k[WYks$8Fju7hAXps1:?>'^`^)d6+(Zc
%,F]9[oWe(8;_5:!O!pYlUlofDVMIiP76J@6"Zi@hR4GV/.R3U\FA!*WJVdSrVi&1:EZc8W<oe"7Ce2VkR>5<t"lY[h#q%Pa=HZE-
%SS>Z9dT4FkUo.gYYWF1m90o#-?J$i#PboGu1'WlE2gE03KV>\&fs>09_cOKb17)dr9&DKpL^L&U/.2P?5&$g6-P<PSlT=dm94\Un
%3<TWPZ[m$;H4aPI\UY6)PBR/j.&[^F_-2*%.S.-<KheE)]1K<taaTpr_RJI8GH-fl)sbJ[%5gmGjs5dCW!jc[NR&!'[`BQkkX&r&
%km;$s0jpLcARA3]a,3S/1>TGgSG&I.KLVme85'`Y3,1mW?rKHNJ[Ta0KRg^)PdFkP)N9WJXb]Za8]pc6IO&5?O]pAX*3jFkWa@,Y
%XCRJf1)C!a#fqX21d0$i9JJ=&pK;M:)'m!_B0n8oOrEch`D?8O5e+UG417rmg55/8c]f1i_XQ9'7]9"K?@gffQC/pN!H!p9kW2[j
%p6)s<9E?hDQH@,,GBReb)%D\&q;RW&TT-<d63i]f#A%cfCI?MtFUBhWi$HBDh$mF.15AgU5&Vm*7FnAu':pu]PIHD$P!P]=N`!)d
%Q9!Ds5fj"k";&0'7keqI@E)2UH?LtRh?Yd+iJ`;nDB"-gF12k$'icSs0OaV$_@On^W-ItH[VeqqmQ6h<6o%ta43<=S5LCfTd-qIG
%;oca3FbLrR!IKJ=#<ZqeNYNV9P@A8^<FOoI:hS^7.B(IM-s4PYb_s):jA@H'ob8%K%1[[HdQFOhaOX:(ekU"ab'QLF]MjP4nui*(
%V.qRAFrU\%Noh3.i=b*^(ii4mWP=Lj93``%bk+,Z'OVn]-VV,/1Gid0,<dFhGUL['d!7ru-gugZ=)uKS-AQ'JYJ>jh#&h6@qsW)0
%>FW*n\C:O[!OQC$j=S1[:t,e&-m/`EP.4sU0TsNMMV4h.'/H^Z"t>DS`+elu\SY^[)8TY%qt;3`'Lb5HaPo[M0t%?!nrSKMK-WRC
%F9+?NfNb3J!P:#DhU&?@fg$c-bB-c=8J)gFl66oC<\"G2&n\G66SlC3:1]#1X)O&UNsV3^nlTA$G^Q]&1IKOEKL9++H0eS25pV09
%876%;mcF_9q;K+`P5+*+o#[t$8Sf#CFMbFBn1W7](C@So][DB?#h>+#(HCf#?o=Wnqe%8_FX2^C8JinW.ZtV40iAdlNn=cLPh]*T
%TEAO.6k6FQkdXm>Qgnat=-'`7=iGTm%,D*;)g@Z-$tJIh5_d6XoV\8&GY+tgHS(_hF]q2m=ZYjP[/jBJ7Ee;QGF3A$q4bQ$]k1ja
%K27HN9`JWQ/N:e-K`Y:%h^1c3_FR2BZ7r0mh(;ZGZNVs7>>SIQSZ)$6+jq1,9J_lRK8/t7(niIq#VEnH"9rg"+BpZl=IIoL.8PU[
%#2MU$TnueTEfY#GfqD0(1&'ZiYRm5mEmSX<qm=QrA*."f.NHmZZuB`"h0PnL@i\LuB<nJMP[8PNX]`_W,^fnP:)i7n#DuJ!9[K[N
%>AV908?sP<#Efdr(?gVQ([./ib!X8l[pr-mK?GcfR6jWWATuli?_%sFp*r*g-09=%<$cm#a&HrdZ!\kDdPI1*"GW-8kX!YO1f2cF
%84@T3==e#XQ&hArW;W<A/B3f4=s]RSHZVTNUb-*aJp(1ro(Gu-6NTfR-$\(lFh3B"XrU&WW;_C7@1K'E=_JF0@<81sB^(5L[Z0D*
%1("1R2gVeqR;270'fQbRVV"Nb")q^XVsO`N'st9n+/q9%0#R9:>=;RHXO[Pba%U[8>QH]?A+LfM&4s^PX?m=EBL2kC(0A'6[?!B%
%qiG9S\aM(tJ42_^%ggomTTCI6)pR^T3nGX)!dQPTU6,kF/kU:$XhkDd]I:FtLUl=%k=Wnk"Gbc8MS?n?D2CK-U.gh(Ud\f#Nhk#V
%Fr"2':&aCS[_qqHiI1,?s-9p\*#`K&gL@#Y9G.>8$ZZ7ec#NooUn(s.0a[QL2RjF&%44tm@NpRr6nN^:Q:6<o[C\nN]\ojNaCj&1
%("#TbN&&*Lk`)DFKN(Okd^P9k]HAG89I/J+8g/=J]i<^bosRa?+\Y-eW]2E`6Ok7RHnnP7mOFL5L1Lmj(<Kd"q@,kunaot<^-J#-
%)8f&\bFB)3S2J?BMJs_POI5MODT]c-&Vp`&<2n8$X\or.[Jl_-Ml'S'YZ?OC<RhQ'1b)bC8c"UO'^>bajW9pD!9tNM0?QS>SbGGd
%*4StqQ1(a_7Pdb[heS6%$]`%nK]4MW/PTHM$&oUEp(Yr\>0hfqQ4U$*AbY2on4K"J!=dU,^EQiaYJj>>dhZQ[TnNc_n'"=qTL%-q
%+2s%Ud)8;O/7gDb@Y,Zj_hN*'=YM_o4E<'jKo2+21VtQ:\LO[D(42,C"'`laODIlFb^nf?X<]0=&/%4.d!;:=1,T;m14pq^MSLc@
%l_K5p-F]nH"o>_p2PS&Y8TJ:pcqqM94pqm1e*b[p'JS(n^Lu)2X=Q*>m]iagfgu/S*GerR-CTdQn@N/)b6/U'#@^0",dP(2lm-@&
%V2D9-W=_t-,<<AX3u(]@d.sd5"X9!Y0<Je\n@b57K2*%BQ`fln1Ma1N$DTG>FMgotnF@>kA>@ct+-I@e0W_?=MQK7Y\iqr-E#]I`
%o"E[C_)%%)C.Y+kR[tmIJQRY_>^t[T"K,i(7Da:BYbr=E&n$CB3']/Pp9?Xk,!Z5r+0LrIAg1lF\2&UoIVJ;ld_J*l`E3!qk*oS"
%1eF_piD(&;F3Lts_Ul[./1`].cpC1rPn_Qd.c,n>\<@&!d>);mB.&>#]+I1>"58[@D?hpg'lQ\u)\49)5V\9=/#J.YSJ,rl2W$&j
%`!;=T+]K0[/YNi%L)E]KQTak:1lhul8X*;WFu8oCW['(U-8'qHVR7=Qc8?+B#X?!)Ga6eCK(]<K#UJVS7YG0[nJ:)g[ZuWR"A9TE
%Q`1,5%E,UZaZG6L&Y_lAn21OoF9WcsK5b.q5+/t!337*t-Gc?,(#EEKG60uukXC6T=>/(\ACZq]Bg39\TqWgZ37:JO)U:4QB\GeO
%ftbX=IDe@Njm-X-OHjV26tW>lCY)/7%IF6pOM7S`1SL5(2%b9`P%W:'BaCdB6=.6#L-.Z&c>r#g5fX0n%qnr5L:r6Zd3;`GTFD_P
%D_YC_-Z53NOkJiEmDN7FYU>7BD4h0CI9l9P]4Wqm<m)ZeUuPCF<a/@A&UU.k9%^jM)Uh>6dPjMM)HHXuYc]\.2t2=TeT0\C6?8m:
%ZJmi2'-i<;*F-k6@$M6?b2=2Cpb#WF6+Zhlns-^X`WJ$:h_t7\no]oSBuZucU)<Ln6;TgnfD"1)2doF)^Y0]RT\^'ie(lMD&07PM
%R7QBnP-,GPU1spP0:5$KO49"EXpO/4\C!/bZ@)AA>$XiDcQI^l)L#\64=&.534>jI+e=@j8eoC!MeZ7&A^JH7P+0';8D[oiHFl%K
%]LXI'%]p"6+JYV:j&qPMfSM4%b<i2^=`s8G5nL5(;o01jd1&Ee31Fe\'>h(tgru2s?@.ndK?)M6$^aHlJN,GO_MJU@?<ugr<!3^d
%=p1_#)L1nO;a3h2_1eo'#+#aIOe,I:@g+u2]c;].WW6AY`=TqTlJG%4/Saj#jS6[uV5iEm:C,P?M>/+8')+Ifq^sWG2\+8[-u#Ss
%g0"/G.`"Ic^7uH&1tAVo*?bZ+eo^?dQ`8gT_g/$b!@`1l]d%Hi?dlY<4ip5f;nY!VMM[]r<::6I5ZHI=WcnZmYb;?-W88C+%t!3;
%WSV26beHmE%b?b_f+ZE@CaF;%8`"#/`JdO]%b2Vb*ZFA#AW.pU'<Bn/WL9uS;7/LPO\dSf't_A<K$Jhq]#+_#6'&-?h,.3H00J`\
%Z%NS`X/^7H&OiA.:$<)9RUUm_S\#qCKSV?`R6+oI^A1mnc6*=*;J\+4#2s?e7lkj*40BXq7->$rN$sX`3d:KA=J;50h5FndF!o3j
%%6A]\33%(%rAnGo,]lh9mL0prT`["h8DsZ0cDktFZqR:`UmVY\U34Ll@GBGAmL2X<\[*>mh4[gOLo]1!JM68h+2mTo,3]UOZ+I;H
%8>Mo8h&/!';ncutG)'[TY:=^.^j&*^l`,,@7-Qn:WSJGqe9"FP%MVPe)Js55TM@g#crB?ACepWhDH6$5*)Ro>=k2pK<OA^A2cdNm
%a-9-bWRr41p]4C\%OX"BH`D2nFsaMl2R,=GAglj?Rb40>IBUbFfU\^F5tHX\S\^?+;\a^3G%[``Ba1\$,P2pmd(2RPMr:L:GGr>)
%M1!jb,Gc3a$--4nL:W!k0idP"e8CMTX'0_K&:r3J<9k#K<huEIWB3J,@4H/pfH&tRjL1\:h1>&i5(ngLOaf!;3/HCQ2\*#O'tZ8d
%SHlWG'tZ8XGu3./,'IUd>\`:AG%X@elhWp6%P9lI8_mP75NORih(d]$rL2.TC5\V.EG.g(T.0M/l&I<NeF8nTh3!YJ.MJh(7p8=c
%8ug=1Zm\<u8DQjYB*YEJiEB7H:2UtcVGJdFZ'D9$9&0qp:ke;t9h,YJ6]\Td0MJ4dN(*FRV*"B)jj^?ZSRJ1DI[VbBiOc=YCEdkU
%#ptVn.WgHo(T@gETfYnZ/GMLETf_<X$`[Kdm_H[_Z(rjkB8JlB58Ca3+dD5t*JEjr_W\d>?A7g#7^?A;\g*31#j826*QZt<S?,&$
%`qdc94]]-McDeZc<OtPUn<@"N4+f""MO[D*m_H^ddKW_9Nq?nYc'g':JW)l3^8o\Q[,Aa"F>o^N;7Zi5KLchYV*"1R8MI4qh8.GF
%:[^^9%TZ_CaK*`0N1P/AAMkml@HgZ&DH48(A.ME5TQFg;$6&K(d[_Q8dH*[Y%a0[m.h>W[\jJ!C`_G]Xa,-OP.c"Nq;?<G1?31nQ
%c4;s[L'6Em$p&Tefb#j?#mqOW0h!n^h!mHq]pP;s,&=Ii9m#f2q+40)FRHA*b@$t+g_o2>'2knmGOTjEh:m&>%(pMVV[bb3=VGqY
%arU6Z"A9VjggN"a9WG+4LHRoRS,cHuV-Xg5-OP&A>EoDD4",T?X%E!Oi6K;PfAu<Yg0>WImGJ@s1MGO^;"a(mdWS0H@sW,p[R7;M
%7A$Ta*W/<k5#6:f&1_0TGa5ZmSX7j`WN7,/R:tJgmEf;j1gXb\9NS.A7+MjmNn^N_CM+2?&Ckoc[6oSFQqq8[n3IohXK$G_3@MsG
%7IB<aW$9N[C'U>!,$J!r0%?88't)fK_;>HS]Q<0S[Q2RES8-co+_G&%;m:n0.<<Qu9+mMXM+/J^OAOi8QCKcC)-4:.3AIYXdbtD0
%YPU!^$$ce%QaIUkiF)bSSk:Ii5Ipq9h!b^kDu'AoFBcrN,V>2G",!0cg%>auLoP*#WC3Jg1\?$Ug;kJ(M4Pa0RRV%8QLUh[#!"aX
%q8._Wjm:o=p0=PrS/nWM7&[*-fthA3NjW#"3BL,&PIa04m*ME<,@`Sme#T!Je$ENnZl.B[9GPmFWnH?n.:(Krm$O>Gf*8"(fnoC3
%'0SG+l=6icSa\D8&tUdj@aArPqW`\Y7[=Ha3BP,/P:]YnljTY8Bhcjt0_XSfTOp\1S,!O-2*2dKLV0V>@HSc%5ul1T:uoF22)RI?
%GMG2:2*42!&a.`pljRqLiZMi'Y6+,t'=.e+Xq=+6Z'ZQBGn"6a.V<<aX:Y7pbg%>n-9JshAqstq_6%0iBVCT/'=1%6A):-=41H#F
%=F'*`,h9?+@WmL-7la?q*I(Kb7&Z!r)+Mr2>naPsmj@jJ<Qkq)7V'\Ab`7Xigg3aoljS!k;Pb:#QV_WMfVt/W5SAhAS!G(3--EE[
%Q6!UFeeCitljQIcq_X,^)/p*'ANV:1/R#fAFbbWTe#DD3e$;?!OPj(i4$to.<n`M?m!)Ion5Lu$qE/;JW`jS#bd:tVapr>>R4M@\
%:,m"i_bHrncn$eoQ*MXt)2;F\Z=?P*]8Ansc8>Lh.V4C;5!cP&AOe^F/CR_D%XtWi`)Xqib8<Ud<QWN_'L%4.,s*r1'*]UA@k#/M
%kh$d$Y1b`N4%%`ecjqmTG^P^e1s">.4Zedd)p?m=R>/8pfWg/$k>fN^/WbgZb1OP.c:f=[13NkgAqoD8`X^6[hGn^bN$Gp+"s#c-
%%H=rNCbg0gE=#@2@gNeAS\8R<WK&![n`qrR#!%NsOsZWuMEA=3KI12aLLB*@<5oCe"-K(P13UYf-Ua0'1Sj-6oLhou%N?@Lm]Ag!
%R*m103>&PaZcF=k.6CW6JNp0!*=RegBhkJjcn&)h<QYe'Z5KcBFsLO/S7SF+LSpFH'%O;*MZo$D5LHdsf#Z;X;_:'UiLi/Dg#6,'
%YVXk96Ou^K?.H6UL#eW">':+t,OS"@>'=THj.Kp1J>!j6m'nloMQ@=TFr9K)X&'s$;X-&jGTp[R-&kJ^9ur?F)<F;fOI]hVDR=1G
%G$rl[be^GKG3E:1=.BQLR8g$QWfeAtPmk:)A-_UaU;9bS4$9oChPl_[QjX%LX($5r*almSR%;>kJ_A!.aBX74>8+>q\)FsWVIF`<
%8uN*O`9[KqM'uLAZ_PMCWUV<EG-&Gd#$;VH__#Ck:W2UUs3^MC@Wp7o#[0=11,n'Tm`%Z=%dk+!mj;WO+GU"q:!AXjpf&-'LtSJJ
%T,[5GAd9G.#0:+O0g!R!=UfH^@WoPX#YS5N3u",^US<Uu;*,sf>B(j!LLpReX.#S&Kpj?2,(lKb1b",92*8CcT)2DcZSN#@ZV-Oh
%dZBP$IbR98:>dd'(TNoEAK,<b-Ydh#^Qm`kWn@sp,Q^rqlps..1a04\@K9aL!2upNTnS^j:!HF*jU(jEea+h[,1$@jAk+T]-K@eL
%m)Y/oZqaR?&9Jp7\#S-Oj0N]5U1QnuO4^?rc&Mtq*&eNg4-Y\LW$*uT444<:Xi2"JDaZpjTf5iT,OLT[qE`AdjBbgLXD2pS09XM>
%ea+]t5lK%ZB?0ig.^2u;4$6"Il,']s*GaGV436)`YR;i=7*^g=,lBi+c;%Q+)s$@1WjI`Hm)\'/A>:Ve8*VhVko.auTfH'F:=\]m
%E\?XK<R$PX6*bPNX4cHILomanFs8;sqa&I:a'd1e`U&](*i\[3`U%hJ*iE1baI/Ad1"!::"WG(HWb"\XD7U0Vb`:sdr!X5r4#4:n
%bH#B$KSc0,FfY/Q8/C8WeEj]kXJ0q:d+j^dc$C>ilt$"8RMhBsUP+WVeYnuYKaF,>4d!&q;b'iJ(B,Zoc$DS[g5.(Un(%X/5^^Gc
%RO2\qnlf`QBt'*0gkLTsF57hh]=8*:8D926Mf2lImA*Z8PuZ6BG1!9anhA064;:.('^[;Q7#.Tgg/35gSC"O:*L/0$P>3Fk.(5=T
%rCa%<4YfYWP'5VPpPRWY7iNCsSH:9T\+uoi^Jc5RUg88-5F;ELlu2=h5G,X9/$U7jiVP:Scb;#MFBMr8ku2HV5PhY?Ab;<:++<sR
%J'7DlrJS.'?F=Qsr8l<Z/,cm@]0ALD<hDPNW*=]EbEJ"D55E:$5'r9]7O7S+hu/F>s1A3p^Im66/&1piomd!K[sCosqsKq$+$HIh
%T9?ETl)tBdAQ7MMB+q:HY]sO0NjG?RY#TqAiPtFBjZY(1.Jp4g0OO8,ISp^^HPVjUFPp(%(=L%8?mn:E5`Z@m>^cA"2,BqWXf?`3
%-iA/dP[6'=NDm3tSML,B$B:UZ?)k>?E>MA(Z[%nkI`5T=9g;mt95U"orh3hrN2,WnQo@peS<78u*[s:o&lh,8-^C7#droh_LU-pB
%obGA%NU7)!YIX4PN?Absp$ku&/!(_toc$[GN>.NdmICT*Q%8e4XKiaN[b%J1ZaH,/PJKQsZWo:Z/7RWWZsB7(=_`c0%./9n%)IH!
%"8NmF;NjRXKh+Cka(Xl#mTk;Zm&,sG[Jhkf>os:JYC:j]Y4&0&TJQ`+/'da^EU@1Lqi)+"V:oqL@C0;^-AXT9ZqGU_5*s81`D(7(
%3.71F^A0Hk0Q30&*ek!$Q[6C&DBp!K7WjpV@17KuoJY.kD#NIlq-E1^5L.Oa:6/__fF/.lEpJqhq?=`X\#g2Ae50m81Ae1&-N2Q#
%**glJX:XJjrqjhgUrdYQ9dcG)5IoqCdf/OR8,oPXjSbI,@M,5?r8PomII.K**Z6J&D=#=u5nZ1:%b12\fXF(VeZ1_OY#:b?Y,uti
%)qW[7X0)mmNAS>W2TaAHhij+i0/FM!s8C],b@D$?5?AbQ_0XBiIQ-m%mlLDldZh,.L42e?@'l\5e&Kc`%-T^rl^pr(g;frj"oo<a
%FR>c9o@d@&J;n?Rp3,in(];>Ghq-SDGO\@$-\)'f5Q:MGj-+M_-QdcbrXIKVPOH51roNs6,Q<&TQ/D)/:KJY<lh'8>r:+KH^l.4p
%hHh8:Tt=U#qhp+"@h)idT=hZnP3md*IIakRbMeNWO3:m;+7YC6GCLIs-H:i=HuSXWO87BbLVT;J#i&UTAm8X$f,:d]lbgD&RBA>P
%imlHHO0:0K]Lb8*]3j`fitn&cB"X*EpJ<O7g#'ODm,[i?KC@(PYB9\O`r"\eLO,B[+9(Tin8eR,mFdEgN;Mei:$p=i]qk&la4^"E
%Ri*k<3VlPC?=hl-U:n6=cJG.AFa/3$o?j'l)'Aca7WP[?\%gK)#B,Y%EcLa/Di`0RkEsK$iudRJ0&L"5E;Rga*5-WE1<4dn"!@)V
%hO]ra4hCTgjK)QmWEoEf?KgbRgWSX#_s<9[k]PbO\A',XbaMXtULtL7le]G4oEMcDaeQW.p<c>?Ie.c.OAGN9q:ghFUVC+T]RG!N
%3+JXDS$UJ4D7`A!5.f+k:Z'&Rgl#Fle"bMSIslEYE-Zmej'@C,+*bL^4$S.AroWurhK6<+VkCA:qZD6:q9dC9Vor+Y.pcZ;b&-&%
%m+PLc03bst@k0Lu6grr6D?^`Ym,YT`-hm2kTT#2#0@,^:/:4p=0=U<0QG)(ZQWs0([uZcOp(?ZRk.S^An)sW/g<\#iS__uFm2u:S
%FRnh"K,<^c]^GjV0(*pol/sDf&M3i9G&M:O?[R=po<DmlcgW^1LHj:8rG_?$\s;P>mW'As$i'&(gGa&2&'jmPJ%P+AS*,3cXe.K6
%042FR]"HuPm,CcdL+.@%`uTKrJH!ocGF7D"^%h9:kPA7"@ll]oB;@i+H$f)Pi:,sb_h4.5JB[ZTm9Wc#hKlk\I<>87gZsUF/t/pV
%Gl1)S4Zkqh^\IP1?<t<CSiAXCc5V.Ogk4uA\f%\L53^gcK8Vtolh1),dFk%.[X$#J^#8h_HZjl3k47G*ml-cBUDo5kU$H;!JSdn,
%9K28p[N)>mC?N:Ms3,_Is*8Q*j6Q<sZchP'E0WZDhd_&7;t[\inXXcJB!84mJ+1(bd2as2--GaCp?6BkNbu*&1R<`eY1oV056h[E
%fU;;T!h1unbFdojpR`LG[a04(2s24:6gi;R^HOWkeoBTd7HG!ermi_N#8bFIY>1-2kKNaG?!+Pd-=8^H-?I3iT#G[c2o0](h!_Ns
%4lckHiooCB,P:%lH9:^MqW%Jpp\GRsQHsm[ci10Gd+PLROt?pa*a=egH!Ep)cd'j4p+MGdrb"^UA?"=.%!<M$Dak?<`PIJm[rZkk
%*r'+^Qq&iH+'3(-N-EpBXo=7=PCkk-j^#f0^GruQrTa=Ar5TZb`"m5X*g[b6;hVFCB'_5hYK'Tc[hu<N2-rL0#/[EDKk&k$he.=m
%SXJtCQRpdkR+sJ;PO5!tF"GhLcgD\Ha?)pi0Oo@p-q1tBRBn^#GTeJ;#RVV\$=/u0Z7J1Dpa(+'R*G29[QiSZ`[?$f[kd2V99MK.
%&K#ohlJV$qkiCKnPG?$@qtnW:*pW^<R1[-Gqtk6%o"_<NkJqLIT,\glSK=>-IW=k'2j^&T5l!<Rh;%]MVd%^O?#BMg9`B>7bOV9H
%S@<h&K719J_f'2=g!bRo\J\iA]5AE+d`+F;D<;Wn^"AY*[i$m:p=m&:7XEhVgRNlCSKoeT0uE@:Z=M^%gVLub#JXTSmS*N<o&*th
%LWGSgom(2/ajH$SRt&P(\FoOGNdn!oHoX!>m,dcZah1<JPD=LQM^*Q01HsBJ(WVl_5L91$mEc)Z%qeS:+!@gG#;MP)*pQa#NmE^q
%As<F_:&<fbkArDj7u':X98+8@kJ\DB-opS/?=S`eH9TAp4l:!Mj5n8Uko<(1_]J)+cHabu=>:(e^V(dpA7ESK#=%Ftio'1uFOh]:
%l+WbI&J28h/t"-BZ+$.m+a+(0GaasmP\lfCO!,0JQA+&dffb,6CBmd8*jP4nS@Ps^p3=\J=`R@\?j]&O>a.a`r64sL4(HKHGr=?K
%M_`1=??/o/>a-NNj\E8C1$#(Q=uWp=agi\uj`0FWbSbjkZd(26-sLBB*^_R&/0hjqp?f-IU<FK`+0p:>0':[-Z5RqSE"DarGFL^5
%<\EA%-$G?O@Wt#S]fsD&5/F#R0Dt0Thg\E#Npkj]Lq8N1f,XF'=."FX)q"N!1:,W@GHu"(Z"l/,@'OL*?!H[L:=us=?^-kq?!H*l
%D)Q0"(o3'i>HHQ7XP2[8/^E'ZeJ>4Z=KL49,4th\c5G;(j#3Y?IVUc]VZMCl1qNQ@9$9&[d07]M>,K^D2#@(D?UlJNT,de*rF;eG
%r7t@t*i@)n>D3roMt3t,bfX63*P8*?mh(_lh"CbmT=O(Ckk+dV#*XbOAK."@NmD#O]f\Kj?3>@+[pC-s>^ekp-Y.>c6bSpkR87\/
%184VY[jqFXC&)uKmn_+K<f\Xdr"5([]Qjt_S_ILaVoX)+S.Dt/loPU8b=>d)Dtq44$0uGPmN7criU=!Xhr;KG+fFjKnRpPO=`\h:
%qYL+aECR]h4$s1#BBn=@*#.0('(]m/dZ2AdT%*kOP?)&qC@ottnX/k0^d5S@!k-s[c%')LRPW]JHGIWdk8g_KbaQ1sgQ#_8R/$1=
%kV[;W_K'U8I/3("k]4s0q5t+Lf%T9P#3KG/RE)X)mU@<uNeV)DoNNgD[Nb_J(^N3iq!Sjq?/iUlr-+"t0(IheFqbNrgO2-3VCjU\
%hu?[tV;TK/o=a#C/MZ-/k.AQZQ^I4D,9Aogo:82Bp#bY\bMojW4.#>[Eqk9hSTDj*gt.u7rD7G*iqVWY[rXA=[bb[^P$EWHO%rHq
%J%>MH:6'gOF]f3!H3f8W))&CH_UadXSI'JaYRLBVcd'kn>TTE[H)ZcZB!+e][N%CrKP]5h>@=c."X[G]ZJW/%Ier*DdF$XFASj[.
%[(PbqO6</7I!gB`FSY1?d>LfH0+Q:1%EpF!fn,j0pQb`?-l+K2flleS9qDq+3;B-+e$k[ql+g$-8NlX<``\i%3_(RZf1b+:FR0+I
%1nPl=/Un73n3M+o5*p]7F7i+KF4`]Xbik0s'#iIK`.5dqf11U-iOX8=`>u;IPeQscs7Nr_"LDKmbu5\M"_XngokElF]54(E!&"`L
%Z2cNcnFD,10+,#kn=h<>nWsE(=b)hBGZfQ`"aJ^Li8s#(>[j%Oq?qi'VTaHOaLAb>fkCTR:4)c<a'0T4,4X<#Jet_LD6sG,JSa>N
%W>3YQ-JQg(1$9RcSSdBIq"!a'j(i)M?!L@kkHAe'K(<SH-K["iHtXc=>AM0cI;tcq`3t,#>ZdB%CL)<]$qtm#&MK(&2ER3Hg>]W#
%nb,$]ObJ3t@:+>Z@J\[7^AmoW_2Inl(?qB6TjHGAbOi<efk3!n/`l=l3W"uV4#N6U?bSP3`)jH.H83k_m*&dKL7%.^lW/a3C<4/u
%q]08sipr`IT(?</XF5nOJ9RDmO)m+]D-uEH6Ya7);3i6V0'prVRdc*e8*HK9liEHZGqUmb62U?6?Ga3i`_3s*R[:qB%XbM4nT/%"
%QfAmgEZFb^LO,?ha&jac(E?oiG@Y^00bta=gHNg3c^I@`A)p.1A'B4R"io9dQ$0tu[ag<i36$P[lj/W&*STVkXG!-UJ+a`QB8;OV
%-[ti^o67X/)s-GRkuWY,#=$P7cQ=8,:bUAdc(MH>iS_u.?S7B<qsDeai>adtmJ$o*FYfo?c>6us?6#37Eq8>fnXRH)3UbOcC6sFC
%])?P#O"V$I_aPr?%?C>_n]@kX2*#tQc2Jq5)Ob/)(7q3o(M;VD>'PccBV(Y_6;uA#bn(>q4J/rrT5V9Xq"!GBFH1A$@1VOM/@7_;
%#eM)TrU%Q7DbnMb^RLnSXGut_mo^HQO;m(g8*N;TTQJ17onT)6pR:[\gRdc^4g&>!=g,.na^2jtrV^m#jLYON0*-bESMVRX?jBQq
%md\0HQXu=D+s?dR[V`h^A,kea@I.PYpD^!VZC>'AF3AH=g!)+\\Rd_/j1Di>hXIh?HORNs)&;R$\=8uX<m,)m)`Db1<mn:EgX\s'
%D!.,Ogp3L*b3dt_o*@6ro3Pn\[rgSKD<YZGcL,N5rq$'c`K(f?F"HX_T6h"D\X=2og]";sS(PlB%I(_[Z1(Auhbru7?j@I!N:"Z)
%(8B,F8<E?q.F[l&jL<u\c$YSCRGfepau86.hs0*K3&rtrl-knSS\I?J4MLadhe+,#D_?N&R02@3E=Y0krdksAa]\7j%"-AbXLY^J
%!"WcdhMmt;!MggY[dCM0hMg6C2fC?U*ZQ5LH[%5_`L._F:nqm9d+R4+RN29&D`(l0FPBlk8$Ws0jjgHLob1>sIsTQF4FX4$'=NA*
%mEFiV__C:I5<D)VF*V`,%-M0!\phZC2/1fG"64!p#7(9MI/8"eaJL!R:`l1UkV7%"`>Nc!7jmEM9Yc!sliXjqT-&-s4J*G=r6p'X
%#j:\u[ChDV[mf0/i[sMM[r<]`hVI]=B%Yu:k(!B^lgqHX=['ac.9l-OeVChj:UGDiiY66j;mc<fMbeHlK7'_@Gc.+,46jb&\I\3i
%f@VDHH3(YHs/X@G0RgScp,`0m39Xd`b2Z(US+BA:9_Y/#E44)<L[-@:-L]k6dOW!.qV_-Pc[HZHQ2/gjm9`["/rhSlSK?&(RX!G<
%AQq*c5@&KWAF>grEW"`2a8&2@lds*9o4$J+`B!CkXGajj/)>24]W@+IlrSXLCZ@#kaG\^/[Q6SGj"TiFpUJhQfZ=`q\0SR+V+fTQ
%k*NcH$t^:rc@qX!+XYq2WO2VYI+@K]?M1MQEr2?sT6!J24n,0%poifG2`G9Hm@kad4XcYd6+(]6'DSdn]9DiE05c*@m5>W=bMdfL
%g_fcmlh?K^B]hB2mLS&sOOs<n1"VaUI1.)/:M4JE(QsVlEmhCFdK?5`PlLX@@Kh2s>IFW"T-_Bm)stJtk0V\K">`PTG:3@RnV<Q1
%+LsJ]bJO+F`nGViO"UEPHuVqic7T<Tm:o+,k47GcPGA/F$e\77I]0HpLNm&8f3dC+*Ib>YAn3Qs]%&R[G%[3@FZ5)D=cD#dNO&Kf
%9b-+t#:7]G^Gn3"o5]kS_A81-]6Q7qiM9$njSmrAh'eXoTT99QG_`K>Pdet6:6lpG]:+s1`U\IU/FVg0mO3\ZLX5s3]'oZHp7dBe
%Yq;X5q_-:A^+NJ1M9St9h`pu-ph]kp-Qdd4\mC/Ar:\ak+3m[)Z]n77rlaU&dEB]t53Z+?4o)$\IJ:pKO5AIflW.BO5AJ'ZGJE.h
%s"=?JYL<-fb&j[;<r_poFfQ>?m-hZ6o$PqIP?F_!qn93pjmS`6>jQ<EI%!B7bC?FWh-P2/*a2HS<eiZ4r\f)fpaXBg?A8-9+$@RK
%^"dR[ldr>7/bM=(Hh8T$<U/%nhWNRUO7n&g#KZr5^VWP:p`F/DAhR1L?6$U;0#$#]Q5/h%\(>c"ZZamd\WC[=IHe^6hfZZbhN\&q
%0-@)SYKu(qpXAtkGM_Y[pZ;)tms1D^C;4lT90C&i5!RB.i=hL:PKgb($c)uD_fXSO'cnPg5"+n6lSJOfa"H<md?_7!X7$PP=">;h
%hlQH:ho-j8jgX]S+1pC?p:KtV1EMN_kX1ps5!,XEojIUYZT9.P)?"@Hes!H9]3SWiNUGTIegINE?&nml50)i][rK:kN6,XF_DRlh
%1FCS[hnpJ*4HHhRN]]>6%"clOd'j<@0Uqc;f2'`4n"HZSCUitT[QI]>mUq`mGg;BLDuY(Qd6D16IJ;aC7re4l+'7@ukLFF>\Y&3[
%`>@h6@V9/\S1SsOZe(f=I]qOu?(CVo/'j'l1@1gk]04o\8Q5EqR5qZ$AreUcG7FDpnn!*?V#QZ8Z<XO21$]:ln+%#]maLLNPt$12
%*A_C_@A9VS4+$"5nU<-8S>an&FuUDU[f(=cU4+kJ&).(ZSR)lBE?");>8"'RAe1n!\B4k@s2Qn29\14WnhR*9>RIISJ!Y4p2Whc2
%HQe[-rA;+!i%Qp\fsBP$)k4(`k>(2JH)M#?A]k5FNE^g45,'Lg,5<p5I!JVFY.<iQdN'\(43,!HXA,bo_frlarp9Mc^Lp6[PR)7^
%LYhX:c%>lrh:M&Uam-/lPcnDKr9B1fq!M]OGs#F"6Q'9C(<Y!ajggPJ[J,%0p9%Tn5&pGZ.i&dI6TIOC]%!"#m)hsa>FQVo`C%cf
%[cKZ"\I9g^b^_TIjl^%mYJF!E$5i%F:;NFnZg7>]@[)#[_Z9+7C!dU:I-C\ObL_Z"e3<1k`E^Dmbke-Khs65R_(E[LViFe;a1Z/"
%B@5pR(iT-!i=3\,f!4.L8fYlXejcuYM@"Hqj1$XZ/slI"*f\1+ImdMTH7B#t]X['"/)?Zfb1!,tbK(%A72a/-bEu+4]M,]j>eKpg
%1<*S^0ai=j=>;KLa7"91rRppfER0sD'A\t4%4Q@C162D(IIWj]Vn7RGI,Coi#e+SlLb7?8ZPTZ$Y7=k\X\S*`rs=Is_u'F:dr*cb
%YH&*1`mfNCp-aWC`g8f1+,s$Tg0@*FH08MXET"nhA"=!+j<=A(`\cheMln'uXF9=mrf2>r$Xt[X?FF*7D&FY!YB-Z_m#7bQ.D8n9
%,B%&c/8W^^c)#H+PA/D@E`7G$Z<EM*/9;+.R$)\qfgK0p'AgandUki/=-K4D0A*ZjmG/_Y;W:Y2I?,h4WDoHIH$G!R[ebuO<'&@f
%1;.*qPO$AI%fN!j`V)JI[`GL($[[^N;b"4]b:@'D=cD3n.8Yb80!=)3B9j>DI:']X`pcc)bjrC%FFW^QSM)JtQfKpQ@d):\>&_Ye
%01YZDXpR"5pa1Fb-?Un2SIB\K4<Iaa.=84mF8ZpK$cA*B^YhVh.uj#kr"bWlr,7X55hFDBY'oq[<IFi+UrQIi6_1`Y_qjg%b7T4"
%7kZej:YpKqr`,koiW4-ap(_@MibF,>n^FdAQLW\LdH5S$s0KV\\#8,R?Oho1c)BI0]"c:4NJGFnVS'n(M^)qndDnJoeuL?3`I+!u
%,1VH0\7u!iE=PbL0AN?a!,-05`t)VW=';Up8$;e?CXhst*Q5:6O.C6^*GbujeGW;"?#`[#l?dRO'=C>@0/`R%8"O#\=D%6JrqZ?r
%=3^7-n\:)Z^-9,QH$"9[ON%5\3.#YN\T2#)XY;<Amd#MKbG1!%DiT9/IWKeN\,1M@Cs$&Db%LXEM&ZenHujCK,,H1PoAgP_[jT55
%lWh$fY8>54rm/uqoeJHjr1D:H'`4jMDE"0uS@06#UF5@sQYZos3e)R)r'HOXeeQFn%[`A&4]d2!?bCf.I(8)u$gt@Z4s)!:,MfVZ
%qj:+5a)'ZtAt*b3NrI9ap(Q.FHPc%hrm'.l;@Ec4oCWrZ^DZnTo<=iL_LCp%h^bq'C[N_*:N"gG\L6_kr+>:C?%`*s5'@D4n\6%:
%j6'o:FuK%-INRpSi@&sbK>ER>0pk)?IM@A7\8]utKRR0YIU^"uqO)cdrOKB`o$_P"]APmAJGY_7E$)FE4q$e"BAA8pIXU&!eNe)C
%@aIL<d&-uMK/Lb-E2WI3=]U).*n1\dPM'Uf%P"nPR`egT^@(,V\!kMHM.t`C]`&;)4HrjN2YGL_`ASM[WQWCV>PUZB2p4b:ose7]
%XA4^`MIWj1L,'b!XeP.'*p?Mb['BC;6'd'W;sTaK/.W$h;EfpnEWrq=E_rYrl*N"fjZ6OMau\R'opSe.q9GBSVQr0qICTF5Yi'k2
%F?DYf/#u]AZ-I6qdsoAPAn?45q3bV<ri([pdd4SFHS/i\FaL)r.j<*)k,i?iWgBRc3s1[FqR8HBdTEq\=dKhd\4YaO=%7mI4?*fC
%U9<rFl\eQ44]1Q=05c/OlX34U)^foZ\M>1_g#Cb^1=P=u(Iouafj^ia$ikQ*RlG@[@kOfXojRBEHnTn^D2<=a's3hK=[')fEt"\$
%hn=,R[G#:`85Is7R)@#Sq<)TYChJ\[4uY2h(g0d$o+dXh_+=&G=8F;UXPdPp7jEaYRIgs&/2O45_eT_lV&,+!(!`=njo$&u`e5pB
%e4iZ`DhJG9Q*R5FqdsbugoJK.D+:;Hfo7`)G#Y(]/]6ISB6m_H\cs(=SWA?4.*[3O7AdhW@49SUeB*k8C!&2"MaclNf#,"@U!]1l
%Eo,fk@VDd,#j@7obokac(_Rd0)K[ZQdO=uWFEhb5=M[ohPIgOaA])+ml]lM?*G!iX=a_n-kF9qN;bF/[C1[\IW2(3*Va89s1'Fj;
%V8p5?1(h^DVO`eA'W!t8o$%VTq3d1U<eah410(r&7g9+N_D2KH-7-e[PGZu(;aM0k$jsV"NS43)hN!0Q,Y,H$X:/.ITEbQA;ZEe"
%)5ldc0e(gYqBW'W13c@Fjp:GVf0>1].D6XqJ'&PQkA'7=6gN5YkLe!PC1a>f8ldhg(pQpj>Md-d7b@\2hE'XZ>j0'`<h8j9?8bod
%opP>Gc8YiceNmIPj@=hF?QLd!ncBpe!:g@#+N"4e"-D-Mj!er[D4kn*!0-qq!fbGlJ]?:AYW%-Q\Uq;1*ba>9"WG_$n,D\N$>>qZ
%BUnZWJ]@[JK?!Frcr_X63bZ`Bdbb3bG4S"01E/1EpBhhZMVdJ7d+d's>Aj_mR,a%mXh+TkB&8rK`dWRZhu1:dZgS:SfF'H"i7KWs
%nN-`kh,V71[fFGVE;V<pKCF.\F)J,^Oh9/)MN?2o="fXsDa+;M`N'q:=b/De>r=k\'HWnTLOHfoj/17[gl8LC&9iLc\c6`!h&e-o
%=M3?oTSh0ieJB`A(]'58i@4qN!b%=)b8FH>C@6<9A'4UQ=DJ'7(@!.P6_\hZl]M7Tj\FK27>dU]I1^^5"\'^`aKt_F/d=auN,LA)
%"gP+!F`I&*g4nTA=]o?g2:KS<B,fQAR2*#(!Jl83`f$*68llhd[4ZgG0%DTU1o,nrF#l,Y$>tZ(q0&oB]I:Z;4l8BrQDDh^Mf%k_
%d;&6MMtTa_2=+m6pZ9/H[1+"D`HcSY<<P1FV;5L$=Re\:-H+6?gA]>uK;H%_m\a"Ohl[,Tm^@4[]%[RJ?c\If&uj4iD8k$*[Q3dM
%ifAFqO4\Zocp"W6&V^^9IplPd@,pgeJ#hQ/!<gnjA]iRZ>kbM)62q6Z0(+oe"hQ`PbW?,OG4i,sQCF[(rbT&MGQ7C&b4k3\/ETt3
%^sk!NQe^7n9de3&(r02$3GPj&11e?EVXHK-]6m9c`[qB)G'<2<_u60&mf'lEnkdp8::AU?KL</8Oa'>nCB;Ld5]h!U-Qk^[@F[DB
%EMTLlAV?EddVA/Oh`HN0@b4:cBU1X3AhpW]k%ZZp_.k_;:\',a:X*DOj>#3CH#D$6#7/mU)qU^!B\+Z'=N=lbA`Y?f;ceg8*c!*$
%P2B1mHe+-2l\TD4]#"K>=.<pHX%toe4*^fQhQ&[,!dIAn,e>[[;Uq:jnKVUPbm?:U/W<T?NG;52`jBNso]G7>qK?p9(7=tR_VAK?
%5RmI9j4k[sobC:^gM]QnbJ'h]=$b\_'CtS&.I,a7>Q__5\-_jL-eS1WY."Giq@:tu]jDW3O(!!W'b#!K*sS&ag;Lk)rTOFrcQc[l
%rk<r@="I*Dn]5I;8]UPYYtrF8pi,"*,e#"[I!!+X;I2`'%4Q5A4aFdm1%Xq9O+HnKM%P'Zm;PM?-]^#Jk\1JmcYK_Ua0.Z.dtcsQ
%LjBs_lJo#g@!1.rO(%^h=*N]r-;EqNAacfoe#qop3))J.g,_<eUhe*+Bao:TL+XMH?:Wq/_q&4?KhA3r]JWd,n:KO+0`6/@f*(Nq
%[[tH$3d-2!DpFqsBO5]mf(-A`/&D&\I=q,o0lhJ4@Ji/USd'!p-q$gDnQKV_=(pG$aSak4\j,qdK$4%GbI`*sk"bmo>eWZ7a1/d_
%"UsF%mU34ik)Kn;+2NVZ%8?CqUPXF/:(1o_@b:hH;Zl2Q);X7$F?YZBq&uY?F(D0;HsU+3BD7b@*H'$%%Lj_n=/9qF"0bEjG6@#l
%\ZqV'[bG\sFC0)n.HV_Vq6Z@<I(UAeO)*Bq>K+S^rRbG:;>PJ*3`I1[Tm@Q1.s&?Lijt`AI4s%WGeN0N9_!Fc:orXKTt^f8n#sOm
%f@mUPh_ST2S3lD[;8!u2:F!M9.s-g8s0[*"Y'BmNY.sQkpZLCsE.,e:Y2?>T\Jne';lY&-Ur!I*8Bu2Y)C?>bjE6mgdN`\PII3Qn
%b\F*.&"D=6DIpumN#?,1L#3"LmeU<AqH*ASE)n<@p^!4bJpoXbAcLJb!"Ca"r?pE[W>ERF'B6NC66(2>%-t[rZ#dF-R<B&EchOnY
%P7qj!SB4e)YJ&*/STCndrZ6#SG$`-NR<"`8B)k$,Th]%pQQE,GM)`52^f)g>3/p^nEW+L.Tr[&B6c#Y(MA>kJikOl9KMoKE^H>l/
%0pc_#,ocFXbf3n$*#BO6KuS,+EEm/s(E1?E6K>RdAaVlck5:H;Ae"H*gmPIj<MpCRMLc]RRXh*W^W.Or0M-5t<e6V1;2YD(%MbaS
%jL;#E+Q4mIaj(eE!6u'e7Flt[b%:?/_&O_QKTD7A?UnPXE0OW1mna[.EnT#ghbT[pCRm@HeI9)CbKOb:"$kJfgi&T!?/KlWL$l5'
%l`sCie>iWd(uI<]KHh`X"dTQ*(^%LU2sm]8_-*r[m-)H8'g$`SkG'A'n(P?^pDm1lb3+u!\G8RckrANeaE]@cmu%^:K<,2q:5=#M
%g:cQN'aLj6g1ZGp)b8tSEP4'-Eur%OUQ.HD>ZlH#0mXIO)%D9,FcQ`#/JMf\[DQ-YD)7mB:Hoth#,7=Q9$bI5>d'?%/$s*G.oOAb
%manUl`kF;gT)gCO%&(&E</)bL#KBIW]f=7f`X]E&>%$,/EOZ(N`RQhke1OcL7nH0#1J;p-UW+hkDdrBD47^ZX!-7,C_G_t#ZrrB\
%Tf!nBf?'o$FnO\VR%ZILC2I1%Jt[I7g31`_HYmlAiM;ZX(_-Dl!QplAHteIb0$4Y->T/o!>rS=-WD-srOa-$+<K+#)2+tQO<QqT-
%+a*kXa,P?(L`pb?%8:ULTQc[u!efdu($aN#M%OG`qIUgA;bOWcVaj\O"5olpY1EKGjU$[dSdK6\,5"bp@(Gc7Lt^lWjph+Uj'We9
%5.-_Bk.;eP4aPRSj.om_qm[0[Zmu';D]Ohbd^_464RLONcdSIl5AF<tk[?S+So+2C%#!HPE]<9CZKJeK%CnH,J:Ub8'>M95*6ZWO
%Y!VLR?B7O$E_$246l.AlIa_<jYIt:u:1T]-A;CbSqJYHH-lm4/_(``'fBOAcPkMDH0eM3#X*ZL#%M!Jlk#dUh<+ja6?AH:f<U6S!
%VBt#,M,ub\Fa5>P"#&K]I(16iSDa_^COU71"VM[gM2Y,M@J"5-Z+0ljQ'?6>A#B2/D92dM-l5]=cl#DR-c9\H<FpPl2i_b:.iqVp
%i!9)jK^MMq93<WtWs1MoE<XQUO8"%OKUmabi^iinPt#6CRuS84?+_.[hG>J]S,H`AB^P*17G.jKd25r%42$&VbUo_:es!-N=2)7'
%Jg%4mUS%[4UTr7e(n/AZF?5q^M=#2dq#TMGPgP+I96RfdJR`E'FaVb_h2U6ES@dA)(4/"ADE<_c''>6pdmbFfi)5.-&gib30AfTl
%<-g=S4DK?qcs08P-H?Fhe>Ntu5`P*+[0*>#LGQXq>euL`KbO+s>2s%>P:Y#Tkhq7rHoJ`RD-M@=Tm:n:G0S-UD03X'm2oL1FeB8q
%?Y]a,lbbM[s/FM?=Q,@0::eq[A9:US%r(n@CZtdj?6>mX_BK2^VQTHs&MH4Pj+m=fXRTEEN09:G9c5O57oN,QZNkp5I+5'T$6c>U
%e>!Lc]haA?I^>rhg5,jGM]FE4(nUF\@+o)Gr9u\54K*Y+07c_),;.(,VPD.&\$YjK+-tU0BBrblA"\p"B_X^Wd7,Scp$).EL:*'`
%`oH(3AtMcDr[g^RJ+*a*ahb.kRmnK$gCgBbN,B/p1OjbUnor0Cs/j,[HV9OZ`n9Bk8q[/*6^d\3m!a(fo;6'mnVCG2EF,4"^9)t3
%pHh*.D[LSq:,(&ZhDb>U27NOtfOpL0k7Zr_ig`Z3o/FTJYK^[/YW+"^.$@_Nk(F`A.*e5qa>)Q`k=dbYksj@mGJ32=gj;Y\ZUHm(
%;_n5ERI!KYk5/R'K>k%_'k1Ur6R@VPKj_$^SNS?=)t^I(hKI[2MDaETikO_b#k1W>"<2=;P.-&T"`,5MEeVe51:V86hYtdOP?`"?
%7V;00_<%Jg\)Vd?YPg);F2Up!c`l!Mc@5aY&_uB:]k1?8hZ?:6=EaAH7gBicYEnhG-,"UrY?oYXQh9Ph]m<8R?=8NlG$&.-%gdD]
%d]7R@^&"$EqUE5fq=5jBUj`lcOYj[Z%6=eqVBdTKdcc@6V_jPqP`6[WcY@K!e7/=Ge]VWDr/?^t;oKZTTh2![q&jn2Aa,7jQ`7"&
%7T(&2"9tKG'L*naJHOEhF\25Daq7[O::?T'7UIs\9ZUP(SX`4_4fc+J`M0>p:$8!(;ec!Mr?D'3Qe[>Dk]0W,8#+L%V(lQG:M@Gp
%k+Q\boBeZ9Y.+K7%r"&9[oZrpE0?p*;uSj=?V*N[g7R"/'t[DD#WhHhk3ENNpm*D13W$trF0:J2p3)ENBU&AnA$qhtl(pAR35)2L
%7\j./P._Ta2u0EuLK[9J/q^S#C;Mm.QA7r;ai.ocI@M?`QK`GS^,e9cn:M6QPOI`ZZn,f`+tQr9)nbNV_HpkDq'_mlP-,)$Wu3]'
%amUgl.@?nk7lh2i#1Re#V6c_,mpO1q/UOm$0hr63Au<e_.UX&Zh(?UOQPO(,C/_f4ET"F(=k=P*\Z@cYWcfqcd+#tX06&sCdXsMb
%VdsP,c)Y(Qe6/TD\%ZFk>P9IfpNdM)hGG6"P60hWVoP*9F\6[XHn9P,CcA`'gtiI3\bGY\b(+P=c0A'S,q8k$-a2/<oMC,cf$E\n
%q!p3W)_VGS7O.MM/c6c+1F?gm"%[2!I,mJ2m5LTKTo=e@1s^-e`\+BQ<,HHnlFlOL`Wo^N3&R6\f0%Uop6-s(#q>giS7G4%@mtsN
%,iAI2jh\U*bEoDD3_<:'UO1YTKdcai*%&)!U("DXTT?Ka)6uF7DK:p/@b$>DPFroXPWMs/@%DpLU-p&)95m?Ubr*NGAEK=;-jn81
%nG_ekk0+*Fh5:-\F8c&s0Qh,'8!XdNe(S,pkU]qU0iN4O/r`Va/TTki0%1H*WIY4qM2#_a/\*UF-+Xm=6#!Dn1l<#)@55/9)X2;F
%nXj_mFKmI'jj'TIFc#gdeLBgml_uN=V_beSV7mT6-3SUcebR>CYpA"VQE$:A>`S2^L6ook6@5q_B5LV-;p$Asl;_YDZ_C$0#IFmq
%:9C8CUshA9CD(Y#G&!H&Fa5GYW].=JWD7bV<3su[j_6]aX=iTa=X"AOXYkL1fP@4kLL=Xc^9-^b'Br'\3ij`YU*<,Z(R@BnT?:`-
%W3(e%\+L($/ld2G@;d0]A8o#eBT4V:Z7\tk_'-5j.Z4)%X>tES.Qc&Eg&bhC?'U+R._Ak8:L0Vmgu,2.Z*limC7)(.0"+Zo?6-R_
%6tpdfV$du<7DV#Sn#26BNfe,Oo[m+ZW%s*ZY?l`3:rWB/Ie_32I4BkC<Hk\`Fo"e:DaV"::I[H=]g.tpZFB2YqeFrOQY3&'[Q\Gq
%0tgFKVQI&`?HgZ*npPH+iTT%mjNE^]Ek0(ae]*nbh+K?Dpg@0I_8],[[5?J-$$4D%@@6-B23LQ28JWn+?@W_5f/64QV_YiIC$S]4
%lVe[m\L-@For1'ImHY*<*<q:/KX`+@R'n8'\(e0Df]DqpKbSkW`El*?(K0UZ='eG&(K0UR'RM"B?:_=;;XB)OHQg@78?qVBO#Za[
%[8Pem)OL1+*8Kh>f73%I[pZ[Nl<T>`]/9mKdS8E4MO4b2p4W*!M5rBl"P\@/IB;T??ZDA0CTjJ6cgNek3-05AhPY<AoOEa&!T8(c
%^\#SX/3Wbq,[^P3Ee/plH-$P&Z@gaOM[q$oG_AQqftdb3Ym*^'NC7SKG&TkjVA[7E%CC?$&@T>pL2\XS[WeoJDOJ)f'Gmrc#j85q
%P@reIM@AHZmOLgqY"6GFDWL[a)W!>=3*h^k4@0s@%,kp;idGDEO$JH#0SZVOL>+J:-bXYP(dkrMZQJLF^KB)^N1mum@qZ1cRe69U
%\)"t>Y.6,=L5%D7SO=;93]hS:'LpclB#tNhZ@hV4I+e5D`@T=l'[2FnK$5:*7lo<5&>^XDq*@5,Q?K0/)eB$Bj*!5@U69rtoN+[^
%13`V<]b8u]aRVb\Dq:@4P#c-"&)2/V,-W,4=/_#@?.XS6,Cr::gR87TR/S!,][5i2:#iGKI)q%V%)3*oE+=^&Zt*T+*Jag"k5.i@
%$pD*$9c@AR8gBjA5o=X,:>=N#H6#_t$VM+6e%g!`"`Daf0=>s>S=amrE&nsZF9aS4!'QQ!$o\r?GLA<QCO2I*q^g`M4Lu0\eP,%I
%!B(6kXD-RmS6.^XcSr&8E?!A>474n2;\EgAnL#*\hCr3`o[.M4eSD;C#'6kER`NlnOtm]3So]nV[bho8]M7R-CDu)MisQ>amrW6k
%XIequP]H\!;sDd\Ib@GNn_.rHI,['Jg!hN>ib/V-N>=;knrkReD\S$+"ENlWO=NB1q2M7*\J%2Cl8P10g9kNYZiDR23$AI!]dg5:
%_V<-^#=#&g;M&Unk:EpCZs!IL,l$[8%NRh'Q<66;b53utN5`VACO_th_J1_elt$i&%*c(%Z[_`oTb4l&D2n:,J>]iGV9*bDg2baY
%"M2ibD+r]rrOQ<)E-*?\ZR'+/e<IYq5_K.R1RuN51B?$Z,iR2j+IN.CG:cRM?o^/'`GY;!TP2t=IF9tO4O5CsS]1%io&iJKRq9&h
%_VWI*gii!8F[FXi282tXe/=4@FO%J#)@b.2M/MsO1/%MQcjs*QPGWZ.i=7hK\D<YIo54H3j)ZM<G&SarNJuo\W7Pd.Lg;gsD/cD]
%FN'rGldF<aqlVMVPGWZ.nJrNJb4lJ;FPZ^bb,Q23bLKU.dT!D-(t[9'%l_4T/6I2qFAq$s2JKS;p^Tn&I=9T*NoR<#%'J'QaenT&
%q6f9(7SS$-EoRZi)Q:Q0b;/8WnTYW1HU%MXS1)i54!)e598u-dptGDmW#qncJk`OGq=056rC3">V^ILCr,;W1E.VE21%0><6=&b%
%DblEps6KI#Kaq`%GV&s"O$:L4f0Y8!d,?Nt3"$bP6AMnoi@K(19>G<Z!a`@_iMba:p&EV;g0OtNCSIR*=Nr`-ZD@/rVHE`CM4ttJ
%J2Y<KgZT9/a""&;\&F;lEPDhGH4."b\$G!Ppg+81!q%=AY"-lULsn^2C2KMA#ku?>lsG)S9\D2Ef7Nf*,<4)T9$Ab'fNe9AX6\RQ
%B?4(NY;ciQ<KhE4]N(Yr'NBUi2Nf+A\"rgs41I(WmDEM3]Gi[oVXeG7fWpmJ5p*2WK&m8iTHWmcbL!XXZ'1G'"B9CL6isksjj&V#
%l#YBu'P#m,3n4]qE'n\=OR/u"]>\!E4[L9SRmH0M7*:Tu0DafhK."Z=64F/qXGl4U%X)/@3uKn3YIm*[asaZ:ana2DjE6`=N*Ib`
%EKc&Kd>1b3n\n`8QiS-FM:.Z=\QY#rc?TZ_(@NT0CL:o-*i3CS/mHFF]S+u!)8sA3\e0>Ei0Ar.0\eoRf/+0_@^3d5<<eKT>',Hj
%@&:qa\PL\_kucAG\u.5;Em74G!;`NgT6Aq$mqX?1)nN<TQL!8geADCG!C'#+"BfWrPGP%c1*`t_(48EYV>SZOnG\@SF6@IAhK$8.
%]LQ9D$=J%"-rMd@LgAb)8(.1LSQI",,7[GL=$R\Wg5/28Zef<pF%rtQc(qp_;PE\DkV;eUUk04O^k/j,W@#%>Fd-<Je-J3:f7mLG
%-5CV5W=Du[+t;.g#`AlG/RhU&9PU%$Aah!K]gpI,CnATAP2ub)`SsK3Q"e0$NuQ[mC2!&T)&Fp+mtq+FX;$l4HIdBrW+uZjUsM`R
%Yk:q9;AQt0a6MQVVHDCl`hR'jeUS)eX21qr:*-pQK+=^O^<'*L3=->uOCtNS"?Lt1ojar_"?RILkk(Tdk+jQ/?C<a`C-!Q/X\%:D
%PI9Nql&9Z-@&+ljTc:PBc_NM?F)&Pf+#2@Hr;;lbl<g4`"mZ*fTmgTD9qhPDR"#J5D\Ke@.G-D0q#,-2B/.#sZPVdjr;HL.g:QL]
%^R*<=s32+)]Gfdr8[/cqF+a;#5l>L``,B6Tr;L"Gr`GlfCD\H*[AR&-ilqJnF$-_5`8+8:@N0#NoHT1lme>P0I:#8;Js6S[mhU`Z
%*?b@L.YtiD+T;Q(J+!r`T0W=<%(d4-6@73M*u,@%$iR#\&AQZ'O&$`]r;I0;J+";V7PU[7J$4Fu#Aft7Y/KINXpDcG`Uhe,0']n'
%n@"8A?[E@dr!7/B_m1F9\3l3pfGbq6P9h<hA[+?UK\shKBEJj:VijM_RCir5<]O#INQlCB9j@uD6`<lf"._2r^sIL16l)`jZ[.1/
%Z^:R&c:1%VqgH`sjguA0>?'j;6eRY\+$gf8:Gjto,qsM-/%bEDrh+g"X"4'^(*5PIA-d#:f:Ys@T0Qi6RaYV;@gqH6Y;mGu[FHon
%qo\dlY,mFq\5,Ln`_/a2AZ.H\2$s*JW2[diZ>5<o;;%6cs)U=X:!6GO)BrBZRa>4O*(("r[&o77*<uT[,n615aEA@b;=u1GVm=!^
%V,^<#e0mukLFlJ;V21rVC*ig3G-u8]a<h>jB,.BgV"q)uT_BWa>.c/N7bDOLH\Gm6C`BlF(Q(*7d^4#]abJqeb+kr-E@2Zn!#0R-
%D=lK_-pC6g1#Vg#?_3m<I;sXX=W[S,;f*o-3<%*bO1p"d^Ld5qf-bL[It%(.J!G5'o$PLM]f?&NBXN?[p<BYg(C+RX59=+3^:JQ/
%FRdE+rj\-+5!(_a3A*eporI+?4nS4)/O*CKea(DleMm!75M80-f]$q2ko"&/hK6p4i37MZf-k;0jlG@jeeA%3rq>j3`h2?2DdLuC
%ot,To<rVW(ErHkn:G.^O5WO/^aWFT2g83me9KVke5L/_?c:rrLR\%F+*e,(,`jat-ao;mpB6SFS]]8tHqX%Sahsnt'Hb=X^bq[6!
%hI..D\"<VDT6J"qaM)pGc[gW6U_E*b7sUFue'$X+?2jQgf9;sg:HnX9s.#Y[ElMH?cl[a\G(-kTAV]iseL+]>^C-q*PAcLX?_8=G
%K4O/hg+>g=V!S,0:Is7`.c0QH$m`Oa_m]U&F@pEZK]#\n@QsVaTY/1Bf[A:tT-(bb5H]?D^O)"]Ait*Qa=4t.G1OOp$W2KjOWJ(h
%Z81d@2udmtcQ@(Tr^<0GnfHnBptTEkJQNA7Kq&[lHhFYqs)EP7^OL9Cp_,0"b(P.b3IZn4MSJ`Rn.qWY;ZQ)9a!YF]iRuO`PoHgc
%&8D-=GURm^T<:BFgIp>ok0s#7hAdVtDfpO&ipH9tFiX(o^HT0;]^DA4*d.FQ2d8(eO4!26Nt:;k3,J'A\?+tfLs[[W+4^Ahp^/7U
%qW.+cQRD^;jeYbe](l!iiqt2",%DFpI&QY[DiP=RMt?K@IoX7fpgRl#SfI^L_8S/-a?StI`0\B65!O@AFS=_==7W8<HJT_kQf@R8
%g]MQW6>c`"\@_ojE;eMJ*0iCXN1.MRo5C9![@$2sb/jJSeTf>Ah:Ap)N,ALXe()Lm4b&p'?)pank7jtW-[PC\jPX,8.CYUle)=NF
%e2NnM/i\\j-4@QeN`<%`Z`rfbBN2R)o9K@Nm^)4++neAHAa<n[Y"_?[(mN7Z<>hVTNui,kgU17hrc[t<e'GN!WNJFsrHW_cV^i7W
%eTCYhc\)2rT=su8:EN1%5k"%14Sp/7fu@F=QK1S[N]:[G_8_!3ZY/F>rTq"BeL_q\*+h+!ftDJ#m!j#S@s-n5QC?=b)rCCR2OAZA
%iE8F#s&>A>0K1!5o>Q3m'?*XPDWQ(`hC#+2\9M(9jLsa!+1>b>3ub[Dm'4@X8FkNtQlf\_RSDiA0hNC7gAb,\H!%-?WdXX^ooB/P
%5/aeRV;fPr6ZMno$1J2[aEURpd'!'<oBI`lqO_!j%Ke8sa_S6QqE$[p024-p$&nn/9b?hX4T+@mDBl960>IK4fmb4!@F`5_pbtb;
%J!/:_BDj(P%jGCo]kZu%C?r*%O[OtULEuWkC>XF9*H?R=9\c8QA%BhY-h$Licod!;?nMDfPi;O/)#nWnd-(?mc@6=0fK\6m5LgPI
%O$$k6T7+NTB$:3]Ggt4jpV58L!/pY6jtV*1QJ1_]c,-)3h!siQ<.5'Tr^#`,*t%'+ZT2(d0us,I1*9VT_iXdjM!aUSSNdmXqo=BZ
%^CLpd73Z]gOFDG/_=:UQF)9Hl-qLiRB0rs)d2:tPdctU^[G>X/?5p!jdMJ%qgS"?)'j?++B`HCAoDaCZXfGSC7q@>#*D^sE#t&#S
%+c"hbW:?[,\gK?/9BY-8s)Qop$HWcFZ4:6X8$:=LeJF9(]PnX.Ua7S:o_=<-7hhhWIgK]b2hte'T`$ADqc='sT,iO^98``aIf2(A
%@!(6$/,]8DGJ`jg([c1%,n`SakX4<]K`.erP.tJ2^I&JJf"X9"rZ?t5;u8(7rJsEr:<<iiM56VnC?2#pPN0t-oD(>VDl.*fZ5MK+
%kW_\:$?Fj>0d>SD%_6]f%(O/nlnKi`:5>gL_mKDG^>&Z267g1.\=gpI:#*V)><9i\Fel/pFB`]m0>F+]Gi9H_I#]!6^B?-s0O<Ih
%_cJ@?plX[%M9pB80KKWk2S:^4@JuPN6[4p_Ep-3dLI3@S9T@r/L)7GZI0',-&Q+MY"[;:+rEk-g`tRei)33nVps:%172Y"$0>;Tn
%$Np21EW2Bipa6s)s$eQNN[\)gg:E%5F)!n>W>>[dJc#[;r@?"S?P"A<s-#RDs!0pMs0\$O?U+sQr>.'`CM881p`Ds4rt\6%;\`4.
%d&m49b"M_S$cff32ZtcDRf0j:YF@sMU?c'R+\eT$^,k6%JGe%_l^qNEj4fm1<[Dk>o(u(L8&])Jhlk1^*0l!!b3*ZZpZV).)%2eG
%!ILRPrq8QHj`-ZV];R[b<WDUXHJ*ta:H'7RiH_<Z$HAi)Cj!%ONgs'!_%`?b>rF;JT!7`[(dE$R[(`OuRs;?<l6$LD]>Hp)RVm;L
%eQ1&Fem6Oa#-MBur?(A`BV5+.3,J#o-G.h8]O]&"Q9BrU,:F/22]Q*:1)hl'dg9%gC;4,'Wj_cCTSkF-:M9$V)34G^-To:d=_DEX
%QGpRo/R3iF!1d@OMf1r)[(dT':%ulQk*kO'dVG.37&+@=Z9ZNNKUfloG6$;L`olbD'b+fsGO%ip8%7Cfq?%\DLWq]oV1D>Q3_.6^
%\0f&0fujD=R4ItGRi/;LF?kFpY'JaBJEUn?ennTX_b5-+`WqPb&AZ(K^XPR4h%,:Z)KknC`md>51bI<k+4kWDU*r$h.ppkemf_p7
%*Q-B$U'#m!)sbCndqcBN>Tc5FA&o6U6[([N(n>2miW#:D(n\WP#-__qqTRoT]<5XJrc/EOP.I\*k;l`)a0B_M$+sFk4;K(K00S:'
%U'aI]SuGk5WIZSc,E>Tsfj6p$QA3)!=Iq36$nd442X',%rpkFoVF3d@$)j+b0SVuk)UmiTTK_Tt`u;7GYVaCbA?0$YQdADmSt*go
%I8.Vqj[+GJ?Cce6&As_$Y[8_2e'`JXF:'p5-o6O2f4_I8V)eJ5=1lrb+8cV0Lc;68fg@Z;"MY\+akH=TZ8EC.rfIC(Q'AC?19FrV
%\fMd5V+!-)H?-nK%h1m7&5bD=*.\_E(FR#9]'TnpS*)JT>'tZl/e'J&<J&h7>kfI+3KPOY(i(pd+d9H]oc%6T2h]PZTda`-"%'G0
%BK:;t-#M*OU7Yu1A'(GVRr=7#-Ji<o%9cXVOG#KZ<cf3F$-q.0StM2thP]J=Nl=(#T^EYEC).hca'o@A9ej6*'rD>].'?sTJ2G(g
%O<Fe^[O&K-[cQ4*QUM0#JcY".=@3tK(ZurMI(%D;[<+Z9i:(D3cXKlWEGG(U9fJou_Ae>c4!LAGl"A2G$96?$jg8n73R1%jQF.pN
%i%-FiF$_)nZDts]6PY/LK@/7.f<BHP,[1Q=K&:c@$RQ<18WRBh`cS&U$Y*,<1QX>GO%q>Z83KIaiSiboRD*,?'ShplLq`_(4V%+=
%aTl>>6hP,k42ck`HCd5ocW8K:n``Mfpk9eWrT5h+]?D6<`-JN16JS;6jUKm2_&Vg;"4:5-8rAu+`DTd(I0;lPlM,B(;7[F(WKtMt
%e0^69QRam'?_E1[&Fuq7JXZ11J2s@dn/Z:BF#[hl1bcW_+NLh`Fje-K1hIe6Qfa9pJL"2BA4RlH`c\Oqk%nI]YUUn6k]#`>G[(aC
%C:_\'16DN%Yh(YIVZdf#Lp.'Sd88ERoA*=:GrgFoS2a19jdXF?T29d:U]eO=36prQ/AUU5CG"-T%P/#kH"K.(aYUFp#]/JHAop4a
%?[8'R``B*P7!Z'*$;!n>dtPHTDJ;#p78ha/+\CL5S.H8tF"'0!hjkd$QS!`LM*_I00V(;P[#um-U95&JJl9gcKMDnbf`N]LNe]$k
%n<Pl]V^B/k(79&_GsC$5/[hVeJ&/_BFIEosC1,&dacb@j23j)1bC))hXmhE\5;!1$g3@.qI'HS/S@0X[10hq$PSWq9_i=%?1@3D]
%99._8jKMj)4]T6;n6L)qeF0u:&2aAR^5Q$J&8<:^o8gT'"HjCQB7MHuWquJ)NWu?se@lCF?k4RO5PUN])V/>7J8st0,ajEH11E'Q
%0l/2i)Ln:s3eGH&;(>WGG=8^q?\k,D1a"#KQT\#0-LcU/)B$[q7Ji!is2,r5?kLDM$N3'I0+oXK$P7YVTl/S]/k$UK/iHKnnD@*^
%@%6W8NJ@0M_E?6-.h'Lj`X@c/HNe,HG<c![*N?nXpH(_C5\)6EE9aeRQ;8bjnbPfM$%i3Re=p*ITcm4rhk>PZ=rtj0P"D+jJ&7;h
%S:p(/kl$Q-=_mB$J@(<0#=Xq!8L2%8@TYrX)<qH]:uZcmIfl$r%1*Ci:&b]!Raa/5G\#tuNZn?$V5.qbi"j3HNJ%^Xh.05(pje,i
%6H50f7(@k*b\m9?4]%p=?;<a;Nits4OEgn78h*^oS6/'%?=DLT4NHCA'I031mlBsdp^92V&#23P%-RAuMefNDl]6_1`friL]bg:L
%O0:>X^$YPK(+&/?KC9?jr<<U`qL;>>h!MQM*ndUFGkRnY]+=EnGM]8tq8`K-f-p6cih-OU5$-sW3t,d<J!DTFqD@b7Q$4<KVbYcO
%[p5R*n1mG?N%_W8d%,$?BtRJ2>O31%*L/fR^7K?j2TgQnrOmi,V>A<oQ,qb\^,B3F+C=F/]8[G?_LMUG'&fY]D]Ru41eXcQ\__"#
%]%,BD[q#8qnP=Z0@a)BN<q#"6@^ifZWf%@rrM>;uRVIcd]h]Q@[`X)ZB#JVuptpb)<kDB1$'q%Ink6C],;f3j(]P0g/2^TG>-S!i
%9bP\bWr3%Vbmu]NDZ7s-MLQTpqU\:6)(HPLQ0aPkj!Q5QIng9a?RRK*noM'd[XSd=a$.\!?GHI8-P1e-;A*:''p3iq%OF=:3Ml^:
%pkBRVB3W]3(G#5pJ,^2/pO@]=n)9hus#"F2g^O)X^jgO[IhH`A-f=IK/cGO@/cGMng!WZ><3N;<hL<3k^ZhA"D`U'?pYG!2hPfr*
%h=(*8>5gOjk*Hg2]!##D:K@XhlbdUmSCep#nRJI]N<-kYZ-XP6bLJH7r;IZO"=^cD`B%>+rF1ISX+.uq]RP/\P8+fSq%:l*>*"hi
%C0T:78)7p`gARid3N`:!5E`'(qSc@-g#r[5lG*j`i;4IB?m\fgrDMts)SZGk]%O8f)M?Y_8[[/f%TKu;YWA@*M!C)t2<aO0m=)HC
%mE.<Y,9brA[tiS]\%Tk3[9&EZ'RTdn\+(E(9SMV+>tf+2bMf,O)>(]0'`+oeL\:$L>>Kn2;`/UFmL2/F2/^!.X]E6YkFn(WI]12C
%oXi(CY>_6<0E2r9l8C,Sh@Nu0[S8j5\Cg28g;RqU;JnGJh2!+$%0s9MbA][aCIGa"I,WggLJ>N(ogrba(<=STT^)*UfR"L17`'JB
%[SL\!O-*&4OmilRpc.US/,jQ?eW+81^)sQ2CkO@ee93)pkdQ2.*V0:K0@D:mLou&`f0Q_[3ppqV'Ag+qBu>uf'(u$)(24>>(&Lul
%_C>dpIZ!XAOaf.W9<2?IBbOK2FkZpc0#\:UE\,fVQ9Tbog[:lKeRE.;m1/r@P]T^USM9/c5!4CY&Uk_4b@e07/esj'e]si@)r`_+
%;Og9dd-2*3pEH-XN#_gpm<0'8I<X1+Js$.r&]]MJ`(jjHqFe4VAm?oc$Np[m!8iZjoXOD%pDK71;k8VWF0!q@0&K-!F?A7;a5b]d
%cuuTu/iFl@7TtROSAM&>e@m?\Xb<"e6IP<K[@JBrS%a81YBGIYH912u7;/10<kf4iX;$"k)NM^*T4I^%lIClL!c_`TA@CA*51O?X
%%FZP*:oDH[3UrZ;#DfeCs7SZ%SMV9?,NSCj=A2=3K*@$6BGETs,0fD%q\R,u6`8S?pHEGYm2#^cjJG]X.CRClG5%q0o_/)_Wbns9
%K_+uOSbdT]BCnVl&>UrBd?=DU(!%QK,DF\fs1tc*_0(.mg\.&R?]5Zp-s*oKQc3;/(IBiJ%H9h1n->`]?(Z/DdG^.p2QQjN.c?0W
%0GLHYiBm-[S,?*=:=%Aus&l@`g"po>/3U1Uq=etf)U/`(URh$EoP/g1bUsoRGq8^MFE]<BW9mCKR4ANiB_OiOc<+9ualUENheV<I
%Dgug=Y6O[tbiW6p\)2Xm7ctl"dHJI66o6s61I8pip0R1V\)IA71f5LN4l4cSa&Ek)Su/$iV^DA05,NfVgs'rH\g^];;b$pOH%,KG
%:HrH(q9Ri+H$]dGY4/&tdp:YBT80`Bl#h7hJ!ToVP^@4ikf;H]#%(*88'a'h28=l1:MH9BfgKS;r`DFdM3H3KQNNG#/KUR30%9$T
%0&]T4WgukS`-_,$Y4L+iVV6I9T4dpTSpO^lS&::2rSuRFUL*6VT5lk3X\IHO_Zop1m;D;ME@j6E>j54WaKK1\WJ%gkZ!aGqi^]us
%\))3jQX2?OhfF"Pda[h^[Pk`TS_Y<RpP^uLVb+et$,f`*dCPIr2YW3teBP;mGcm\:p=i8RWga]3Vsu$-j&ai%/fIM=eR-p<rg?T,
%r!sl+Nps-INc<t==oq&eVn.PPaU-ldp:rq8-hn0gFa!MNi%GPSn\d2CkjX.pCnD+PlnHh_Nsco0H$bY"2q(j[-`N<P`_8G&1hlK;
%jq:I.pTa)]b?Ae\ICZSM^(l^nQfZA!o'NH>%T1_pfL+")7Ll,b1@t(&H>PkUnuMTR6QpWrkF'?DeoE=N^S`I:2TecG\!K;jk1$(%
%gM]_<41inmHGAbo/@BYe;h`2$/(8aC+N<ZZhQA63e_Z%E]<:8EalS0<Q_iMAb]7$.oWrc-fjEG#D&qb2g>X6_HSns$o6cRpj50<#
%G.Y%C9>dTqaekJDg=%@g=mFP]<4BNBa'QD?0Zq?(%aD]=:)*u\H7YUCC7?Zc)il:$Z_`m*:J>;7nQRf=hVV[iJ$A3+Iq)se/NPnq
%a.nhkjk&]aAa;>pc!FL?]\Q7<]!9`)8gi,>bqIjH7->(5hkCM%h?"A&4C)]r\9I?NInf(gg91.=\;3(RaklrZMaqauH#tAo0lsfD
%SQsA[7&PuG.6?i-(XK0'g>IS9ASj4a\'_jFcK>Q%keca[+rWP784OKBn'@d!gY?j,;2W[iQ_#+2;=4&?33)_CC=Jd?:IWOER>BQQ
%X#j1`3-cTgoS7>6:%"KJ05k\rQd;E#d?QJ:bq$@`F5]O=f67_")s;!4d:>n27FTEffkBM[nfaHkktX\=7rQN5eo^(5\p`5!N:+[j
%WT[Z.qB:0h&Y"h&c%tcNE@KFo(:Nt>ka?U>(-Na%:IHkjMn/'E_ce)0gg6R4dJMtdD=mAJ?At2q:C>LlAS3JrX/tbYlg8.GqD+g_
%7:2CbhP0DT`+JYDI.8!>0,e%.dI#q$@^;3ST9r2Gc:lI40@(tSR14!WhOAtad.WAJ';iMD9%-Jdcc\B`m_S8F`6*,dG%,m.\2oc=
%?G0'Dl6h:Br;EcUZ$j+;SCkI03h/12lrt,Nc/[Bn=o\DAi_#tsDH"f:M2+Fi@A<Bd;qG'YNJYXm%IcF3\XVe&\_ELK5C4_(-OS\/
%aVelh4uqLK>ti6G@V\k#YM;]r`f*X'j>9Q55-EB^P:+].PM(SZ_o]$4QClsEGZgLu\imJK:S67uP?3t>Z]fT>B4A/k<:!@\T*hcc
%cc5B/9f(H`aj_\b1T@:OM8P>,eEgZ,Be";@=eF,CG+Y]!kh59dGPgkf[D(CP:1^a-m*q>hMGNW[0'oR$`ST=u7:LO`l?;FiBWAR)
%Gr&IThlT\f4SAtXSc3513k@(KUM6T</e@ZQ@tWIhC&O^WRMPj$CjPb^Apl_BeI'cpp#Go@rpJM<FMUNoVlqHDQdb]RQac5%F$iVc
%5<Ku]GA?6kR:rF1c-3n$Nb8t\YFQQSR95k[514@]P)[s29f'+)c?Epp04.m=V_a6H1Y9[:V4"(/Y\'K,p<?8]H]a[5`9/dcB6kBa
%fm%Z(En3:d9?aOYYM@F#GMC^8p0jXMHZZm60mh<8lce2rlMInFE>=skh:mCGmCso*+:Vu8f:m>CRWgb>4L%#Xp?_M9Equ!D\UBX'
%F/Q.WbhVT&Yrl+@l0QYPe!cZiVfsNNB@GE%r)+kb2"0euXj:q@pCd(eDqX"F;<"E-J%:cRR"&pBGNTq2VjM)qXm+OIe(M4_6=T(h
%E^AJlh\J,YXI"VmF/lfj4OYo8>d^X,$`.J*G2]9;GI,Y75MX3>kF_0OL>.05X_^^r@bF8R(->XB2IdR#Qebb`U,O*>hKKX<rksX\
%dk&d-9VrVcr:[tdC:nu$R-WiQMhgENjPn_GOh"SC1inSYV3d,87-jIk*hQc"`LZ+8.\8\G]85o6C[Lo-I;?hED_LhE08Ym=I.26[
%-"?,.rIgOe2&")X#LarAcfZnnkBj7.M;msV<hd.RC+`6IR&`mMPEXFX>FDjb14u_+V8ME/\TE8.F2(-(BJ7%>h3YLZ\^[WkSkZq4
%)g3s>mIZGd[I^<_KiU5mD665?ldOU0HSg_b+3ZD&CPDSq^0T7^os;):kTrC@elu?KkJm-u,@q^-ZS>t'SSK.URJSMpEZq]%<2p,B
%Gh\^X2<V<"(AWLPO(QC\4>W%goT"4[9dS'I]dMF#\2_uO)Jc=EM-4VpcA]/P'q;E[(T.%0okLL>ousD,*ICrQgYRW?@;fa5e+VJC
%iOiHV5ABiGidrBj(=F/=eK;7g5.so,V^I0';/4B6`LD'/j"/th_XZb=H"a_4qqXp.I,0$e.c'fMe#PaellTQDX'8dKG;k_oh!=Wu
%"1PP)I.eltPD3^LGE9E/b^%5jcIH"0a6F@Y^:Utd][4/L?=(oQ6qMcCCbB'pl^d.WkusCM=ddu\[TBQSApu%qSaEPLB(,Fo.Mk1Q
%/,c2cZ)Z&Cg8i?>F(=mA?J]!?]!q:3DmeoO[J7aAAo2si1;A!/XI%N[cDPj;3]jd\^::`.?!kd@ma_nl(Uhp;Y4k3`l^^LXAg8AC
%]POYkFRM*t4*sI:`Va1gUY@5Daeco"V.@_'B9S%[l"IBnqU.r(n*aR\B(;a\b#PU9;AW+F[FFeaZ(@OmI<eS7a+N"9DFa#in'dbi
%kt\]-UM2K?K*=&p1A99TKmnM!;_)^VB;[?eQ)o%Od*(hs-5,"DMg?l-H/((6Q=e\e\[8t&T0'ZEVK.ZMf;ni9`H*]IZ;gSh#M#0I
%I-IlmgPdc2YAN!5pO711rW(D`hG'@22rA*9h(?n+c"psP\h@9Sp"]DplU(2WHgu3%I60;Ns1Ec';pK2DH^ii^q13OiZX02]m1`=]
%G<>KhlMBr(iD"67mJ?g0Qi'%.KP.'p2s5@fp=:8n']/3lAlB(ap%+[9rHUPP^;&MqBD,-I)TMbtH6mkKF.VY%.?V5&\?I=k%UN4T
%Z\OD9r5rIA?8E(0-3fB`Dn24f,GSS84PJZ%*?767n,(/Q]@u2qc*o'\&&#MfRc_*q'D!Sm91R^XLAC2+S@_E5-a*bf4,'NrbZS@q
%l(h:g5Fh247ON(`Vs`fhlKQ^egu7Kr^K*C".%a;,V/LODc`RYtj0S1<b0.>D^S[Xlf@TcCCGWNaMtqJ2U1l5X:URNeCNk*aU0CjJ
%?&GbrkKCcqgrea-bC97:p,M/=Aado:=*HTXHQ=[rC=gZ%]oD@,`T?gdCMnUi7^)J#DKa:&qjY`VC&N4(XW5%!9K0+mDbHYo]BEO0
%L8MLc3ERoiSK/O?mb4R5kM@\Gans!>FmZp%/=\jKcH^G@gN0st:qj$O*p9Zm_.0@=^HCB1oZP4QmF#ik,C+`8]M9L_MM(;kj3l)l
%d8B/@Edh!Q/sK,RmQplCVC<=-qG"N6]3VLo`M_nAEEVU.?I*QPX4E;C=-(q8e(&&BjeQL+]p3Ag(RKd.9.ajAR>/9NFBFoUG^AV^
%UNQ1<[8K4mH9JGj?b5'JFZ[@d3'LQ\Bs\BD@$j-9U[n,"iAUE+gj.U[Hgt^:Q'_)Yb'E57GDaYqgp,VH)X,`'M9FNDfAp]*p%@1_
%n$H]i]\->'<kiL:QaF0oU6FfMGIG_RG.k8sg+ftPaj*cBiN^jl7<`F62tq=JI_45b:3<7CU=r<gm`rET$dN@&I_+\?^["2@:cF+P
%hP4u#7Ljkmb;"D_QddT;'K#X<2AGR#M,.()e95BOJ*0q=<D`e_0146pf,hdeWNPU,+nuS]7d&2E\YI%1T1jG*_/-kJ,45])p56P4
%9#WWrZXY4a=@*?LXV>5J_n\mS'k??%`Nr<0i`W$n1'hW*<)DUc,cEFY.g!_#-4L4$Gg<K:0\euaS<qN4kU$11kf&Ieg;A/1Us\2K
%9=ot;guH8`^rlE]%hF9H]O0Uk3>Z#q=*^+(Uhqg[QarR2:9X/4FEU>caX=`t@0Ui<\Qqgl)ZA83iaa.p<"aDbIHTkf,uI!fZ<aLW
%A?s_rrI<Q#[FcdFp:e4(AiZX(%sh78%uuJ>k!.b@s)o%:G)OYK+,\>J[.UT`BKYaIiS'jFi/8AA?@koXdD+TKc+KT%g[?FP2B08Z
%Atp"T/*#?*`uWS&jnHLB+QD7sn_?/HZSE'\`LsV>5>c-<]!_6nI==EnW.t>(*-t#CT][u^aGF8Z@J<PmXAs].(M&$O$A&DKQ*51d
%3I?BVYQ*-\fOotMH)"ATJ(LjYD0N^0_eejabVjGi5n/Z0(k'u/;QW6NKM+[]_"ls:5?i(coE(&FO5(20hu'-ms*M\(qQElbqIF<!
%Vt?QQWr3qu[:%LXW;\J'aj*(V)BVLrFbqDb;(XBi'p,9jG)>RSYeUd1647R0=_*R#q[]anop[og%*n^KgAQ&7BWg'shIZW*D>`X2
%U;'Cc8VG2rNqQ,1;i-`fNF]Z>>2<!JM2n9`\<``UN3PlG%3)Lh1S^DUp?]^VmD#QfT]la$I'V"Z,-W`)dH7V[I!HRb8sdI'(J'$A
%W8+E,6>!8R,_V6-E]ZMS'IX];]J+,U'#!2T+n%rGFBUm?2=HVkf#V6FA1RZf/drYa<.38_6WU5#``&r5NBZEUi_ko2XK^?@f$KaR
%MUno53O\jSpdQROP8psPr[?KF3pTfZ]lLA\9meC\dB)/P9)S7D7eNBKq9)iaj]7pafiQJ]psEJ#eVf]-\,+VUJ6I(Dhr9u;"U^^>
%W&:Y__b5cnEuDV\6H"k:rgB^5V=P.[h\XL?Cpht]PU.J1ppF'?&L_-`*GVB<r(j-F4*<]0\.PG+Kr4'55cW(I-p"G^3gFVRQ'2__
%N[:B22m=qsmJ^2ZJYn"==->NA^EcN/C-)$2pU>(0[C^DK^Qfs!H\e65\J?$@?-r&I-mkdM1lInH0WSs`eOcNA^X;u5OI+0pDLHH.
%Np<95S+VBbgjQ.kJ"Rm[M8n$X@a@h5S$Hs*O4,2hjfj%LXfj^D7=cus.DPlY,omG![eoa5kZS9"3tZm3q<]E#$Dm2rnT!k5lC_b<
%04"HMB>K0Np:ip4>4l2?*TEL<bEiHbQN"P^SJC%hL3F;Kq;&3f=_=#EQ#<c41lY#u::ml-c;YY.qM.>^(K%5oNQ29%_Jq$Xm]4.Q
%G@s'_KA5_Y#Z9L+4!">EQN3_PUMTq'cnDgWFCJVI,.<'25t11mj'$-^#@>,(1Of_/h.!;R>t\K(=3.4nT%GCui3r*4)S^#;2qDYj
%`QWec4<5_.B]kB?hgHa/Zqa:9.<_a(ipqn'EY/ph\4GM8r4QER7=%B:ZpfkS#YoGI)B\6<3He]piM$1^(<mNBPU7Se4W^!imE'f%
%"97'r6om_3O`i6A(-94h!6^IV52lITNL&oI#nbTpKI.05B[Qf(rAFj0=!J07M&%>\U?qV).U)(qRZ4VSdd@ReFY%dLQ":n\31-4=
%bsuk4TN/I:_Z_oDO[8::mjUtY6GYicd)b<dU[t$?*'(m"DiCJ8*Q]^(Wr&&Fo37CifS?Nuj(5%(cKFrH:VR<(pe?f?=DiU/$M'[X
%FrRXD'n:oEs)p\a1ieb:1<#9dB[HN&f\VV[e+1QLTh0__qs@Fr>jo+.X')/-H!0iNY2p$W,&\0gG.?((.3V6uUG`^%i+7:'(.@)U
%[k#1+^Y(4<3aCrfUD:;q?gb6S.$8>eP9Y)LG4P#4>C86W.I(2/b3;.0"GmOfH)G)gmRsN+cgN]4-/p9X^kn9RE*=?rQ<M6s1DICu
%E\!PdQo'K):DW_2_=\VObqUcR_Wf.\Ytso0$7<YC"kGRu3F`./J[SuS2,D.`1?IulmRp)FIP'a4CPI<Jl0E6kA%s2)(-g==TcPF?
%qKa4)9mCgULf<k9/GQpF\Hk9uf%A>XR.#fHZjk&8<GMR)c-D%J_0?a&57tOm];tQc_HlV4Ln;cugqcMim-?6^kD/R>fC@;PVh4Jp
%<Th,T1q"n[E#Z2S@!;Q6<r';W*lXATO5e>YitLN2#$E$]bkdH*qW*liTNtLXDS&m7mhL>SG/)7=I>XhoOmr$5hf6SiSc7\X5A8Cc
%a;EHR]2^1>ik;#\!A0>H0_>\MIrhsYCK8LoHDaDchcZbi91+3'l:)*RPBc9:Y=<suo/Kt>a-,O)%=OV2]P;1.V-G?d3.6#EX6V.a
%`o5-9D"V7SG,9Go\7<f(`m`&tk%fD@W>4727i1?#1Q>k<2^QbXEaj&LH+(8tDf%&oh9PF9]7[DQcPcWJZu0$1Rb#YGB:fsIWT;3M
%@Ni:nf]a]/]>bIXP?ce!G5YH'rUeRinQp7dWYR@L[InPuOdLRn0\9XmMC*GNq<;JRHF'5l^.V\^n\s!nH`rdi0(eJ7FYPntB<A.k
%oQ,*IJu6Z@[%5XtdA@nek+!ONgnmh&M=]&+%C]QU9<Q"imukl-`+pp93'G@/D,tC.%HAu=8BdL(h-E"M9lRXJ9@s'/\oY!7@,u;S
%>LrQ*P,fP.(NLX%F>%_8FPis&1N0dc&5C4$kG_E(51u*W\1CYb1l_5l(G"[kp@2CbDEY)&VP_V+=ScFq&Q]RinsScN@JtRdZG'3h
%(LQ[4&^/_ul>gWF>:M\i`mj$hj*mnhDGG,o`k/M16#*SWo7d^u-WbKV\ABFjcL6pq<dFBr[^NrVjLj?P2+F`;/F1-6jm5b2S1s-M
%<h0UsX"61b91:mPI=H)d^0")gSYK8sLTA,QA7g12nfkR,fso:gh7aJblV==*+'Un3gajD@aZCPf]erMg=r.R130kM'+c]bleU%('
%?GmS0SlbVBrGHX?]2W%+a[]jm>tcL4i1<Ht-8^]_Rb5(DO4\c-<W-+7aR..DRDmsV*6kuK[Y]Sh[Fk>%DUHOC4KYT60%O').aJ@o
%I%%m/BtV?jm8$*OdQ>8XmY4B]kLNDTWbO94Ni',nN,IEWZ,F%p/uMINc`q;'C%j2\/C%"e7Hs/`FY!?nSiX!?ql-?inp]lR0L5ah
%kO*)J3`W>(Q]E)<!)&K"8#Z+[AN6.59Q[cA6b@)GCP?#I;+fjak@<hA.i7c@0JZ@dHdH9cC$TdeTBpaeB@cYQ`<MrtCH&hV:2jVr
%Q>V'Dn$+maoe>ZZ<6<%s:c-EhCi(kmcSkI'[UUu>5FYhD%^[i\mGuE(Ij0$HdiWtUk.B(NU#&$4bAJ"Jgaoeg&rkCf<"2U8C4:&t
%1S:Y)PNuIF>@#<N]A5oXHF1*nX@-MC5f__nl=!1qRTkb9k/"@8M<srB;cHX[SuQ">HehC:hP^,>RG*\%l+<ca5#Za?@S&WC*&c8?
%Z$%iA>kIdAY1$UQPABV&6.=1AWe]9PQg$!EFhGjuQaGK;7Jl+khmY,bYJpKQB;4I4YncT_*DTYDHgP"6d;'"'Sai0o@t&HFCUgR5
%lLN.LnaspcLho;a[WB.Bch_`V1<lVmdsDIlrJ/O2WpmN^?#!IT3B9?AG"\W+pY/Kco@*)953EtodPT/E0dALZcGB3Sbt1,!0H[Et
%mb4G%_d-0+R]D?J)k/;>52&YDlN:eP/lu5fR7\JODVW;Z6;5ib/?-Mrim%GP`Q?,2lL]110r0eNXYe,D[Z56WZ[%Plc7cYS"g]nH
%Xej6V8.bu#5m"&PY+FJ6/j+UL^3D"X'"^oIG1m\aSb^IGk4IerV<)WZ-D%[-'tI<>VFI(^H(u^A=%#CpTr6PfEp@1e+o+,obiduD
%2(P0QT:$&i<c!&\Ru9<TG860P3LQ[m1-,77-Hi=b?OiZ>ecAF(_"+Eg+6b&?#!Fc1TI9b#i_Df6TNsbV-^2S8-ho(T2fUr?9g1Kk
%(Uj_\`7&6]N\Of<YfBqu?]JAiL.>+iUk>5@#KnUl0KE;`R-&&jQ;X@"]#rZ&8AgOWNKNX#1fsirD)b!7BUfJBGs$Z]M:.#aPZ2<T
%iR@YgI"-S^mnQ2D1H^W@!+2,o[N;)V'I.X*_`uVdL@ajLTr&,+o\FD6E%KdGrlU;I)Z!B-1S-_CViABPI1>H&"6I[>5/il,H$TT<
%Tj8Hu_s8^tB(@*srif>9PPc/SnSUA_GGMo93\-8X<+e#*8H.Ys9(Z\H<T^[Y/0e#QDJK8k8D;:C83i44@s%a4BGg($C7:oj;fMT,
%:'JDq+!=$"m8TGU1;W=4_6620&RPHfZqiUF]n'.9rOqU9A@FdOOt$m;-V!c!S':feS@F$miC5;uURe6-HWk)E\[Mtms$F/aah3d*
%Sphhggos0&L[L<!Z'uN8AAHG3LFe_>SO"g."2jNO?k*s1p38MGCdkI3LQl-'*jIV4#6E]@,3eX`eWDFtPKEFL3=)*jV7Cf:ce@!j
%]4me#lb.\g:+i)K\)pkXWSOUACZK4"<cjD3$H^i.1QgLM:"gge+ZZ4"]A=F7j>r$8P:f"0WscJOOhHK#O;RdDVf/Q0mJ5LQM&b&#
%"%XN%X_F4nXplG=h.rRWV:F8f,`Z@RkJ]C;b]SjDLmcFeVm:D!>(LLQ_b<:=?($-s*`k;+d^"D6^&#7-ci-5RSYldQpOH(cF3<(a
%[r/Okf&d,EhNrUb-YK\,4@@TP1R_77X:e]i=:!-JpPoIh7FS3_p-^sVR_)8sp.XI]#OJAF(P]eL7-Ep>\sofBpBjQQURSW"*c0Ug
%->pQk.=^DT?9H,h<g7S^rM%.DUE2h)ZgsKUX6h63g?Rq10gBfql<AjK<+V]]o,EibNm5%VCA6_.MV'>s1mGmq6KdjGcOj=eq$-Xo
%[MnZ2M)l5<l,?hRa9UQpFZ74TB"nu%5<c/qg%=.ObF#-CNHr+WcQ>#GR#QmKJE7dr55/sMTt<&O23]&fUaAiN2n=fM^=RO7MHe*\
%b/+a^C<MmoVFI:YhdI]%'n;c8ad(\_$1`B,d=;Ahjr$QP%TA)+atloK>1Z<:76Sa@Mc38-CNBTQ8e0KI9g/hrSipe9EA$:2HA:l/
%jV;WBjcQHTSS,<uQe>D:L;DD^lEHK/8m?qTVD"P6!p70hO:]+9:O+J&n_h6_n%>ef3mQtV<SQ2q=<W>F@On;:]#.GkSi13SJ+hBn
%f&Z1T1>`=IN9chP9`6l\**_<JGSh;\Z($3qO%mUEO(q$_>fIrBVdGCjkjSUI'*LmcCc-NdOD\+JHDV:fR3_m'50dnAoi/*lni"B5
%i]VM!I/^jGS'@jk[n5Fp*_S^g1IPtIam.'?1jMY=De]742MI:<Om(^n\k2.8dq<aGBKp%f/UX<:d#-_"ZId=0CHl7fn4Jq'O(j2Z
%JA.H)D8%+_BWHD"k.%70,?)A!&BB_-a,f9SO+qHj>JIaRnBXQ[f&'e*'KehSes<=cQEu4.>O"<soW@^R&AosPq5\<`&[`oWf64_g
%D>Rpd2,IDcjdfj0+iW]W37)?Ae(E7*X_!FqLlJOkg!j`uY`MSL<8u$]K9sSSKak"W#%;/Q:+kKdhrGR-qh(-Be6Eh#V8@t+n`LBd
%V]8C@N^&]d.\4uFARh[b<RZ&ZW2*fbAp8IR/"+GEZpcm-36Z9,A&e^6eWkQUk$Q=peamc9gZBj<_FiuP='F%D?uhKtXrGOh:FhE0
%l#c')e@ZAKZ?A8b<QIBucCEr;N`(9.\P(tLs"s[@BBW&4@_,"gjm7*<3QAc)OOYTKP?=AKG2qF%FhEg<V;obLcF[5GFZ4W.T>*GP
%P>S/XJd6Y-[G?I-[dr]8%]?0EcJ`%JUc;s=Ln.VLO_;#nV0_h6d3#,%H:hh[)(#!XgaD"-q?fe@F#"Pm-H,f+"mnPVe9$,LQJ10n
%Zk]$GMmoMtj$T#B@64GX6;2ZHZZDTdDp6keh<eml4.:WD-[Rq%c[OqU$(I!_P\Efb$,qtK3Eeh^ZhU+W</P1bSij3IV/a_MYh>t0
%P4&fuk*K!>f%p%uq5R3ID5<*#qn-p73aT@a%N3@Q+MG>P:@AJ=>U$F5]m9L:C2KOWo;eAWgi+ZQVqicT92q'\rAN1OG0]NR:/7!k
%@C'4@D2IW5]nM\l]95`<?bA7d$e)2S:/gNjKP/pjDeXQ)^kPUl[MI`jX8-ch6o+(D_GoQi]l/5fT=6&@ZEZQa9#Tcn/Y`*+'^[>;
%#Lg`BD%U\<Sd&fXR[H3"hfq_qY'1@RB1ok;\^ISXBp3Vd$hHM0a&F1LJBb4<HmX"17/t1I&5UIjm2I.fkUe.9n^B(!SsB/!p@ra5
%5sc_Wb"_RFe#_]u"%)a.I<b6,Tm'9gFh<-f?$bigUn@OfNUYjBCDJ@XP?olM+DP?.Sc4Ii*n'f)o;R1g\1j#[g?p3B+Er5Mg+u.&
%3F.(K6Z`R,pcTD-WC$W^OfclE2-mi+El%"1Q0S<FI14MRd\,!r8c1-`j>1Lg!B/^6)18E$Y5!5t(I$AiEfb^<]Y22:e&o5,QsWR%
%lT;<==C@tOAsBV`qe)6@=L[9Xg,F9RgaFO%F8/e)?KK@_)QeCn:KHZ?@s2M01ii>GV7UR2[$;JgMbM7t4.rAcQ?Q=-N#[\J[.O;9
%)XYpF*Oa-3n%aD)Tjqf-O:dpC9f_(PdjS-Y9C%C_eH<Dk"&-G)bl0peFjf!ik"<%:[B\1W.r3El,i,18kK4T4pH>is]u=c,IBlZp
%o4I]:SAGgNq>D0N670;XX_FD%@p]`V59FD6bfZdKNS7]fDKjP;\Q3(AXJ5]%R]dPNLtc9<1QAdOQP1_)UfT\T&i<o;Z_A8^DK!EB
%>"U`[e^]#Z].eALI!n9";L1R/#//M:=UZ*Fb0s0Yc0J?&e>^Q[P-J%^L\;XD<S2*=@X\(!*r>[S-nV7;C%0*>eEQ5i7HgOMHccS+
%cgXUE#&kuI?BWW]q1nr[D.l1o,UA0AL8Q20]mZ^E>9+pb\+Bn5jL"DCW3W9k$JiGWn(S(RXqXZ[DAA!#:'IAU[^J?pV4gc=RQO_s
%aU"ulI+dp%r2:jEd+T`q1GPER-\:7ChVj06$%gG-#5YsZDMASpI]lR%R=h%(Qtk4`(Ll^DCG1c`&>iua-0EhANp!Uoa%+7(V8hTe
%lHj\:-M`GZOs![u1m?5H;_I0LpA2k-a7F@6nah]gp=^H4Z,0G';(Gr-;7fk32XcUZ4_<Rn(UrUUgY,8:;!k8NH6Aa4$e_@QO+8h3
%DM38`]`PanKmZ)[P\^u/SQ6GB`8UNRTU+WGea?9)ZCfC/O9r(4EFI3sYO;;V7pK_e9S8;XCp#mfG`_ADgmOWJn'5NfZe;@UXd;XK
%S=eW.]?WlX$Y1ucjPetH((p1E4J+ZkG.B;71rF4V[nKtk<D;(ImGdU"Y*f[)T#'s=,ot^mU6J0AN#jibIL-7jEm'_?q,B70qr[S:
%imm(7\f'*q2m48`O/%l^(Lhsn$?W<_=XmZ$O(4BE_V$LmrVY*4_DJmXS]a??,art"m@6B&k#N9'[gfVA[]koF+4%-MKJ^6]el"[n
%80P,2HqXb5Ccn3D><a4@;+EFI[FF1%>qR`Ld_"5M"Nq/HA<>KB?Q2pSKXI&t1--]Nd`#L8GN\CR-0.lXW^.Tu)7[nHEbtI,.]!Xb
%\s;:fo^/MSmc*qDp;tNp%394R1MnpPai+aMB?1f^<J$;bj6MlXIu<Q.Snp-tOtZ&n]O!/Xa35K5<hnP[5<'e#k2U\1=2(]kX;!>A
%ce5/Mo5m1ZT#`eb+]ZG\b,N;7XWkBE`&D<5)(Vb*[PCCFVqS,=#jm0^+&.W6?UH*:h:&?hGW3.i3*2efi6adP+4a@L#W-CY$[aJH
%TC"6">@V7&2bX:nAGY]VB/ca[A=eCR<f=@h'p3ZXF>q$$NdKP6]Mmo:"3%I-WuL:hI_NG-)-V,9!&<=KaeRulJd<WNoc`uk'EsKX
%lIt<7J:cmeZ[I3_8K<t<_g^'0m4"[Ng.kg&)Cr_)=)-")-h>/1<tLq7(O+%04?.X6XdHYEVpR>2d%APMVK5\Hq\Qr;ljiTmfmN,E
%14/b;VZj,jj\]&7hUO.PflM4T2^IS=pKY9l?':sKFPp,jZdl]K2k"`r>0.Rnp4p%R@pdD`N?54TdEI2;<r,iM^G*E9Ok@@#\!C9)
%XL*$HRI)l1r&^rl[4h.)rq07UUeOVIbM:q6PWASHXIXM`Elb^uHJqq7"]s./^XX9AaS'Ohi;<5A(F=cj$@a1-GkXapp>H/iD;"@U
%98gYSN%#<,%HG&Z;g!u"i*?D6j@)Fqek<@$:R'Udi's&_\So+Q'#Bo._tX!o05rBTJ#ViHRf,^R=\X=W(E)#lZU=0pC]&+Y8JnR0
%5@,'%Zb7#8ZirhoSQcqZHi!7-q'KEhFkA`)L+eAg&!*;smk3!#0\7e`6Q]5\LJR^*\Yg\0`:>!]:U=P#H7`,IZM&FbjHmj2)!G],
%[1g-nWXhTE=tVa[+00#<&[(&N\JV'4i4B&ce[E;1pq4R`[JSq19D-ngr1ZUpT+ab<3n7[uFT6&M+(:tMP^,%H6EF@Q]K"C_o3+&R
%$/E^r60K$#n#-#F%8tG_To/^&i;2QX(k,`c>OX6*G96mX`i"L+hgZ#^s-TkBs7S\JF7]B4k)G2W71@qjs(Du`^qCAp\6LT"i+!WQ
%:#9ZjFJ.0Dqi':_G*\rC8-^REZj5l9(;/$)X*qeUWPACm(:j?)r_;q?*W/%<5FPajrduk'qs1'O^Z)F;qXmOd^INAtZ6-Wfdit'l
%dDHV9#G9N*c_.tG-3)\_A+$=o_dEDlg8>m:&""k*QBqpVI3O;Upq*\Zmu_]Fe;Km_o(#hd<G>LG+lW<,.%^Z57U09VDDgqSY2_e[
%f<daJLNfjVpcS!%)o2ou6=3B4f5`Bhj(E8AoaAm-b.A+9#B"`ieLoKmH!+(Z>i!jn)*Lp;<N`Ae1q`AX.d#Bl-cJ\fd/+iA\bp'l
%PWV6ghU%&1hDMnN^CoecI@YoZl+ne-I^V'2%q4qi]ggWI8,F0RBU.^%SB^t;)#SfaNBjATkM@F]$a76>*fnIK^%C36&%&ZR*W=Xg
%=CJ9-P4kHN4Y/b&3Ue7ZlSnf+6?^0E^G+S14*[@iASshZQ>+bS'>cS"bJOiXf*mF`fWJrCG[psWrLHj>2+>BiCbl\_D)5U9Q3m*J
%RU3k</;KnjbHN!GiYkQY1PJ+;h+_R;BbJKZGdc`9A0l%r\<.3m29^_$2"]<\qW0^LQ[1X"VFTX#.h[U!;.&-SGTK6EK^K^YUeG':
%>(Z/JJi\MWD:>j1[5.dp?G\FN:(W%#1^&AC8Mh")9'nI][KpX5$!/nlW"2t9&shpY];_Kj"/t6?#uB#ah1gK)#O*Gld(2nZHN_bb
%_KKTUNb]m[f1%8/`H0.IV^7L%OO,QqoC+dt1ZI&)_K9X#JkXqI,E>4IFA*b$9c,pBd+<AQo9N*Ih+.gr+B"uR)NKI/$nXcNN^/>g
%&/NM[+MoUNV<p9r<!U;Y7`'*b1(%[t=#dts+kP1+.j@*<YQSm1>$JRj3JHK=kX5Dl'=LK"'E[Yr/D%23*eQ_b>gpU-/2,sC)P^86
%FH@h?"&RHg,JlhRSs0F6/354G)mBb=lHfhC3WX=KW+d3^%je4g]Mgn*BZe%M+Z9J?MKK>EN\mO6+>*Y[4=d,Y)F.Im2_c;N9Qt@A
%McVhD%3q<p4%#pB$I'iT1#6#d@Ft)V"Blu+N^,Fk7OZ0C#th_7!-JpOLWtDF*!_Z53\W]@FCIG).@t3D\?7,ZCf>[W,Va&NZY2*[
%5Niep0[&%ODsWd93-:Yn1)$hT\.V_^g5^"M8dAnmFH.+K*f_Oa&[C"A*Mf?N$BPoUBL3Mea[m&+\L*GggnrbH)[C'q3%4&a6r,nN
%(de)OQ4O(UQ0%hO]!)/\CtlPA%:(/2J;=C4Dh>J(hai\.gP/L$,V_+p/.&8J6]bLcY)n&8\X(m6Amr#(R*?j*.]^g'MfB`$l/E\"
%Rb"6rGnU7+[3=ck/;0%DkhMGmob*]\&ghM,ZruCX#kkI^#iZWI0-^u)6GuO,F:u#*8Wd1Z\nOb>CGmo5YZrlE69-%rc`'!l3X&;(
%.>p3'U(0iVL9rPa_;],e-8uWl'#q-u>S:=7&@'!gP-AZf9G7Q:8_=:]@"^6<Z##k]pm7Ag[c@R_Vg5pa,($%a:I=<!BuS$0L2".1
%A3"b'_BH5:jc\kpjiD.ANV;QcW2:6k"6@"YOF&3\71bW.\m[)l=Lt$R,oUhV=(9KuKEkY:[]UpUQI#kKfTXbq-`I]"e+%ZGShSYN
%L5C0q/AY5_2m?C1O`\L][=M];Z!k1l?VhA3A!4K+1[%^F1(I$h6I-ii%Q&Ne,:(?P4lD`QJ//KROHd[r8YkNA19bJ:&-MPlQi"0]
%\C.lTS"sP!ae>#58sBs*BVqR,U/dA\9L,Hd&u*ieQkg^+nY&<k9"A?_&>2o*GYm4Hk_<tIODVN4'<MT;@#tl7>ZS.3Sg+h2&L>Gg
%Pb[:&&k(750o4nqC1RQh_'K!'KEeu(dm>3U>aEe<8\n+D+Z.`9N_h=\J;f^X%9*dm!W>\7YQbYOYtQktaG!N#7K]K;PN?7!Tof(8
%-t/bNd7Hht3nJmc[7K:Z3f+ZHPKFWmL.O/CdgUM2A.1GL"ZMPKM1=e_9$d.&]#YF*HpdPioY\IJ@)%d1GBb]#D+WqB\4nE_":P8H
%P[Y7+g>Ed'/Jm<1,S4r"d@CtLZu_n'Tq5t+_o/c+0PZ389aG8M\1iXKs1E2&DU=?&P\_dENb-km!E<]92YSKf'QUmo*E-I]!k("D
%:?`(Q@h(aV<3-IV12(73/!m%>F=m(ta[7(8eKcAoT[_R:JnDSZ6P=2Fo+Q8^p5.+<Z6uH4+p#Ti!"!.u;P[cT+CiH2%=cLP505=L
%5Z9:<[p=:9`+K^RYTScT_2Gbe8M"aHY*,2\P0T45NN?-0<jKPh-nutT7l&d8l!R!%X\`A_Yc(^=>U@q&)S33tD9Wg("G)S`:.kiB
%!MTs*;ato[9jTReNQ7NB;$kom$<@=lA+WIaiWp2EAA+/J)RMIi_8;M$X)+]$0V=/_#R"*lZUg00eVH`FA*@5).Qk.$jCg06)$Bse
%T\hFTX\2iVA:Wmlkf/oN@V(>=*S*+q,RkVN%bW,!_k^s3kA.0m**D8K$pRiMA;cU:CZ("o%q':GL*`99>LW:4+O!HT,$>pp.-spD
%@,cDl4.6pCLMg</A-c`f>@9c6gE:)NGtJN[Ib08R0ek;^E<eg$1DrSKA?`TNTJ/5FBG(&"&A:!V?N?3@@ZUbWKHW%Sd1n!\_<qZ#
%&#`ca*-O#D$$m^)J38m\Og_B;%MPU)B[g1;!(o_C'*6/cbjOQafX):rO\IIh->4mTmq^\%UBG/q#EVcGd!j&A@$'^FDFk$E7p<4%
%6/nD/<ONX!JK798hCVDPBMaI@PGLS*O]=m[U'nM;=G&.k+C72TDh'rb.BQjGB-j*`^afH(Ki,jrg@2=##>$U)),5#4\BHK8p##ip
%FO7ON\=Sd7#Urk]drf@^HQ$`'^(b@+hAja:6)\FpLG<(+5o0!P6hG.UR\F!s;V*)+oc/41-4DK-'e9u;Is<>;o&Pg"ka:>(ZIl)(
%GMmO&/DsfJRG5:e/.RLp1*[d\6mR]K`KC!R-0o7tHhK@&6=sF=,4lG9o4XmG;_r5]_?)U5.sjt/nf$0s1mgY[C)BjN\3cW"%V2[,
%3Qau;ieQhj*3Ads"[VOcRcHflK5UJ@,W$&G!S_2f4+e5)*4^QnEgQMr/.\2d=ZM@i85R]Z3"gX#ChU--#`n>h&9V.:D\C-R[]Tph
%_fZuV@iI%tcd"AQ"'K8N8r2,E&I=E;0UVRd:Xn')EG18rkt9C.aHbrKL,QJc(8<[UA<.8/iIWePH33^I4bo(e1WYek5o-2V">4'_
%oD0S5GouN#CnR@bNYJUk[E3Np(e!5C-i(^fp^/pca!9$<8LHt-18XUe0h0G6]Bl]f3'QA;VX+X2j*'q.9ge)uN`8=J,$RsVqZ;qJ
%V#uQ@8O1X'C<<[rM80ZP0Q^>,&:=QI4qWlb0q"/''(D!NJDbOU#)D6a*(UNU%R-7jb"+]Biq=?=.MCg&05sM[>)oFK,i[>La>HP(
%#14(-$ERB_Noh4$=LK*X?VRklG]e/5)L,!q56_U$o-DE,Q,qL/k4sF*/'Y<[%#2Ys+2h,@7_9%+E>;#8"jX$CbABLj,2NM>2Uo`/
%%1FMtaI31patZ4aZGLDa-/68#P0.:*LA6VI@buY4@7o%[,^JM)Jt':o6&GB9+fop@O./E$YompOmQ5Tc_c9\^"n,Z*$m>3(JL)HV
%3L"%=n2j2:PA<tla>bMnQDChRa*\k@`p#H)_P[])MmWr:=[nthr:#Q*G.6FtZPnRt%en)pLq[k*d+>GY]od4A/`\$DjN'fHLfcue
%"WbE+0Z_!VE<kkA[tpeHA7X`$l3*gr]0m#0+pk0ZWiq/5%=f!O-7fQAoSJB_#F6^=lHl[s*O_Qu16Nq,,H)uf,teNp-Hm$bXXQ"6
%&IbJ[P$N"1QUQR&Z:RN6&C2ODC<EK9m;[qT7sKSN,[ZAU-&?tK"J@S=M$s(Y**+;i+_GpY3bGBW("Aajo!H>=kR%OFV+h5om;`I>
%EW\'9+;OX'E$BK:S'YsWGQZC?-Y.g4^_oqK,Hq00lY,&gFr`uV%T+`\OTT.hI6!$kbC'q[U9B*`k/p5mkrB4ug#2W-E>C5Sm3E_C
%:WCG2Q"V"P.)<P*U;M0mjK_>[O9`+Dqa(e.H3?i_3,&B?BdkU&Je+4!`5W9P[]QOC:q;1O#-:.WnN&1H>lm_;k("(QR@_Dk,a/E5
%1Q\6,6!+4WB"PsVCKW\/VuenOIdh^F_F`FK+9W?M7H/kh='*s#.28?SB_<(GJ[1\e*KG<k?:`DP1A'oUVX7"4ojC*)#aY7k+2K3C
%ShH`HU5j&db*XkF0[5cdL!9r/d7HuR$G4QkHmk_[YfCiUW;&8R<u0OnRQh^MX\:a\dQHA)TXnc(P_l8,A!P+^RV`lKA9j>]D4(3l
%Js$6'Z8e(L#(m=Wg2]*,6NAk^)0Q.IXAknQmpqWeS0tYb:`-E>9f`PA.TDOL21.8Qlsi\Qg=!o^EKgh#%_NudPD22=fPsM'6D&QT
%2rGpDr??Bhl`$PliCV#IYqZ:mYZqbgFt$caC:#ioC1juV_)%PLUirU;1*m;Xisr-Ma=B4@^bH7\d:gHWK^>\;nI_9JQ,1]$M^MT(
%'.+SIN[,>Ei<iZGcJhZr,Y-&Nq\hdV#H8V?=k91`8ESit/'j/::K*rc;gP"-VCkAlO36;j]G<m-ojEQ,0O1>n"X:A?':!(tk*X#&
%kmc;1]\ufR&k!YV;BXR#Hje8C<C>bNA^?Ph-''$_):'XO[Qh*.9'.7k<(N*$j.Kd(`sSV*X9YsJ;7bqc"meQnU\)HT5OqpAh?=oL
%_D#iXSTGd=TsTK(g_\J>:Hg&$?&:]m<*-(0a;pZ>#*,;:57'2uO>jPG.1@L\%9nQ`aW4AY92LNu\1^DmR?A,#NPVG:c]IXZMTCr(
%0E@O#8^nD6=hZGOTi+--D^Zc7!tcH+)Q\i;f6&Bim!JurkV,7+%/c(N.>4H1MP3,;+c"VcV!CpbgMAH_Nm(Jr'?%2rP"!1T2e6"7
%iFEMt*XFUdJ!W]-EY+eHj')\QZk_LK5dLH$Qn3)G/UC+6YT78c$'(),.G_/JQ(Vq46cC1g?qFpG>HB6@B$f)JP!."Wl6:7@:`HRI
%.2t=,:q2K=Y^$;qNu7A54N4m6N57gehR`kK)'G")$ulFD,1s\A\I;OSr`2M^2>B!fKIV>;&h?cd%NAmrnne`.q*l<tTIc6;(=?M?
%'(sVk3T3H=9u,55p$_Do,!'4<WiqM8=Fu^'Yh?ZVAqa4m2:SGUoUo+4E1D/`MFW8U&Ol<V#0[>#L:Zku7P;/XD<R@W846:k<,r=3
%)`EAkh^*/OgK5S4T^_BZY_!E`&[F&F=cVa%5TENdi$<I"e6*:.[&1.9%$hXFA1<5.K]>QW8F@p1+[dMZWo==Ca#H@N6o77,H.(h2
%5g)JT$oZiV#XT^?`h!?M:06,"3YK=?/0m_h?R5"Ml#I=[1j)7W2O(%1lO","1%/lDm*j=iA7ndr-KG0dHSSBS7"c!;+\lEb5Sm>:
%6H%SDGY`?=bUhgRO`P]u[fjbu8L21`/l\SYR@:q]Ot#gfXDhG@AV!64XG$+6^W9Q?>fF.]T+ptV>p?6pQ)j)hI#EWQ+/a&(a@=C;
%]-9)NMfFl2EFi1A1p%g$2@<te>toLMlWJ\2h9i#rK50J+]E_*^oo0dtl$_3XCb3/`%(qgehq,^;XE't-"WAT,Cp@2RP"<O(A2:dL
%&%OMf<9\F0SJ,`<dbuBNn*10GE?p>;,FZj:d4?.Bem.:%%66!PUqsbeXje'W*.=Z-9h0s1.#,3)3BiV^[OOfjPq.L')@QhO(KARQ
%XldEI"c,-:j+%-36_O(%fBY\#=E4nr,GI[GKT2W5JP6s%Ea_qZVBML"r_>-@7?!Qf5Yr9jr18Sq6<M\!"EG7(d5[j%^OY+HLl6MP
%jp,$?\5Fq\5<++"8B<coMqA7Rd0OB)^^?;VA@;_\Z3bpZPES.Bb<cusPL2W\%7<EUGfS`Kc8?eN@Nje7kKSc#6C2OH'=rgUCmetb
%+O26'=;&E8CK^A<Fd^C(/H?FaQ7.N+!:h9334>]*<fMKG<f,&K=FmVJ-s=SGC<2"Z63[hf&;Q5X97^o8A7$8=1;S[%'Fr;0-d'PC
%,j]bZ:1QDu#9/dP,tVpLN%N+IA8`'pUQl+Q0=,VN%U:Ct/kD9g6LglS?"D)/,/V'M.d73Wa@r?07gaf@P>@!5kH56f,@I8!VFk.:
%l5,7J@E;-@.@jZXQ6Xm^1@If7cXmK!+O&(QMg[i]C6NXkm&6bfN9m7=/?02*"m+phL<+q_Qm2_o5oSTWIN<+Lnl.BsdTAe<3*hgK
%-C7%K2qrNRgpa&k,W)kk+0*.o28K]u9$K_S@Tm!tl7LJo+Q9!gl#?2_D"c(`A;sOd\gQNj65M-'CtV+EMTd3N?5&G'i);RebdGH!
%D::0:i"2A(?"F&?cI5cCSV2V`]T_9b"op6"Ymg9?K.:*m)Gh/:)n%j;=SFGK/5O?4H1=2e=>tr+X[\sS7`Aq2gQ2F?n0rY\._X'#
%/gL0a0T]e/NaaM0UpuBe(G%_&-$?Zb"GEbL/2A#BP(\FV9Fd:#HdNU**b3+`K#Z4Y?o.kKAWY_5!Q&M;$Qc)H$2E-oK'9u`K+JCQ
%^-kqhhcKPo)9M%K+=p<%a=&0iAXEl=8;[^<5&VZP6!H\fhGK/8E,$FK76e6,kq)>5NfZ'WM<cdIKPKie'8Y_V/S,%4qg_e;X/#nH
%a&H+Q*2\Ar9-m%El3RbCIA+i@*@Y>)Pfa7<P%)pMeLtbC'>Z8+-I,<k(,FfY(mK(Z2@QW@omC='UXi7=Lnq='l_@9qi]:?3LQo"0
%EAX2ad4i'k!1p;d8AgbA9J5Sg\d8E]paN0RKhdZR\JYXpg-\IR'#F5S':Pf`VIVh5A23F),ZQ]S1`@^C:oso]8B-T3M3%ujK>V9X
%)N'd7%%1l9'c8]"a[oPY,,@l/9./7Y'V"F8<3/TF&m!Os"u<[133bTKINl_oCp=#c.*b/EK?@:^pU_nb:86TW/"!*E.+8cu=jd-Y
%]Ik^-/44%?OPa#k0.7Nt\HJEcfCb5Q[ld$S^^LL30h3K"&347bl^M]Zg[a^PJ29>pO$IRb8U&*W9Y[:Z+uj+pFPDq'-8l/cZ>tKO
%C/,7!Z8g3^)":MU&E,BTs(rTS18Cg!4P616p1,#t[6Pk)?aZ,D6R3laA]S)!UhN6&`:Jm\a;e]b<'q\%//M5TVkZKk[>&3bftrkK
%!o7rM^Kcdlh@N+$rTVHS0K'O$WE=+j:sQ#_fSRk[UNT<-i5?0GreOhc3c!!i7?D+HH6&7cT#ttSRP]1EkT;^I/3dmG+[s@Q8qH70
%,;SD/jMA\4duhp&57A]]>5kSp0Q#BrJ3#7VFbj0YX\iEA;-XfIZ;XFB@t>e'QsJjk!/6dDKQb?6WWf)5b#l%08;M,_W02$i"-oPi
%H\mR*4,*f&56.G4dVhOUK4Y=ME^T6r-rS'<Nd=[E55\>`!C7=+KNTkT$"BC$Easr2FTrFH)U`'%&E`+X&3sWI!0sLg#0l*6:L/7J
%>a`]1(Zpb]&nfZo1fR;W*s*sZ9am#([tJu3%J+Q`>gE6XI0s9'j2'.9'*R5T5W#Wn1^*[jL'5VG#&stTb0%#jk.)t1BYun5-jXR6
%aM;7c6cKKnjD(WrDF43B/unoDZ(^ha5$\tr^<C3!Su,C@R\h8aa@`Zi$GuD=3)BYAE6(G:aV7(ak"._]7Og04&C4g"L[$WrVKaXb
%q-7G=kpi":%ZH,b^+N,Z#[*Kmi,Ej!:Lh3:2*L'c3#q<UJK3:;&D</%-iBp5<;)EE\qR8S-ua0*_@6[B%MtXN.`l<Rf,d*V`rI6!
%1`8a3ASD3u/6JR$@i2YR>*2l4_rMRS)bPR![2KijF63Mg8;!+V[0`$)O=YR%K01(:4I$#X:k]0=@#Y3gl#>WXa-),H[qsCl`!m>t
%Wa=PEYub'rUoW\r)2VU76ls(=kYmlZ/=/AeL[mJYI"PD*3/DLi91DdEkGiV*dY+X3KB4^!X9"ai:65dHCk`"10FYflNm,,&LiOr.
%0EbAVk<0[k[97,s'Gd1SPlcu!\2(Je6,4qkLNEtqNFC]hFq2=nlTo/qiIY=;52[\KK+MHWcjWsRk=]r%'da748:$G=*KTM*:gbHc
%5CtN!ZK>^d$DlWG\jJ9=AC(n?g66Mscf;YZWcf@*"6u<f!]kA=SkS7UQAQP@E9("_R2cr7$7ZL14W-'95S.J"5kPF^V!o\01>I`K
%9\3.9R:Mu7;Q1(Y`VFeMC"-%TT7]=jl%rb0+U'i'TdZU"Q*r$E%iYa1$EJf=IN4//APGXK#Se$s6q]N_-Gh4%73W*.5gOi+]JWG#
%Ec)hLaG3M97Y[3HPZent*#](Qfd1g;dRHpO<h@%AL"cf@/XA/P;96l=O`^hogZSsHn\O;je%is7*#"j1,bcYQPO.WZbe`U6(m7j]
%J#,NmdJt8k%FKgT(C(+'lA?8cLZN&u_W&0J.Mr@O=WS3A+F#?DYS?@+B+I,7hnkH[j;BGa%*:$3U:c$J!cUbBq@YXJn8NQ&m3cQZ
%a)DIERQ&mi"-f?ppe`*!@rPB\op^u"kVs5<Hr"9nfV,QL*/S1$^c+>s16;b`#Bp2417r+"KemF9g73)dck1Bt.\Qp+aZ-7R=@"8Q
%2)mZ:"X:*%XW4'`pk_7h$FMZ(%MifpYUeZUXo`uB&F=+]CqasEdM'24@QZIN.biqIKpL\k:,KUieX+J?aGj1+(Z(OqrY:%o2_o!K
%8ig\UgYg-RTB*DaFFrP/4%f]F*#*r-NPd/pE1-k?'=&GE#Sc9midb#h?iGS."p0C(Q\GN2@#.'BkSHo8/+@Mk62>/0)t5-ZQjj>0
%Z,MB@0OOVeJi+(O)FGO+l\B"-0!GEj5k(;c`LS5VTC'IqGO<Jl^%tJ-WX_"1L*aY+J!EhHr5Jon%MTWB;e\s2HVBa<X70R([MekK
%Q7&LJ%"3m=Z=+m_CfuN@`Jsu3D8E21NoDM.LMV4U2_N0F2e8<(ZXcDE1+ZErW3JI>:i\S/$$g>;Sj5!HiQ*\I%K[+*Et)8(Nf.Y^
%/jLULhC=%[CT/^,g]1A0>T<(AW1`jo2B<'b0c0mIKCA("LuP#95K5u5pnJ<tY<X45-kL460h>?t-Nh\7A-"_b6I1cH*H[dh.p(Dc
%S_t]ja%dcZkBq7R,#f>/+uEb"2"9$*S$DE*d\+dXA6H]d@eVJc-i=T&%k0\B^5hJJN\$Xo"g]'&V5J+/bakh@Q[L2(fTjDB'jYf'
%1?Mhqj<1-%P6LNI'4rYpFq#M[_fcb9XC8Y'0)q;:*2.>=Y==pbLh!Zm7rhb_<LU.qiK"ot#\9%"mO24cF%:@1OH8F+&XpfNTmVMW
%!\tqheP2e^eA@1LS*t$(-5.2uotY>Nc\k>mU\^^d6;ob:j@m\=7VWSpMCEZ@P>0e1($;)4.jK$-KU>\8/'"0"2p.59_sDjiHpPaC
%pL%Zphbb-4E\Sk.*jcO68R-'=a*J/O(%**,ZuHl#<jLmgdZJE-b.k>\^]q+:@gEA4inb0c_K^V3Gq.*j_HAe4!9K#,(hDQRN&f<&
%gQWF`HjPW_VO=`Kc]bi'Cr<Fr7LTM<M[Xl^!#=.tN%bWpMt_<B(s';XeAWV9<R.'&WlFDWGLLO6J1DJqPi,RF]BRE1nm+Nu8qQZF
%OLQ:*_OW\F?pf>c&`cY!,]=^KD#pZsN#YuGY0'-qLI##[=)a2l[:B:U:L_M1"'FEcZIP0U?hmm(i!N5H8E<P@?Am'N%=gKEfEe7p
%Q8RkQ66[&<RuAs5j?9Ra<5kV_b'O4;DNZF[Q\9<8(C(fY;;jVi09DMl0Sdbf,oN/Airr1p'T0.`GN?-,P8sVF!W6P!!deIHXEC=[
%2e>@N5W:I\Lt(,:1'5X-PC)iA+ZO64Fo>DoN+^V%QNpnfNrV-_n!hrs+Q?.k&C"X-E<nm5eh9*&6D<sp$EV*@?7M9PL"<9IqE<pZ
%Ha9</b@9G.RE.XtX,U:fO,I:uT^]<UBX#3)88]U[$2-C_i`;R$D^9ZJa1?6MS#bE&A(UJCOG0%_\=QC#^WM4aYZ["^:^1p<MeNN`
%6(u"VLf55MI`Y_Y6`;J-*s$B+](N3Z=2t&p.N<EjP4Pfl;MKUJ:g*XoC6E#C?n"IiL]'h5i0LpTb!eGG1aF8M^:bFMOjQE`SL#-Y
%H]UAoKL;cF@b-h0MkQ.>LZ0MYlKUo9^dX:+FW'7Tm*E4I0l$Q5V0h9;14IIUEOi<uK1S_E-f:4+>\r[+8"/^8Q@eNlM$,O<lpaVW
%-XaXj6nZ4JITk7+N3!LL$s?=Bm(r5PZ6Pk#(CTF>.i(Yd$dmWHL<`*HnJDu;\/4E_/(X&2@/DF3'Z^8O45g_X7M)YD%DM-_!^J#*
%$Bn>cKr_/I+MJ7'#3".C9JhHs!dP#6+rA+-6QWI^>^U5(&:fMP!eT4)Wni3iM5goRANNAf&BbN8_UB!g_>;"k[>Q_P\D8;BcAdO4
%Xre2T\_q)u(aSu>'*]?;1^.5HAA\jB8!ASc(+OKHLPE^?>dOZrJSW3PB&rijaAY13ncp?'\./L60LR=A=G^.-R>#/<_nO3`WJnTH
%MFP%\"j@QholS\Hl4P;E65V*RP,!<n,(!HBIfmMVL,r^CWTH34MV94V"SQ99^+0LJ2KbE`,\Pkn^*G'1iVgS"jgnj<b:V#rF#M+(
%<Sfcl3<8W3LZVF)lfY&EA[d[cN_5Yu;IcXU+@=n9dZM)%8U=0eqlpc8f2VlXZT+,-P`X$WHd;ZCf@fi^EZE^,?3(#C^(DIk+l(rs
%p(^"XJ-$WE&ge2%"Tia5-q\SPK;'qJ^HV7j<B]f_ced%Q&'6l]mr[1RoQ40:[48DA9"uD4&B6UOd]hc`<Zu/RG-o:!ii5E/J&0G-
%ka;@P3AU$Q7p@d"`A>u20(He;kI`0UP&n"\VP"6r$B9pBD]b)]YJN=U[Vb%"ohn28K]QmFBUXj8PJ[DW2^NF=ZZpKtSPW_0iR3:2
%d_AQ<c#(Mn^rhZNosMiSRHK-A81PO89(K0se`EX3NdXO*rN2^/JNO=B+=-(s'ZH,&>tDIj0o7/J**i"\eA\F7F;'*sp;:?ZL^l<!
%@6&oK2n9#7Mcm.#lZ7o9bZ)B^+KHYa=lBX0#>(*o."KsJ15TqQGhmF6^)8eaOcTt,@fg:7Lj5W>S%G$/(C4Lp-5DZ2fud%gWng8X
%!'#ta.&@&O_)oKBN]J3a->"o],/8Rs*e^2`I/i=W\\q,-:;h(E_[Jk,[T";]4!PV1!"TRR]J8m\MC:F8Sd_dm<7<"F*i@eH;?29Y
%a9dO?KV8OO-p/%15PPeCVO*X;NMo0h@-e'b_jUmU.#'m-iE@TcrFW:S$UcfS51n!g[kj)rcs*C.61>T2crr`.6Q>[#6VV\gWSCU!
%Z+@BG%>MH]Zf^uI"1?D!/W*6E<$K0dZWFt.X?$l"]$?XNipf09!7mEaRNAL0ID4'i=A7_j52R,9Q(+:J[:@(P5V-&(_n,OKEq3F)
%*=lb;/JW*V!"iZ]FZ=QQQ>49T(?\(_3PA/*V8QGTTJ"#c4W3;@Yia)?Qjb\U3`o&6RP9R@J8*>Oj-[in!";u`Fr#Vipg=/)oR'lW
%nDe]0l!H5Sk]ml:WH]+i\/b+\bu&AZ+"J0M*0t[P<DU]EaTNjF&PWs_U@$MY5[u<R=KqapdjCd3hJmW3Ir*GGnOhhHd<)h6W`>9:
%[14i@D%coX/kU`e/O`V@b-g&N=d'>(K:'0?4&@'nr[,s;=U^UYg0QSS*s:M9U9$i88dj<Y_W8slST7Rj=]Qb-iZ=X),iHB#f:(5l
%`*eF(PqXeaDUGng))$?bZ831\%L6NaRCTN;A&(@$g0X5MpeUGooJqMdM`"R#p[$gZU'&-AQ64IiqbGddU:[!#E">2jeicdD>"NIJ
%6Co!l-QQ;HQj=uLpi%`uN*Jc6"qUdg-@FR(YCG^<EftiLfUU:hdOo.[.7(00Z@Y7"JP-SC$dPGb8=`@>0!*D&9%YI;0B42?r>;S3
%=!VNZ,]nbpUUgk_ZA+6i7uu9q3jSi1J)dD]s-aEW>l_?=NrP9`"?gNR[5=&Dmh)EkkTA8]#BH6JHpnlcf(_XV:`2=mP2qt95\0LN
%jn^9"!_r?%&-$e"D!9(Yd2!q>_NR+h>q&EE=J#i*&!(c]d+8/S[a:;+)lb"j?(2Y7'lQThgsDlknThmXcl41W7iSe[&7&-Q(14R3
%8gSOe(8h;.&eYtPG=[38B(XXIHJ1tFEH&&j!fWoma<!/E)%=2I"3)MMOK4H35_hcR<:,;!+K6k>L<5`.IM5H!iI8$^;>.bKQs"6.
%ZiO%88cTc-'Q6Hf]TA)a\c-'4pN9NAX[)l.n0#k81c;`J-s^?o5/E=I^$YsLSh47S0M31=#S+NZR4s4,^kO)JRV[H<jPjYiLZ9^@
%AnPV.$@ptcn^[LGUXgAhjEn\MO^B<Tht?]pcI"3/*ef.DAHHp24?[!]p+57>g00FoUIFh&en^&sI!*j)"or`;>i:$8eg(f68tPGC
%kX,?$*AKo>)$X,A*D10P@@H2?^M^(s^j:-ebER@'eJ3<SZTRn@g9rX.$fs=s^QP+uj>7^>f;!c\a.u%t/8'Rap!M?Zo_CGE@YFs+
%LjLZ/U+M6>7@joJp1)<Kp%oYK,>"]eTR]BbQ"JLQamG_/m8.D%hZR%kH.<S"G'iXt1i6NfQm-:)G6D%LFdoaHIl#jnVZf^J"&E,F
%n&uYYV&W=bV2lY;$DATYeo-,hX/O`eb7<&!,(*ne/<;eZ<*#r)ome/Ei=fIM#N[<nS+-5r[_J\.p7`0I5M1Q5d1pNHcE[S:7gfFW
%'Y^2IUpMW;'W(t%(0&-p+:\VAWd=(_Ke)T6HlG]-U\gkjEtt.V\B!%kBN8N2Z)(p-Vo'fOiTtX+;L0%&Xb$i#4"`^<YXS&o<PgbI
%`dqc+Fc=:C\%/cq@_;#ph1HZYP9N'+ZU__I\Qt]6VM)kr`iq^iNAr]`=Ii['J2@Sg`02FJeA\=^$D@Vn<U_k>K2qBNcc"Dsc*pH/
%$`dCT(&m[q0U=n>Do[2ETlfYp;\g_J@iW0`*`#h+oV_`nBY4+S)Q%a.Ot^lO(BX9X@I<T#Df5G3Z<hHcpI(E3p,K/@U0&)[Z9o&!
%`DkV*.XJD%'%qeJj!GrGg7g^H_ZE[7E3l0q_fYGb`6ALAZ%cH/kq&Il_[BlX-cn]\8qP]JM\R<9Tr&gT].K)5hT!0GcPH9Tamp;2
%PHiUK/ZL>Xat[E%qo#i(Z]rNtB'7+Q1@0Sfgr*pDg;'bINgSh;CI,6m8lm:%%/ZXXT$A+5PV?b\DK^64HP9;1I`\Xp'J)POUBSbr
%Ba/TPf'5%N.J"Go$GnAdV.K]o,'"NIIEpbsB^AK8+Q?uH:1'q;mIf?FpIm_AN!oeOUa7"0=K)H$UFWhW#i+E87[_mCH<nHO`k#k?
%;hSUf#ohDS9[*lYO:']iE!L0VD3h4._Y.2VQk4C(69S%:4m7H>H$QF(#UI8H/t>fM_:Zt$^Woj-TMWh^_u1ebA>8b&cD+UpIGK3`
%/U:i$"44/Rr+kgR3U]Ai#SrL5]f7>"&DF[ddL8>l5IXEnI!j7MPST@hEKNG#U?i2[ErA.AD8_RDI#3*Q'lT8(NRHnGi1Dk/9F$tp
%B+7RiUjuBLW8nPc!Hc\a-FK06RrS"54WQN(nlFPXF%t66S3:Xf/#$uTB6OYj;Vs.u"@=<MpreQ@-TJ*Y"J[7+Ia]ao-[ep_PRZKD
%pA7t,Mrt9Njl+JCb&Xii3qH%Qh,fCK-4#?PQI_Klmnf0-Dr(=NV%h*r62=p6I.VT+oja7^Ela<lGc$+$ePk5=Xm\)UX!;"0L8:S%
%3E!L^\P(2*n:gBl,c2g;NV:7NbK;)A1o6.:UMUT8fm4.aG:<>.f+o@Qo/6UiikDCapLY\U&DrH@OiOS!F\[OrgCmG+bSFrR'/9[;
%Lsp/T:/Jl3VR2#b<%7nS"j[QcYcoHY8lads2rrKRlS:k#i13l0+i9WpC'7AO0Pk,=Rd9lAZ`7UbaQ`2HG(%"JH(<n,Om!Q3VV6.K
%7GD_`/.)"<GK(PH`-`$BRX[ASHT$\u].DM>A+Z3Z95&5?L%?r8d6+L\i@1)*9>OfC'%1lS2%Gf>FmKF?<'a&G,j#uNZ`bBD3=P#R
%MD:*ibT?,OJHh)nbeo)bTH%[<[`amS?3-l38V.BZA6*fd[^qtD$Io1jk9GhhMn/*(B:/.XB0Rn@%9!T-C[p*?/74<2&S+YdS.])k
%VAE4/1hE\n7GG6pnXKdULlq<UY4OhA+C\%k4TEMJ3mV\hcQT6TGXNXkC:]\IA97T;'nSm9Dn!6;F"=^K3YY2*NseHk%_ORIPhrbn
%jRc$u*\gc@Ac%m+,8!_DUM\D%K<XCc6gc,"c)f1n<1e(JVWdU8hp[9l'Y!<]gul*kVX1>[68;a>l&)A6)`NQPb@.,GEQ+)9Fg0'D
%mX[>j6s$m;k?H[q@:<(c8r-I=*P,G9B%.:5I57kDf)!5WPc+S-C?aQ.:o&(f7OMln*(:K]:?lOo79%487?1SF.t-/l>@+q(K1fip
%5@Q%t&sA8%U]5MAZ&E#P]`[XG[N"urQ;R*28@pI'#`&&u7*gXDptShJA1qVlWXO<h<`,N1>&>QG"t4;lcktPX1^eY<$+^:>"Q<KW
%$81)-cO0M:\5ON6Aou7)=UJ.8Q2j9k:e5"^^.$V$OVji'Li5d%/eI0pR\SO[D]`gJ@VX#R72Z<icpEIDPISKZl]/Df71>_Te]LD$
%'R;$!`DZsu!S1crFD*Or-7*=HT:o-3p?MERd$nQE$an)6#h]bI:*HI&CP5IYhThm$=U7_qJ%eF?UgL,t^SmJ3Z]#@_Q=NuX9#7D*
%/!M'=Tk],i4p3a_YRVQZhhN+']V+=5*b0.]p#R29+6Sgh1c%^19P:G;S]>DAKg4nc(p5RCI%0sa9la0U[mYRR)XTH-0Wk7pdkBVG
%b#aWf)JT.a*u.`^CNS%ke19#6+$I(OFW>1TDYg,fM#nu>5>imJP@j)mDA`_[bBgOcO1X7YIWp;g5Fgd"'M#O,jM0^+QHikA&!]&3
%oj&`K's#<\BkDIl-soY]Bpr.j\&E0^<Z*%a9gK?Z^3!V1B9=EkW/P?up"mRb+/dUoNkd.OKV`1XAhT:C#Q\EUX+s]Z`hbJ)%_CF>
%RuaQC'%4"lG[b,^eJ\sBks=b/V.q41`T,(\H&(\g&#?@qDMq3"TCtAXLf;/P;sMR'I+@cnIA,sbo:3"A0mJ'SPg$F@;@#H]ip"$H
%RbI7Kq@*BSk;mp.G+_93Wm/+@4X:K<m'!%6B3]>g=Qi)6T&Y_omP?H\Ha1^AAsGaJ=5&\0g_riALcZnp,#18O4K=CA=_4Rl)<+&I
%'9-*sf([4<<TRus<fQ=9WG@)n\'VESF5?THdJt^_BX)sW+IQG91N2SGIH'E[d!JB4K-(8`rpdB.4iHX<h8=?jB"g%*g$.OUj^DHS
%LPRkWRqlYJ8Ad=fCIfoL8bi.\YbgK\;Q;a+D:b1?0g0FOYho>*2T7'c-BIkaV@$ZuPge`<Qp`=EH$W.R+Q).fihAA6b?D+)K$o>%
%DEi:7,Opp#W[(_M,Hrs,8R7ooP8LJOPuH,)d_]@W3E^t29)+:bNDA6@#\H8aIMQc6HC""o:-A0=XcH&"[>maN.-D/b'@P4CUJPL&
%RRY_0OX_K]!"L+\;MS5ql1*a5Uq8+M-RGmoe9un:&CR?U1e3Ur<-?AHZH=)fpu!,KUd^>?b`F1G3)>ltqsP)cg_-QL`/`caP)Ls;
%:q_&CEP<Q[7r'g!M4,5WMDA3TCsM:KC>q3GcZH%1lI2KdZ*!uQD+dEmEgS,B3^WJmCIK&dRZlF(QF5<O5SYQ#'[Lhn;&-blY>IpI
%'b+`]*BiX7GtQOra[u8_;O80+2GA0QKk>S>r7kf0;SGgt$@sJ!.j_^^6VpH6Hn^NkPpPoTD?Rj6h&0u`dNM0!PN;+QhGh9"R0GX0
%E7D>e03612A#d3_;i@/]hrj0Y'7K,cQI\#nOs49Dkm'nOMR,mC_qh1.E@b/[(*dVT%V)>K.I%A!T%$QnH5h'3\!@a"WcC(hH7;l#
%n5a#3mnB]:f)R[BFGp/kmA+k=o+YMW3]0:=b=1&k[Bk1:`71OK=q<X/V(`\9d13M>Jp%:TZM=1=!ni0BVoU[YS#0#<'])<'(8WIV
%%hN"=.@>QiRq\S,HbdRUnh$ojEN!T#?d57+N%X#6GK+tL+Vj5&qofZB4P$+<!]Q_\"5CIs28JM&3NtSK[Z"C.XkI=E5ltE(=Qd(r
%Imc8breY4C)55dl"&hf+qDF0j,dsB;l)l0/f!p@jgT#T'cb)(aaM2S,g+j/cVulk2lc<_Xo-mJ+6*ai!<S%'^L,8YecN42'XrcMN
%[9[4*ZF91p@V81"cggRdO,rlu6INGU'D(7*e$AcAE*CD'E['bD<`B8Oe:*0$j/B`]EX25p59uc7Nt-S8/KG\f$'s^Pe*<#oHnru!
%'Sr22cQ1tcWE8HS0N>mHT<cUc\ktYOR"7pTOfDHTMYk()lg_dsA\+TKG3R"-lm19.A$nl]-Y0/]]lHWt@uC8eFB8_>L%CBi*^BD]
%^8F?k#_3OV@KORhd4HngXNj)qF7:jq/X?V40uXW=.A?HW@E:?5VWf>CF5(u4,+`^n/pus,D0kjMW@_I)J)DCbMP0RrPIJFm!H-a`
%OnUZPkr<g;3`Bm\U1!3/7iSi2(D[:^WTm)+9_2"`#Se=[aoBGXJ0&"O/cbET]22290l]A_Lr_.:N(>/CVJ8ZRn<[=U\H<`Z5!eDu
%OsNG!PYFtNT=ZFY#MtJ!glS1npJ=W;"Jj$0<q]Al)VZ>[)"X(YZlbR'Hng2YN0##=fHBCobM#Un)$%XknSMuq:9[=jde;D8`:eB*
%W)Q95cjCl]2dsjHMK2f3+^<2"VSPsh['iWg4+qk/ZR97]0Fk1^FiN!#Q[CmM&&ENuJK7h*J?d!&82JuNbYOX>UVg%]dj4^S2:mW#
%[kSL%2Kr@5+DFMHU(en-[k'CjV7.I==lS;p/e<#D<!R16a/J..h0.9`B,BYd5IeHpd9A;niFu[,/P$eKPao)pArj:T#Usmf1"::%
%5!jA-2,Z+?Pa"V!'ci&"@D$M[OjlW!C<+iQMDK3<-KH0`T/e==FD_2hK]V-%4AboJ:^pepcq_epX/]',`>c^>:nB*nkg(Mk]B),;
%CW6jHP]WK`kC\;rAC=ZFBSjO,l&5G@RG9>_"Y7,Bb<,lc.E*9O(!An]AJ\jT`'DIK$*=W'K./&,?A)4C-mC;&VD50iC*E5J0.g`k
%H(?86?laSJFola"Fju1N1VbKEgr2Z+hQYekCY:CTgiAZX1mj#E8*i%;-aF5-Y:]o!ojdj6:qC2]Q_up"jb(1-KYMb:[_+<,Z6[Wl
%4uXaop%ks+=TS8jB:J2Vgtc,7I\U]:1%f=bRLpcogs_![VP7_dU:^"-_^hWKHl\9^_N$=T=O-U:I]Pno0fgpN9[pu,bBQ]&/2a].
%Z1)jD[1]rZD?ab9kI+gq@'PQ0PP`3e=,uOEcVJDce($bPE?V?:IaFuCDoWfW&A?tAp"P?J3!(^^c>dGIn0op`\)KM/fUSqVjmr4Z
%;!Z\4IQ:7r[KII^'jTn<AUu[[9`('qK(9=@!+(H4cuu(nV#3*FR+^]rKM"5AX(3o[XKA\!C7#.9&9pZ^ENi&,"__%/HcURf%T`%W
%p;="2dH:h^/L5a/7Y/pb,nX0L6;HG:2K:JjcYYn"Gf(BoeV+8NS74+)\M$lBFY6-S^13-@,>]1%]$YSp\l;acR)%1!O6M;o*$'E3
%GRrgm4i[BS[OJpS?<t&hEHl[2SIhds=Zl/PcY\@cL^-H7a0m1;o5MNM5JMIDHjTsNX<A@/]YeJ_lp;K):sVkR'`H.600Lpm/cbY<
%CN",1rR$?h1%1on@H!BC'0:^1,k(tpTR:(Ba8mNqNL4:[A-qRq`/=s];8HD:P_$WUSMF9dZRnsjCQS-ZN+0c)Ypnu>+d-aLrRd.O
%?b`G9/lJmp26TtXgRFo\-%)%qk7jkXi1+_NT`S=c_@s2c/u_]I"/W@j>=F+MB,2L<=k.CHMlH!$7u.7]Hn>E\q/Uiji+[H#,6P/m
%h]B-Jl<+RZ2t&a%GTV+N[MoRrT-7h$'Mad3R[S0\"eju!pB+?<DG0PYVmL-B8rt(\qP@"q:6k@\\kQ*1eLGK%UZUtMBdd[<G#/OW
%M5[H&X_#+2hkJgFqY7t?HHGWe!$a80d[k"pV2qj0/k_TI2"M-@`O\A;Mg_?.l=G/&\uu6@gqW7YWItFZR#ZWkRYmak^VH,_4euJ>
%.ClDCV`m;YhrH[d*l25EC:$mF[W&qFDS8/:Ga6gM7oMkio10NifDth!eJNmVis]M"loTd1@U[CA[dsb294O!I;!6p249u3&"VpY-
%LuPgNo5#OCee]LE]JaKd4gu^I>0lQ[L,pMt-(RL,XJ`F0B,WS-C)N2tQ4crKQJ#9V[t,\X,u9+O/e6bP(`#8iRW;oX.]=2kS\Y&\
%;qk9+8L#DL3V4Bde;m)fZ>pg`SYn/Z!cqJL.iook9"[koZFMlbE^]Y3X#b?(+dAr(5/\^]2Q\bCZJfKH=U;Qb[5G0C/!]P5&U6R_
%/(9e:>HCbZWn@$Gd$^'^SDI6T)aM/8JpDT@+0(IVc5iRJI'BNgo$^"GQnt'#p]]4MJtj6tDnUPR0*tT87o2%lWYFRf@.`;uW=Ps\
%V^+MTi@HgCUsZ%LNSNuckWR_MPYO]EBM[6+?q8*S7%rEMKE/]tK/ccBhhQq$EMOug\3eDu(d[^r:6hd3c:s)E;KI#XAU;sV@?pt'
%eJN%+e_""pLPZ)!Qtr]dJ]YP]4BS(`RTR''Xq7fghDeLkmI<:X:c3YgZt'9A",2X(\#$:D-B3,ndr'tK<]LA6Pk$dHcH0q\4J-k;
%k^M\-F/B-D@MGNMI5MUk;#kPAhGPPm4;@%L7h`rK\P\T7d<-V1_KEaE:;h3M>X4R%>Mc=b&8:7mY?c91e6.O5GYWZ_b?%R8+SG5U
%"AEM;>p\&L%R`8faW!+VpM@+l)/D4*-tXCrO`o;GpSTZmR382sP6HRfA91oL1S\_d_j!_BWZ"J=+_T=meLH2ckW,=j>>T<h[&m6]
%G>j15X9Fl:<$&&&h*ZC!^f\H.Aa%<VrFJ`aN?[b-NfdQU,b$/AX;!"D&'cD<7sjA"m,]*Lg<^-$BPS>7=CYd#Kd0)e0qIH.@EQS:
%QJ_gonEe;PlH!-[5JN\qPcgSkoo[?b\;NNm((7:hY9"Je=b(4bVNjhc[P@H$Wn%B;=[q"(a%3a+R?D25VW->g6Ut[m%'-Jsg]CJc
%$g-pQ[@60*XUb#kb.2:^,p-XI;\I[$56`-YMt1.L[qlF0EFCMuP]gXrik_b2j4@JhI[2eUdfgJ%3@BhegGR<;&f7^IiiGg)<8)I"
%A%L<8cF_-Nr5kr`@[0K/[.G]G8jU&CUg2FTc\cG<B%]Yj@+m6g%'^<7niJYm9Jmh<cQnPfY-L\^G7o36;c7$WK]$U/#_!:!(ef"Z
%Fr#U/c@r98Ni<;'%l,hS-XA0UTikQqHZ6GgfbMK"jeF(Q;`Y_\*Go*P(/s$4^/$$l9d2&`!7A^6jrF+iZ:m^ZF",`6#^k/!>6*E]
%Bs+E@dLiYj(G9WQV)4P,ore'G$Hj0G($-?;3lTQ(_KMpfYZ#ch79X;RbaV+S:J_JRcIG;KX%CA$bnE-RV:I#2s!`jcQe+ipH^0jE
%8WS"$8jAiQ,Q^7HN9j1&8VJJ(8>+Vac@1(*oGHF1q;[DX^gOA.LG#DC'BTKCn<+:.[i)[_/a'VO/h#?rW-=)hjV[OAW+_HG:IeVM
%f3Fc6D);h:L6.(@n@9]cWiY9l7Xp]!i:C'0Ya+d>.W6G(TPm%-?\+'ag1u)(j`@krj/A)68VNu7pPk6[CP1p03>RbJMV"_$!I*"9
%&HnuOb55F64;F'*?f(b%.A7)R*I^`(1$MCf3fV;!TER%:Hc)FYCmMSLg>W"-/4mN:NlHLPAaCD+[^jF>9h25RE>J+?V,U.G_8NJd
%dr+PIgS8`3D+e,86m:$YZM@dNmAEIu/pf`"ou:0q*_;i`6"Q7=8sI1?68Y`L#[eXW63YQhkEr):RM8"QEbrcR7QLU?g0,!:F4Da+
%`jUZ6.C%_A)!ljq-2jl.hE^.qioYcsBglIl[qEXiW[i(&+9bVQ@NnAF9%I\;j7mf-k9W;(Q,YF5Q'b)gifCpn-1I+n/nrd<U*!t(
%.Y01C7#APW.42E=D"XI!CIahC$DR=+m/V)Aoj]7ChJLNqn[(,Fb,*Kc^F']P5k`YgDHo-(MC3mP0ock#.PXQ*:u^'pN;)j/<L'lO
%5*HdO._Efr+ZU_q?jje='%jk5/Q?m>:>,8.N=8c*&4!k<^6Od+P.e7Cg2!5dmkILW81?';id`L`Z:p[W:p#MgiVL*:A/B7$MGf+!
%V=VWpWfR6+W2AJdo\gL%LR+p_Vf0S$,)A9pKX424"k&s47bh3i0b%:^ktO7uB)1CJ%j?1p'?QghP(NieC<;,?LZMQ](kZ[9PA6h@
%N[Gb"-oAQ#4NFJM>suMAOs1R7VVKQqW@4a%(L]Gd^77uOLPooB*2ki[k>CoIr+*1T%91,^VmEk:+5Is&oFPAQeSrE,`HC]e[k2bf
%=geTG;\DP*^F#r.iX/T*$=-*%`?+TpId"W^[Gq@Eh3p`HMl2\GH5\J>^`a<i*fk`F#b;R.F[`a5\en/U?Z!`8f37*/oX6@p)Y5sU
%G">7tYm.8%9%%JJnC`3`aChH;%Am1db9gfc*)<G(9f]be,8B&@reZCPXuDWB&H^lX)e.Ds<I\+*,lu8^9ZUD=B2a%/>GLP)@<Y;M
%bG8%/IW!&]#Pp\sSHn=]XlpNW"=WqYnpTYaZsV]J9]:ZR^&,[e+J)8>[*NT3IMo=A>_+;I:U2'tMI1h\j^mXk$n\(H[HZP?3:@M6
%7g>EY;aP)X(_^nhO0>WaNgJncPDQ5?I^T[L)FoYDLQsZ*Z$:aUCKW"T\PK*c[^YqDa2;qAj>NPM^M\q)5FO@R6b?#d-)KIWeo(8,
%s74i=1*tljlZ?+@$N1STq)i0DbF2Ft8>>Um-L$K4V"-B%kO4&X%L8<Yl)@&ni09LYG*uUnJ>C5CX0-;BBNK@Y*HaA&67J;M4<.%\
%Ah;US3=n(l."O)p2PbpqQss8,N0MJ$rr!ji80a"`'*`QtZmh)T<VNdK#Km-a/DfpHR8VrE9Ic;sHH9E%/]Z#R9Vspi;`uIk]A`0Q
%UKE@R3kiUfm'P99>YeR^M*>1#C%p(7$T]YN=)Df&B$S`QF5PStrpio6:pR's"c7?+Z@>!f)LTi,kGemJnKd77`tX7C^tMj!Vi&^>
%1s>]s&R)=0YYQ(_Z+KBA`sOduVK)@5*n./"IsG*WOUAYP3`?4,/GP>B33]Y##>e"#i6O?_EDPggb]%/WBOAK6D4a\fO>ZKPpG425
%7B>dc[d(_kcat%*,p62WO\[L)DLskq30!4/F@7k.^1320oW>X-cXKc(S9"P_-:u>&-E/*%#q`BT=]rQ\'5\jd+GT6C3M8.]\jJ\<
%7B3J0hqc:lN"FJYD\\n8Jc:)<bOKn_p$`!A1s5=B;2@ieK2fNmJt!)c92=c8R0S@Sa08,GhLAB`.sm,COuX**e8=0]X403L>(-pP
%gF<ndVO^A]ZcU_5=36TaWpA+]=31gTW4,GVQ<aZg2i@uhB3#2Q<-e157sg8+4#S6Q/</$Z635]386)Z.@E253,ZInPL$J/\QGfQ_
%#G:'^[Cm5Ed0U"7fd_t21eNO!7E/h]i86OYTq&G?r[$,IgD-q47ClnpjbgKekgu<ED8hIt2e&J\cjEZbPD*MF^:UbaVDbVHVPt9Q
%laG'Cr9G\u>s:5J/]_3Y6/VnIBkSI:q:+R->cEm?['c?CVqmUeMZq;NQmj]W3;J[dXt&&R-+_XtaVC^iJ[aqM5YmQN<R"`!dWm"D
%X$*4Oqdb'HD30I*8sWsp;`n<PIYA(Tf9^C-Z^`CW9r2VO>7dZrQ2#uU-0[!&_+sah4&%0\_71,XY\OWYi^-'j<&F4g;OR2;cQ]\(
%Ii/QSS^4uC;Fp42--Q:]<>6$=g?p,84)gG*(ZM57AP8MWiN!OK7^S.nOhL"9-7",r<i`e4J5?^\Gd\C10%rXf8B@E)4&mXZkKg=B
%>-hqB:p"+E,J#XB,h/XB/O_X\pkbcm&1tZS2sE)?M+;#)CU_d$/jGFm/:Qn3>K'?!Uo^A.kaMm$B%h>-2^nm0$HC--:iB)r?!C[-
%e.D,Jpu+qIL1.QiY_I$9qC9d.f5R,6/h)N<9UpY[%bO!_.b.#7L?qX/gZfrkP='C$GIYhmjuYZ*.]-BC,'0qCH?qA5e5pkiPMn\O
%WO7$?<:W^[gM!TN;7J3;aO."U(1X<n+H.WB;$"<IGLgq/m(>,M'ggnQ-D4)#W_HOFI+=O&]t+Bnd1?'@7l,2MdG\c,,f@TRX$g0W
%BHOs-GnRbG=F9#\II*;mrVYd/s6[.b>W_@K!W&M"Q*0_f:sWKU._r>\BM17%q@iprs4UjO8DAKO7@_m*GQ_9`K8]595eeK[D/^`r
%3Lf@G@ahY4-S.P!o>8)uf\3X00\WpEB6r/NT0dO`3Y\6hSU4F_<[55"#d@YMp/A![\dg[aT[AG$^7)bVm"]djnAk9/`J7lVW(KX9
%*$X%'>mQ?n2>Dkh<E3"Y!Uap/\R"f+WAs/L($B?o'[.W$g42Q%86&^aa]=bjf<SBg!4R=OTH)[^l_r\c"k"4E*cL/V2I,,E>``H^
%>Af*sk:!2Z)\b%#=Ih%$2%<s.&K#n.YTM_E_>CA:q@e]"_G+'2lm4a?.^=WGcA^([2'f/Xp34b<B]D7_)723_`X6FJ<F.3W/s?;K
%,[mi/a&CI@+&0lF(cOqTqHA34b@S:-I.OLb"4>k7)']c?;$[:.g2&?qU9]Q@Q\Bu`;)tM:B7+?r+5V.V]<5=;RsoopZdkJ+.KKn<
%WkQW]>joVb$EUshSgC+SrS8e7V>ASbFc59b2r5t^.7/N$ciE<P?0HkC=hor22mB"E867c(UcH+A=fSdE\smn$JE^8#OmW318!.8d
%g8aA>'s/%:/=*kS"H<R5UonJW;p'dp)(n`3h\ka8G<PHqop"E!Pk#e?4G=,2Of+A"37aEbAR*>bA/0!p3kpK#MPlV'k8+Bh(->%N
%'kQmZSE(IIZk;`;r.;.j/,D8k>0AHsbGU/mqPZE'Y_+?/b*Iq(QEgnlXst.cMoq0Z>0CnbQ7=Sb7OPNl#ub_^%D*B*S@fm0LNe19
%Y-0a/[3Qm%.LR&@l`T\>%lJ=c&uAe`f37GID[/#;`T\WS#`Y3_ZF]"`g.iY=*gEWF'RQ58[[9fo>cCX8ekZ3kmH"LC2,5Ze(,f;Z
%KtO*IU_rV+D6u.%Ge9[KC`l<H!FCC_Cern*mtZ,#nCCgis8CJ$55WGt^\DC?m6?!m]<AsEbI9]`rco?0na5fFn=<6@WU`^15Q$pV
%G^29WmHad6`ioC)B0Z4FfAHS^O$A-ilFZ?eIeu'2r:&b(s5CkVJ,'#TDgqK)bMUJ9l[Sit^\mZk?iKaF0)`DKT7-7QS:5fjHeEoJ
%o'a-Sn+_N>IR,+;f72r/0D((LbLbYC([a``_L2kn16gDEH'uGHB3k57r;!DZ&#dK=R=R8X"9qXRK7Q<a7nS<`U36M-lYgJ#4'_OZ
%$ifrCYQ+IVQgN*P3PG@NbCBO6l/d,]?%;[B55WIRs.m:*n5h^Eoed3Yk-n]Fr8u$aI/)#pIf>8os7j3mbiYJ]9"EIPd]6"1odYB<
%4fk0Vhn&g_qZ#jTJ&ET(k:?Q+1Ak#3s/J;eL]4X;jA`=4no&Otf0ANrn,Ag+pilV[[F*M(?i/*?^O5uu)Vs$FkN_uK1_]eN^]*&s
%c2-aIihuhKc0rFGqM0"gn4.*/n,N%)^OH(Nc$/&ns5Q%&If%IC?bQC:LN!4bj7bccqspZbp&1Mfd-,B:e"?WWYPuFP5P]f$n7EI~>
%AI9_PrivateDataEnd
